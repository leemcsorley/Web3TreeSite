{"version":3,"file":"app.31117bec452ee688d8fc.js","mappings":"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","sources":["webpack://CubeHeadsUI/./src/web3tree-abi.js","webpack://CubeHeadsUI/../../src/fable-library/Util.ts","webpack://CubeHeadsUI/../../src/fable-library/Types.ts","webpack://CubeHeadsUI/../../src/fable-library/Reflection.ts","webpack://CubeHeadsUI/../../src/fable-library/Option.ts","webpack://CubeHeadsUI/../../src/fable-library/lib/big.js","webpack://CubeHeadsUI/../../src/fable-library/Decimal.ts","webpack://CubeHeadsUI/../../src/fable-library/Int32.ts","webpack://CubeHeadsUI/../../src/fable-library/lib/long.js","webpack://CubeHeadsUI/../../src/fable-library/Long.ts","webpack://CubeHeadsUI/../../src/fable-library/Seq.ts","webpack://CubeHeadsUI/../../src/fable-library/Date.ts","webpack://CubeHeadsUI/../../src/fable-library/RegExp.ts","webpack://CubeHeadsUI/../../src/fable-library/String.ts","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/MutableMap.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/Map.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/MutableSet.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/Set.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/Array.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/List.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/System.Text.js","webpack://CubeHeadsUI/../../src/fable-library/AsyncBuilder.ts","webpack://CubeHeadsUI/../../src/fable-library/Async.ts","webpack://CubeHeadsUI/.fable/Fable.SimpleHttp.3.3.0/Http.fs","webpack://CubeHeadsUI/./.fable/Fable.Parsimmon.4.1.0/Parsimmon.js","webpack://CubeHeadsUI/.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs","webpack://CubeHeadsUI/../../src/fable-library/Double.ts","webpack://CubeHeadsUI/.fable/Fable.SimpleJson.3.24.0/Parser.fs","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/BigInt/n.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/BigInt/z.js","webpack://CubeHeadsUI/./.fable/fable-library.2.13.0/BigInt.js","webpack://CubeHeadsUI/.fable/Fable.SimpleJson.3.24.0/SimpleJson.fs","webpack://CubeHeadsUI/.fable/Fable.SimpleJson.3.24.0/TypeCheck.fs","webpack://CubeHeadsUI/.fable/Fable.SimpleJson.3.24.0/TypeInfo.Converter.fs","webpack://CubeHeadsUI/../../src/fable-library/Uri.ts","webpack://CubeHeadsUI/../../src/fable-library/DateOffset.ts","webpack://CubeHeadsUI/../../src/fable-library/Guid.ts","webpack://CubeHeadsUI/../../src/fable-library/BitConverter.ts","webpack://CubeHeadsUI/.fable/Fable.SimpleJson.3.24.0/Json.Converter.fs","webpack://CubeHeadsUI/./.fable/Fable.SimpleJson.3.24.0/isBrowser.js","webpack://CubeHeadsUI/src/Common.fs","webpack://CubeHeadsUI/.fable/Fable.Promise.3.1.3/Promise.fs","webpack://CubeHeadsUI/.fable/Fable.React.8.0.1/Fable.React.FunctionComponent.fs","webpack://CubeHeadsUI/./.fable/Feliz.1.64.0/ReactInterop.js","webpack://CubeHeadsUI/.fable/Feliz.1.64.0/React.fs","webpack://CubeHeadsUI/.fable/Fable.React.8.0.1/Fable.React.Helpers.fs","webpack://CubeHeadsUI/src/Tree/State.fs","webpack://CubeHeadsUI/../../src/fable-library/TimeSpan.ts","webpack://CubeHeadsUI/src/Utils.fs","webpack://CubeHeadsUI/src/Home/View.fs","webpack://CubeHeadsUI/.fable/Feliz.UseDeferred.1.4.1/UseDeferred.fs","webpack://CubeHeadsUI/src/Web3Dapp.fs","webpack://CubeHeadsUI/src/Tree/View.fs","webpack://CubeHeadsUI/../../src/fable-library/Observable.ts","webpack://CubeHeadsUI/../../src/fable-library/Event.ts","webpack://CubeHeadsUI/../../src/fable-library/Timer.ts","webpack://CubeHeadsUI/.fable/Fable.Elmish.Browser.3.0.5/parser.fs","webpack://CubeHeadsUI/.fable/Fable.Elmish.3.1.0/ring.fs","webpack://CubeHeadsUI/.fable/Fable.Elmish.Browser.3.0.5/navigation.fs","webpack://CubeHeadsUI/src/State.fs","webpack://CubeHeadsUI/.fable/Fable.Elmish.React.3.0.1/common.fs","webpack://CubeHeadsUI/src/App.fs"],"sourcesContent":["module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addComment\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addLike\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Comment\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"tokenAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Like\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"user\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Profile\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"updateProfile\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]",null,null,null,null,null,null,null,null,null,null,null,null,null,"import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { format } from \"./String.js\";\nexport const MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n  void null;\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return class_type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5], MutableMap$00602);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    const pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  const matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7.hashMap, matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          const value = void getItemFromDict(this$$$7.hashMap, matchValue$$3[1]).push([k$$3, v]);\n          void null;\n        } else {\n          this$$$7.hashMap.set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  const matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        const msg = format(\"An item with the same key has already been added. Key: {0}\", k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          const value$$1 = void getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).push([k$$4, v$$1]);\n          void null;\n        } else {\n          this$$$8.hashMap.set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  const matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  const matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10.hashMap, matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  const this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  const this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  const this$$$14 = this;\n  const matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  const this$$$18 = this;\n  const matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    const pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      const value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      void value$$2;\n    } else {\n      void null;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  const this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  const this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  const this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  const this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  const this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  const this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import { Record, List, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, format } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union_type(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4]]], [\"MapNode\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4], [\"Item3\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item4\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item5\", int32_type]]]]);\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    const acc = $acc$$5,\n          m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    const comparer$$1 = $comparer$$1$$23,\n          k$$3 = $k$$3$$24,\n          m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    const comparer$$2 = $comparer$$2$$26,\n          k$$4 = $k$$4$$27,\n          m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return undefined;\n          }\n        }\n\n      case 2:\n        {\n          const c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          f$$1 = $f$$1$$36,\n          s = $s$$37,\n          acc_0 = $acc_0$$38,\n          acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$48,\n          f$$4 = $f$$4$$49,\n          s$$2 = $s$$2$$50,\n          acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    const comparer$$10 = $comparer$$10$$59,\n          k$$12 = $k$$12$$60,\n          m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          const c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $f$$6$$62,\n          m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {\n          void null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $f$$7$$64,\n          m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $f$$8$$66,\n          m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $f$$9$$68,\n          m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        const v2$$16 = f$$10(m$$13.fields[1]);\n        const r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        const v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $f$$12$$74,\n          m$$15 = $m$$15$$75,\n          x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          const x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $f$$13$$77,\n          x$$4 = $x$$4$$78,\n          m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          const x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    const m$$19 = $m$$19$$92,\n          acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$14 = $comparer$$14$$97,\n          acc$$10 = $acc$$10$$98,\n          e = $e$$99;\n\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record_type(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list_type(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool_type]]);\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return class_type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116], MapTreeModule$002EmkIEnumerator$0027$00602);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {\n  void null;\n};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return class_type(\"Map.FSharpMap\", [$gen$$120, $gen$$121], FSharpMap);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  let str;\n  let strings;\n  strings = map$$2(function toStr(kv) {\n    return format(\"({0}, {1})\", kv[0], kv[1]);\n  }, this$);\n  str = join(\"; \", strings);\n  return \"map [\" + str + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3682 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3682[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3682[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      } else {\n        void null;\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    } else {\n      void null;\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.delete = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  const this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  const this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  const this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  const this$$$7 = this;\n  const source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  const this$$$8 = this;\n  const source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$1(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  let _arg1$$2;\n\n  const m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return undefined;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  const m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return undefined;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  let res$$6;\n  const len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\nexport function createMutable(source$$3, comparer$$22) {\n  const map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$3, comparer$$22);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$23) {\n  const dict = createMutable(empty$$1(), comparer$$23);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      void dict.get(key).push(v$$30);\n    } else {\n      const value = dict.set(key, [v$$30]);\n      void value;\n    }\n  }, xs);\n  return map$$2(function mapping$$2(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$24) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    const value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    void value$$2;\n  }, xs$$1);\n  return map$$2(function mapping$$3(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport const MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    const value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    void value;\n  }, items);\n  void null;\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return class_type(\"Fable.Collections.MutableSet`1\", [$gen$$4], MutableSet$00601);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          const value$$1 = void getItemFromDict(this$$$6.hashMap, matchValue$$2[1]).push(k$$2);\n          void null;\n          return true;\n        } else {\n          this$$$6.hashMap.set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  const matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  const matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  const this$$$10 = this;\n  const value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  void value$$3;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  const this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  const this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  const this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  const this$$$18 = this;\n  const value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  void value$$4;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  const this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  const this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  const this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  const this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  const this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import { List, Record, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union_type(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [[\"Item1\", $gen$$3], [\"Item2\", SetTree$00601$reflection($gen$$3)], [\"Item3\", SetTree$00601$reflection($gen$$3)], [\"Item4\", int32_type]]], [\"SetOne\", [[\"Item\", $gen$$3]]]]);\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    const s = $s$$4,\n          acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          k$$5 = $k$$5$$36,\n          t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $f$$38,\n          t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          void null;\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $f$$1$$40,\n          m$$1 = $m$$1$$41,\n          x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $f$$2$$43,\n          x$$2 = $x$$2$$44,\n          m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          const x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $f$$3$$46,\n          m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $f$$4$$48,\n          m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$57,\n          f$$5 = $f$$5$$58,\n          s$$2 = $s$$2$$59,\n          acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    const comparer$$9 = $comparer$$9$$64,\n          m$$6 = $m$$6$$65,\n          acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    const comparer$$12 = $comparer$$12$$74,\n          b$$3 = $b$$3$$75,\n          m$$7 = $m$$7$$76,\n          acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $comparer$$15$$86,\n          f$$8 = $f$$8$$87,\n          s$$4 = $s$$4$$88,\n          acc_0 = $acc_0$$89,\n          acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", void null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    const s$$7 = $s$$7$$95,\n          n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    const s$$9 = $s$$9$$98,\n          n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record_type(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list_type(SetTree$00601$reflection($gen$$103))], [\"started\", bool_type]]);\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return class_type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108], SetTreeModule$002EmkIEnumerator$00601);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {\n  void null;\n};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const comparer$$17 = $comparer$$17$$112,\n          l1 = $l1$$113,\n          l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    const m$$8 = $m$$8$$120,\n          acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$19 = $comparer$$19$$126,\n          acc$$11 = $acc$$11$$127,\n          e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return class_type(\"Set.FSharpSet\", [$gen$$133], FSharpSet);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  const matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  const matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  const matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    const matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  const matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    const matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  const matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    const matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    let copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const x$$22 = res | 0;\n    const y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\nexport function createMutable(source, comparer$$31) {\n  const set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source, comparer$$31);\n  return set;\n}\nexport function distinct(xs, comparer$$32) {\n  return delay(function () {\n    const set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$32);\n    return collect(function (x$$33) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$33) ? singleton$$1(x$$33) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$33) {\n  return delay(function () {\n    const set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$34) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$34)) ? singleton$$1(x$$34) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$35) {\n    return acc$$14.add(x$$35);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$34) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$34);\n  iterate$$1(function (x$$36) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$36)) {\n      const value = s1$$5.delete(x$$36);\n      void value;\n    } else {\n      void null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$37) {\n    const value$$1 = s1$$6.delete(x$$37);\n    void value$$1;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$35) {\n  return isSubset(ofSeq(s1$$7, comparer$$35), ofSeq(s2$$8, comparer$$35));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$36) {\n  return isSuperset(ofSeq(s1$$8, comparer$$36), ofSeq(s2$$9, comparer$$36));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$37) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$37), ofSeq(s2$$10, comparer$$37));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$38) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$38), ofSeq(s2$$11, comparer$$38));\n}","import { defaultArg, value as value$$15, some } from \"./Option.js\";\nimport { min as min$$1, compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\nconst indexNotFoundMsg = \"An index satisfying the predicate was not found in the collection.\";\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    let acc = state;\n    const res = new cons$$7(matchValue);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(matchValue$$1);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$4;\n  const arrays$$1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$4 = arrays$$1[0], ArrayBuffer.isView(arr$$4)) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$5 = arrays$$1[idx];\n            totalLength = totalLength + arr$$5.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$6 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$6.length - 1; j++) {\n              result$$4[totalIdx] = arr$$6[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], eq);\n  const keys = [];\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      const value$$3 = keys.push(key);\n      void value$$3;\n    }\n  }\n\n  const result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  const hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    const arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  const loop = function loop($i$$12$$79) {\n    loop: while (true) {\n      const i$$12 = $i$$12$$79;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$79 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], eq$$5);\n  const keys$$1 = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    const v = array$$26[idx$$3];\n    const key$$2 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      const value$$5 = keys$$1.push(key$$2);\n      void value$$5;\n    }\n  }\n\n  const result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), (array$$28.reverse()))];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$7 = new cons$$15(count$$8);\n\n  for (let i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$30.length - 1 | 0;\n    const result$$8 = new Array(count$$9);\n\n    for (let i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$9 = new cons$$16(count$$10);\n\n  for (let i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  const array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  const res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (let i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  const res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (let i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    const count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    const count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addInPlace(x$$3, array$$47) {\n  const value$$7 = array$$47.push(x$$3);\n  void value$$7;\n}\nexport function addRangeInPlace(range, array$$49) {\n  iterate$$1(function (x$$4) {\n    const value$$8 = array$$49.push(x$$4);\n    void value$$8;\n  }, range);\n}\nexport function removeInPlace(item$$5, array$$51) {\n  const i$$18 = array$$51.indexOf(item$$5);\n\n  if (i$$18 > -1) {\n    const value$$9 = array$$51.splice(i$$18, 1);\n    void value$$9;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$54) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$19 = array$$54.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      const value$$10 = array$$54.splice(i$$19, 1);\n      void value$$10;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  const len$$7 = source$$4.length | 0;\n  const res1 = new cons$$29(len$$7);\n  const res2 = new cons$$29(len$$7);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\nexport function find(predicate$$11, array$$59) {\n  const matchValue$$5 = array$$59.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    throw new Error(indexNotFoundMsg);\n  } else {\n    const res$$4 = value$$15(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$61) {\n  return array$$61.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$63) {\n  const matchValue$$6 = array$$63.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    throw new Error(indexNotFoundMsg);\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$65) {\n  const matchValue$$7 = array$$65.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return undefined;\n  }\n}\nexport function pick(chooser, array$$67) {\n  const loop$$1 = function loop$$1($i$$22$$149) {\n    loop$$1: while (true) {\n      const i$$22 = $i$$22$$149;\n\n      if (i$$22 >= array$$67.length) {\n        throw new Error(indexNotFoundMsg);\n      } else {\n        const matchValue$$8 = chooser(array$$67[i$$22]);\n\n        if (matchValue$$8 != null) {\n          const res$$5 = value$$15(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$149 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$68) {\n  const loop$$2 = function loop$$2($i$$23$$152) {\n    loop$$2: while (true) {\n      const i$$23 = $i$$23$$152;\n\n      if (i$$23 >= array$$68.length) {\n        return undefined;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$68[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$152 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$69) {\n  const loop$$3 = function loop$$3($i$$24$$155) {\n    loop$$3: while (true) {\n      const i$$24 = $i$$24$$155;\n\n      if (i$$24 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$19(array$$69[i$$24])) {\n        return array$$69[i$$24];\n      } else {\n        $i$$24$$155 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$69.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$70) {\n  const loop$$4 = function loop$$4($i$$25$$158) {\n    loop$$4: while (true) {\n      const i$$25 = $i$$25$$158;\n\n      if (i$$25 < 0) {\n        return undefined;\n      } else if (predicate$$20(array$$70[i$$25])) {\n        return some(array$$70[i$$25]);\n      } else {\n        $i$$25$$158 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$70.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$71) {\n  const loop$$5 = function loop$$5($i$$26$$161) {\n    loop$$5: while (true) {\n      const i$$26 = $i$$26$$161;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$71[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$161 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$71.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$72) {\n  const loop$$6 = function loop$$6($i$$27$$164) {\n    loop$$6: while (true) {\n      const i$$27 = $i$$27$$164;\n\n      if (i$$27 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$22(array$$72[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$164 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$72.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$73) {\n  const loop$$7 = function loop$$7($i$$28$$167) {\n    loop$$7: while (true) {\n      const i$$28 = $i$$28$$167;\n\n      if (i$$28 < 0) {\n        return undefined;\n      } else if (predicate$$23(array$$73[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$167 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$73.length - 1);\n}\nexport function choose(chooser$$2, array$$74, cons$$30) {\n  const arr$$7 = array$$74.filter(function f$$7(x$$5) {\n    const option = chooser$$2(x$$5);\n    return option != null;\n  });\n  return map(function g(x$$6) {\n    const option$$1 = chooser$$2(x$$6);\n    return value$$15(option$$1);\n  }, arr$$7, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$78) {\n  return array$$78.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$80) {\n  for (let i$$30 = 0; i$$30 <= array$$80.length - 1; i$$30++) {\n    action(array$$80[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$81) {\n  for (let i$$31 = 0; i$$31 <= array$$81.length - 1; i$$31++) {\n    action$$1(i$$31, array$$81[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$82) {\n  return array$$82.length === 0;\n}\nexport function forAll(predicate$$25, array$$83) {\n  return array$$83.every(predicate$$25);\n}\nexport function permute(f$$8, array$$85) {\n  const size = array$$85.length | 0;\n  const res$$7 = array$$85.slice();\n  const checkFlags = new Int32Array(size);\n  iterateIndexed(function (i$$34, x$$9) {\n    const j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    } else {\n      void null;\n    }\n\n    res$$7[j$$1] = x$$9;\n    checkFlags[j$$1] = 1;\n  }, array$$85);\n  let isValid;\n  isValid = checkFlags.every(function predicate$$27(y) {\n    return 1 === y;\n  });\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  } else {\n    void null;\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  for (let i$$35 = 0; i$$35 <= length; i$$35++) {\n    target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$11, y$$1) {\n    return comparer.Compare(projection$$3(x$$11), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$12, y$$2) {\n    return comparer$$1.Compare(x$$12, y$$2);\n  });\n}\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = xs$$2.slice();\n  xs$$3.sort(function comparer$$3(x$$13, y$$3) {\n    return comparer$$2.Compare(x$$13, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = xs$$4.slice();\n  xs$$5.sort(function comparer$$5(x$$14, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$14), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = xs$$6.slice();\n  xs$$7.sort(function comparer$$7(x$$15, y$$5) {\n    return comparer$$6.Compare(x$$15, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = xs$$8.slice();\n  xs$$9.sort(function comparer$$9(x$$16, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$16), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = xs$$10.slice();\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$8 = [];\n\n  const loop$$8 = function loop$$8($state$$9$$226) {\n    loop$$8: while (true) {\n      const state$$9 = $state$$9$$226;\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$17 = matchValue$$10[0];\n        const s$$2 = matchValue$$10[1];\n        const value$$11 = res$$8.push(x$$17);\n        void value$$11;\n        $state$$9$$226 = s$$2;\n        continue loop$$8;\n      } else {\n        void null;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$95) {\n  const len$$8 = array$$95.length | 0;\n  const res1$$1 = new Array(len$$8);\n  const res2$$1 = new Array(len$$8);\n  iterateIndexed(function (i$$36, tupledArg) {\n    res1$$1[i$$36] = tupledArg[0];\n    res2$$1[i$$36] = tupledArg[1];\n  }, array$$95);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$96) {\n  const len$$11 = array$$96.length | 0;\n  const res1$$2 = new Array(len$$11);\n  const res2$$2 = new Array(len$$11);\n  const res3 = new Array(len$$11);\n  iterateIndexed(function (i$$37, tupledArg$$1) {\n    res1$$2[i$$37] = tupledArg$$1[0];\n    res2$$2[i$$37] = tupledArg$$1[1];\n    res3[i$$37] = tupledArg$$1[2];\n  }, array$$96);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$10;\n  const len$$15 = array1$$4.length | 0;\n  result$$10 = new Array(len$$15);\n\n  for (let i$$38 = 0; i$$38 <= array1$$4.length - 1; i$$38++) {\n    result$$10[i$$38] = [array1$$4[i$$38], array2$$4[i$$38]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$11;\n  const len$$16 = array1$$5.length | 0;\n  result$$11 = new Array(len$$16);\n\n  for (let i$$39 = 0; i$$39 <= array1$$5.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$5[i$$39], array2$$5[i$$39], array3[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$97) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  } else {\n    void null;\n  }\n\n  if (array$$97.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$18 = 0; x$$18 <= ~~Math.ceil(array$$97.length / chunkSize) - 1; x$$18++) {\n      const start$$8 = x$$18 * chunkSize | 0;\n      const slice = array$$97.slice(start$$8, start$$8 + chunkSize);\n      const value$$12 = result$$12.push(slice);\n      void value$$12;\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$100) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  if (index$$4 > array$$100.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  return [array$$100.slice(0, 0 + index$$4), array$$100.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$40 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$40 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$40], array2$$6[i$$40]);\n        i$$40 = i$$40 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$103) {\n  if (array$$103.length === 1) {\n    return array$$103[0];\n  } else if (array$$103.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$104) {\n  if (array$$104.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$104[0];\n  }\n}\nexport function tryHead(array$$105) {\n  if (array$$105.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$105[0]);\n  }\n}\nexport function tail(array$$106) {\n  if (array$$106.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$106.slice(1);\n}\nexport function item(index$$5, array$$108) {\n  return array$$108[index$$5];\n}\nexport function tryItem(index$$6, array$$109) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$109.length) {\n    return undefined;\n  } else {\n    return some(array$$109[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$110, state$$10) {\n  return array$$110.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$112, state$$12) {\n  return array$$112.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$42 = 0; i$$42 <= array1$$8.length - 1; i$$42++) {\n    acc$$6 = folder$$10(i$$42, acc$$6, array1$$8[i$$42], array2$$8[i$$42]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$21, y$$7) {\n    return folder$$11(acc$$7, x$$21, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$43 = 1; i$$43 <= size$$1; i$$43++) {\n    acc$$8 = folder$$12(i$$43 - 1, array1$$10[size$$1 - i$$43], array2$$10[size$$1 - i$$43], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$22, y$$8, acc$$9) {\n    return f$$9(x$$22, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$114) {\n  if (array$$114.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$114.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$116) {\n  if (array$$116.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$116.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$29, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$23, y$$9) {\n    return acc$$10 ? predicate$$29(x$$23, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$30$$281, $array$$118$$282, $index$$7$$283) {\n  existsOffset: while (true) {\n    const predicate$$30 = $predicate$$30$$281,\n          array$$118 = $array$$118$$282,\n          index$$7 = $index$$7$$283;\n\n    if (index$$7 === array$$118.length) {\n      return false;\n    } else if (predicate$$30(array$$118[index$$7])) {\n      return true;\n    } else {\n      $predicate$$30$$281 = predicate$$30;\n      $array$$118$$282 = array$$118;\n      $index$$7$$283 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$31, array$$119) {\n  return existsOffset(predicate$$31, array$$119, 0);\n}\nexport function existsOffset2($predicate$$32$$286, $array1$$13$$287, $array2$$13$$288, $index$$8$$289) {\n  existsOffset2: while (true) {\n    const predicate$$32 = $predicate$$32$$286,\n          array1$$13 = $array1$$13$$287,\n          array2$$13 = $array2$$13$$288,\n          index$$8 = $index$$8$$289;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$32(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$32$$286 = predicate$$32;\n      $array1$$13$$287 = array1$$13;\n      $array2$$13$$288 = array2$$13;\n      $index$$8$$289 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$33, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  return existsOffset2(predicate$$33, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$120, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$44 = 0; i$$44 <= array$$120.length - 1; i$$44++) {\n    acc$$11 = adder.Add(acc$$11, array$$120[i$$44]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$121, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$45 = 0; i$$45 <= array$$121.length - 1; i$$45++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$121[i$$45]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$24, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$24)) > 0 ? y$$10 : x$$24;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$25, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$25) > 0 ? y$$11 : x$$25;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$26, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$26)) > 0 ? x$$26 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$27, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$27) > 0 ? x$$27 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$122, averager) {\n  if (array$$122.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$46 = 0; i$$46 <= array$$122.length - 1; i$$46++) {\n    total = averager.Add(total, array$$122[i$$46]);\n  }\n\n  return averager.DivideByInt(total, array$$122.length);\n}\nexport function averageBy(projection$$9, array$$123, averager$$1) {\n  if (array$$123.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$123.length - 1; i$$47++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$123[i$$47]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$123.length);\n}\nexport function ofSeq(source$$6, cons$$31) {\n  return cons$$31.from(source$$6);\n}\nexport function ofList(source$$7, cons$$32) {\n  return cons$$32.from(source$$7);\n}\nexport function toList(source$$8) {\n  const len$$17 = source$$8.length | 0;\n  let target$$6 = new List();\n\n  for (let i$$48 = len$$17 - 1; i$$48 >= 0; i$$48--) {\n    target$$6 = new List(source$$8[i$$48], target$$6);\n  }\n\n  return target$$6;\n}\nexport function windowed(windowSize, source$$9) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$9;\n  const len$$18 = max$$1(comparePrimitives, 0, source$$9.length - windowSize) | 0;\n  res$$9 = new Array(len$$18);\n\n  for (let i$$49 = windowSize; i$$49 <= source$$9.length; i$$49++) {\n    res$$9[i$$49 - windowSize] = source$$9.slice(i$$49 - windowSize, i$$49 - 1 + 1);\n  }\n\n  return res$$9;\n}\nexport function splitInto(chunks, array$$124) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  } else {\n    void null;\n  }\n\n  if (array$$124.length === 0) {\n    return [[]];\n  } else {\n    const result$$14 = [];\n    const chunks$$1 = min$$1(comparePrimitives, chunks, array$$124.length) | 0;\n    const minChunkSize = ~~(array$$124.length / chunks$$1) | 0;\n    const chunksWithExtraItem = array$$124.length % chunks$$1 | 0;\n\n    for (let i$$50 = 0; i$$50 <= chunks$$1 - 1; i$$50++) {\n      const chunkSize$$1 = (i$$50 < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      const start$$11 = i$$50 * minChunkSize + min$$1(comparePrimitives, chunksWithExtraItem, i$$50) | 0;\n      const slice$$1 = array$$124.slice(start$$11, start$$11 + chunkSize$$1);\n      const value$$13 = result$$14.push(slice$$1);\n      void value$$13;\n    }\n\n    return result$$14;\n  }\n}\nexport function transpose(arrays$$2, cons$$33) {\n  var value$$14;\n  const arrays$$3 = Array.isArray(arrays$$2) ? arrays$$2 : Array.from(arrays$$2);\n  const len$$20 = arrays$$3.length | 0;\n\n  if (len$$20 === 0) {\n    return new Array(0);\n  } else {\n    const lenInner = arrays$$3[0].length | 0;\n\n    if (value$$14 = (forAll(function predicate$$34(a) {\n      return a.length === lenInner;\n    }, arrays$$3)), (!value$$14)) {\n      throw new Error(\"Arrays had different lengths\");\n    } else {\n      void null;\n    }\n\n    const result$$15 = new Array(lenInner);\n\n    for (let i$$51 = 0; i$$51 <= lenInner - 1; i$$51++) {\n      result$$15[i$$51] = new cons$$33(len$$20);\n\n      for (let j$$2 = 0; j$$2 <= len$$20 - 1; j$$2++) {\n        result$$15[i$$51][j$$2] = arrays$$3[j$$2][i$$51];\n      }\n    }\n\n    return result$$15;\n  }\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { transpose as transpose$$1, pairwise as pairwise$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { splitInto as splitInto$$1, chunkBySize as chunkBySize$$1, permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return undefined;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    const _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    const _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        const xs$$4 = $xs$$4$$10,\n              ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            const matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    const f = $f$$12,\n          i = $i$$13,\n          acc = $acc$$14,\n          _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    const f$$2 = $f$$2$$19,\n          state$$1 = $state$$1$$20,\n          xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  const xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  const xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $f$$5$$31,\n          i$$1 = $i$$1$$32,\n          acc$$5 = $acc$$5$$33,\n          bs = $bs$$34,\n          cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      const acc$$6 = $acc$$6$$51,\n            state$$8 = $state$$8$$52;\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $f$$10$$53,\n          i$$2 = $i$$2$$54,\n          acc$$7 = $acc$$7$$55,\n          bs$$1 = $bs$$1$$56,\n          cs$$1 = $cs$$1$$57,\n          ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  const xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  const xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  const xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  const xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  const xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  const xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  const xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  const xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  const xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, void null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, void null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, void null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, void null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $f$$28$$120,\n          i$$10 = $i$$10$$121,\n          _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      const result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : undefined;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : undefined;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  let xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  let xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : undefined;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  const array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  const array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  const xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  const xs$$75 = fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      const xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 0; i$$15 <= n$$2 - 1; i$$15++) {\n    xs$$78 = new List(f$$46(i$$15), xs$$78);\n  }\n\n  return reverse(xs$$78);\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    const f$$51 = $f$$51$$180,\n          _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    const f$$52 = $f$$52$$182,\n          bs$$2 = $bs$$2$$183,\n          cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  let xs$$89;\n  const xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  let xs$$92;\n  const xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  let xs$$95;\n  const xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  let xs$$98;\n  const xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  let xs$$101;\n  const xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  let xs$$110;\n  let array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function chunkBySize(chunkSize, xs$$111) {\n  let xs$$114;\n  let xs$$112;\n  let array$$4;\n  array$$4 = ofList(xs$$111, Array);\n  xs$$112 = chunkBySize$$1(chunkSize, array$$4);\n  xs$$114 = ofArray(xs$$112);\n  return map(function f$$56(xs$$113) {\n    return ofArray(xs$$113);\n  }, xs$$114);\n}\nexport function skip(i$$16, xs$$115) {\n  const skipInner = function skipInner($i$$17$$240, $xs$$116$$241) {\n    skipInner: while (true) {\n      const i$$17 = $i$$17$$240,\n            xs$$116 = $xs$$116$$241;\n\n      if (i$$17 === 0) {\n        return xs$$116;\n      } else if (xs$$116.tail != null) {\n        $i$$17$$240 = i$$17 - 1;\n        $xs$$116$$241 = xs$$116.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$242, i$$20, xs$$119;\n\n    if (i$$16 === 0) {\n      $target$$242 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$115.tail != null) {\n        $target$$242 = 1;\n      } else {\n        $target$$242 = 2;\n        i$$20 = i$$16;\n        xs$$119 = xs$$115;\n      }\n    } else {\n      $target$$242 = 2;\n      i$$20 = i$$16;\n      xs$$119 = xs$$115;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          return xs$$115;\n        }\n\n      case 1:\n        {\n          return xs$$115.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$119);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$243, $xs$$120$$244) {\n  skipWhile: while (true) {\n    const predicate = $predicate$$243,\n          xs$$120 = $xs$$120$$244;\n    var $target$$245, h$$4, t$$4;\n\n    if (xs$$120.tail != null) {\n      if (predicate(xs$$120.head)) {\n        $target$$245 = 0;\n        h$$4 = xs$$120.head;\n        t$$4 = xs$$120.tail;\n      } else {\n        $target$$245 = 1;\n      }\n    } else {\n      $target$$245 = 1;\n    }\n\n    switch ($target$$245) {\n      case 0:\n        {\n          $predicate$$243 = predicate;\n          $xs$$120$$244 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$120;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$246, $i$$21$$247, $acc$$25$$248, $xs$$121$$249) {\n  takeSplitAux: while (true) {\n    const error = $error$$246,\n          i$$21 = $i$$21$$247,\n          acc$$25 = $acc$$25$$248,\n          xs$$121 = $xs$$121$$249;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$121];\n    } else if (xs$$121.tail != null) {\n      $error$$246 = error;\n      $i$$21$$247 = i$$21 - 1;\n      $acc$$25$$248 = new List(xs$$121.head, acc$$25);\n      $xs$$121$$249 = xs$$121.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$121];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$123) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$252, i$$25, xs$$124;\n\n    if (i$$22 === 0) {\n      $target$$252 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$252 = 1;\n      } else {\n        $target$$252 = 2;\n        i$$25 = i$$22;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$252 = 2;\n      i$$25 = i$$22;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$252) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple = takeSplitAux(true, i$$25, new List(), xs$$124);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$125) {\n  if (xs$$125.tail != null) {\n    if (xs$$125.tail.tail == null) {\n      if (predicate$$1(xs$$125.head)) {\n        return xs$$125;\n      } else {\n        return xs$$125.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$125.head)) {\n        return new List();\n      } else {\n        return new List(xs$$125.head, takeWhile(predicate$$1, xs$$125.tail));\n      }\n    }\n  } else {\n    return xs$$125;\n  }\n}\nexport function truncate(i$$26, xs$$127) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$29, xs$$128;\n\n    if (i$$26 === 0) {\n      $target$$257 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$127.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$29 = i$$26;\n        xs$$128 = xs$$127;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$29 = i$$26;\n      xs$$128 = xs$$127;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$127.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$128);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$129) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$260, i$$33, xs$$131;\n\n    if (i$$30 === 0) {\n      $target$$260 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$129.tail != null) {\n        $target$$260 = 1;\n      } else {\n        $target$$260 = 2;\n        i$$33 = i$$30;\n        xs$$131 = xs$$129;\n      }\n    } else {\n      $target$$260 = 2;\n      i$$33 = i$$30;\n      xs$$131 = xs$$129;\n    }\n\n    switch ($target$$260) {\n      case 0:\n        {\n          return [new List(), xs$$129];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$129.head, new List()), xs$$129.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$131);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$132) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    let res$$2;\n    const state$$13 = new List();\n    res$$2 = foldIndexed(function f$$57(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$132);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    } else {\n      void null;\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$134, eq$$2) {\n  const hashSet = createMutable([], eq$$2);\n  return filter(function f$$58($arg$$1) {\n    const arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$134);\n}\nexport function distinct(xs$$136, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$136, eq$$3);\n}\nexport function exactlyOne(xs$$137) {\n  if (xs$$137.tail != null) {\n    if (xs$$137.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$137.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$139, eq$$4) {\n  const dict = createMutable$$1([], eq$$4);\n  let keys = new List();\n  iterate(function f$$59(v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$139);\n  let result$$1 = new List();\n  const xs$$141 = keys;\n  iterate(function f$$60(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$141);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$142, eq$$5) {\n  const dict$$1 = createMutable$$1([], eq$$5);\n  let keys$$1 = new List();\n  iterate(function f$$61(v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$142);\n  let result$$2 = new List();\n  const xs$$144 = keys$$1;\n  iterate(function f$$62(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$144);\n  return result$$2;\n}\nexport function where(predicate$$2, source) {\n  return filter(predicate$$2, source);\n}\nexport function pairwise(source$$1) {\n  const xs$$145 = pairwise$$1(source$$1);\n  return ofSeq(xs$$145);\n}\nexport function windowed(windowSize, source$$2) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source$$2); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$2), res$$3);\n  }\n\n  return res$$3;\n}\nexport function splitInto(chunks, source$$3) {\n  let xs$$148;\n  let xs$$146;\n  let array$$5;\n  array$$5 = ofList(source$$3, Array);\n  xs$$146 = splitInto$$1(chunks, array$$5);\n  xs$$148 = ofArray(xs$$146);\n  return map(function f$$63(xs$$147) {\n    return ofArray(xs$$147);\n  }, xs$$148);\n}\nexport function transpose(lists$$1) {\n  let xs$$150;\n  let source$$5;\n  source$$5 = transpose$$1(lists$$1);\n  xs$$150 = map$$1(ofSeq, source$$5);\n  return ofSeq(xs$$150);\n}","import { substring, join, format, isNullOrEmpty } from \"./String.js\";\nimport { declare } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { sumBy } from \"./Seq.js\";\nimport { clear } from \"./Util.js\";\nexport const StringBuilder = declare(function System_Text_StringBuilder(value, capacity) {\n  const $this$$1 = this;\n  $this$$1.buf = [];\n\n  if (!isNullOrEmpty(value)) {\n    void $this$$1.buf.push(value);\n  } else {\n    void null;\n  }\n\n  void null;\n});\nexport function StringBuilder$reflection() {\n  return class_type(\"System.Text.StringBuilder\", undefined, StringBuilder);\n}\nexport function StringBuilder$$$$002Ector$$Z18115A39(value, capacity) {\n  return this instanceof StringBuilder ? StringBuilder.call(this, value, capacity) : new StringBuilder(value, capacity);\n}\nexport function StringBuilder$$$$002Ector$$Z524259A4(capacity$$1) {\n  return StringBuilder$$$$002Ector$$Z18115A39.call(this, \"\", capacity$$1);\n}\nexport function StringBuilder$$$$002Ector$$Z721C83C5(value$$1) {\n  return StringBuilder$$$$002Ector$$Z18115A39.call(this, value$$1, 16);\n}\nexport function StringBuilder$$$$002Ector() {\n  return StringBuilder$$$$002Ector$$Z18115A39.call(this, \"\", 16);\n}\nexport function StringBuilder$$Append$$Z721C83C5(x, s) {\n  void x.buf.push(s);\n  return x;\n}\nexport function StringBuilder$$Append$$244C7CD6(x$$1, c) {\n  void x$$1.buf.push(c);\n  return x$$1;\n}\nexport function StringBuilder$$AppendFormat$$433E080(x$$2, fmt, o) {\n  void x$$2.buf.push(format(fmt, o));\n  return x$$2;\n}\nexport function StringBuilder$$AppendLine(x$$3) {\n  void x$$3.buf.push(\"\\n\");\n  return x$$3;\n}\nexport function StringBuilder$$AppendLine$$Z721C83C5(x$$4, s$$1) {\n  void x$$4.buf.push(s$$1);\n  void x$$4.buf.push(\"\\n\");\n  return x$$4;\n}\n\nStringBuilder.prototype.toString = function () {\n  const __ = this;\n  return join(\"\", __.buf);\n};\n\nexport function StringBuilder$$get_Length(x$$5) {\n  return sumBy(function (str) {\n    return str.length;\n  }, x$$5.buf, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function StringBuilder$$ToString$$Z37302880(x$$6, firstIndex, length) {\n  const str$$1 = String(x$$6);\n  return substring(str$$1, firstIndex, length);\n}\nexport function StringBuilder$$Clear(x$$7) {\n  clear(x$$7.buf);\n  return x$$7;\n}",null,null,"namespace Fable.SimpleHttp\n\nopen System\nopen Browser\nopen Browser.Types\nopen Fable.Core\n\n#if !FABLE_COMPILER\nopen System.Net.Http\n#endif\n\nmodule Blob =\n    /// Creates a Blob from the given input string\n    [<Emit(\"new Blob([$0], { 'type':'text/plain' })\")>]\n    let fromText (value: string) : Blob = jsNative\n\n\nmodule File =\n    /// Creates a File from the given input string and file name\n    [<Emit(\"new File([$0], $1, { 'type':'text/plain' })\")>]\n    let fromText (value: string) (fileName: string) : File = jsNative\n\n\n/// Utility functions to work with blob and file APIs.\nmodule FileReader =\n    /// Asynchronously reads the blob data content as string\n    let readBlobAsText (blob: Blob) : Async<string> =\n        Async.FromContinuations <| fun (resolve, _, _) ->\n            let reader = FileReader.Create()\n            reader.onload <- fun _ ->\n                if reader.readyState = FileReaderState.DONE\n                then resolve (unbox reader.result)\n\n            reader.readAsText(blob)\n\n    /// Asynchronously reads the blob data content as string\n    let readFileAsText (file: File) : Async<string> =\n        Async.FromContinuations <| fun (resolve, _, _) ->\n            let reader = FileReader.Create()\n            reader.onload <- fun _ ->\n                if reader.readyState = FileReaderState.DONE\n                then resolve (unbox reader.result)\n\n            reader.readAsText(file)\n\nmodule FormData =\n\n    /// Creates a new FormData object\n    [<Emit(\"new FormData()\")>]\n    let create() : FormData = jsNative\n\n    /// Appends a key-value pair to the form data\n    let append (key:string) (value:string) (form : FormData) : FormData =\n        form.append(key, value)\n        form\n\n    /// Appends a file to the form data\n    let appendFile (key: string) (file: File) (form: FormData) : FormData =\n        form.append (key, file)\n        form\n\n    /// Appends a named file to the form data\n    let appendNamedFile (key: string) (fileName: string) (file: File) (form: FormData) : FormData =\n        form.append (key, file, fileName)\n        form\n\n    /// Appends a blog to the form data\n    let appendBlob (key: string) (blob: Blob) (form: FormData) : FormData =\n        form.append (key, blob)\n        form\n\n    /// Appends a blog to the form data\n    let appendNamedBlob (key: string) (fileName: string) (blob: Blob) (form: FormData) : FormData =\n        form.append (key, blob, fileName)\n        form\n\nmodule Headers =\n    let contentType value = Header(\"Content-Type\", value)\n    let accept value = Header(\"Accept\", value)\n    let acceptCharset value = Header(\"Accept-Charset\", value)\n    let acceptEncoding value = Header(\"Accept-Encoding\", value)\n    let acceptLanguage value = Header(\"Accept-Language\", value)\n    let acceptDateTime value = Header(\"Accept-Datetime\", value)\n    let authorization value = Header(\"Authorization\", value)\n    let cacheControl value = Header(\"Cache-Control\", value)\n    let connection value = Header(\"Connection\", value)\n    let cookie value = Header(\"Cookie\", value)\n    let contentMD5 value = Header(\"Content-MD5\", value)\n    let date value = Header(\"Date\", value)\n    let expect value = Header(\"Expect\", value)\n    let ifMatch value = Header(\"If-Match\", value)\n    let ifModifiedSince value = Header(\"If-Modified-Since\", value)\n    let ifNoneMatch value = Header(\"If-None-Match\", value)\n    let ifRange value = Header(\"If-Range\", value)\n    let IfUnmodifiedSince value = Header(\"If-Unmodified-Since\", value)\n    let maxForwards value = Header(\"Max-Forwards\", value)\n    let origin value = Header (\"Origin\", value)\n    let pragma value = Header(\"Pragma\", value)\n    let proxyAuthorization value = Header(\"Proxy-Authorization\", value)\n    let range value = Header(\"Range\", value)\n    let referer value = Header(\"Referer\", value)\n    let userAgent value = Header(\"User-Agent\", value)\n    let create key value = Header(key, value)\n\nmodule Http =\n\n    let private defaultRequest =\n        { url = \"\";\n          method = HttpMethod.GET\n          headers = []\n          withCredentials = false\n          overridenMimeType = None\n          overridenResponseType = None\n          timeout = None\n          content = BodyContent.Empty }\n\n    let private emptyResponse =\n        { statusCode = 0\n          responseText = \"\"\n          responseType = \"\"\n          responseUrl = \"\"\n          responseHeaders = Map.empty\n          content = ResponseContent.Text \"\" }\n\n    let private splitAt (delimiter: string) (input: string) : string [] =\n        if String.IsNullOrEmpty input then [| input |]\n        else input.Split([| delimiter |], StringSplitOptions.None)\n\n    let private serializeMethod = function\n        | HttpMethod.GET -> \"GET\"\n        | HttpMethod.POST -> \"POST\"\n        | HttpMethod.PATCH -> \"PATCH\"\n        | HttpMethod.PUT -> \"PUT\"\n        | HttpMethod.DELETE -> \"DELETE\"\n        | HttpMethod.OPTIONS -> \"OPTIONS\"\n        | HttpMethod.HEAD -> \"HEAD\"\n\n    /// Starts the configuration of the request with the specified url\n    let request (url: string) : HttpRequest =\n        { defaultRequest with url = url }\n\n    /// Sets the Http method of the request\n    let method httpVerb (req: HttpRequest) =\n        { req with method = httpVerb }\n\n    /// Appends a header to the request configuration\n    let header (singleHeader: Header) (req: HttpRequest) =\n        { req with headers = List.append req.headers [singleHeader] }\n\n    /// Appends a list of headers to the request configuration\n    let headers (values: Header list) (req: HttpRequest)  =\n        { req with headers = List.append req.headers values }\n\n    /// Enables cross-site credentials such as cookies\n    let withCredentials (enabled: bool) (req: HttpRequest) =\n        { req with withCredentials = enabled }\n\n    /// Enables Http request timeout\n    let withTimeout (timeoutInMilliseconds: int) (req: HttpRequest) =\n        { req with timeout = Some timeoutInMilliseconds}\n\n    /// Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as \"text/xml\", even if the server does not report it as such.\n    let overrideMimeType (value: string) (req: HttpRequest) =\n        { req with overridenMimeType = Some value }\n\n    /// Change the expected response type from the server\n    let overrideResponseType (value: ResponseTypes) (req: HttpRequest) =\n        { req with overridenResponseType = Some value }\n\n    /// Sets the body content of the request\n    let content (bodyContent: BodyContent) (req: HttpRequest) : HttpRequest =\n        { req with content = bodyContent }\n\n    /// Sends the request to the server, this function does not throw\n    let send (req: HttpRequest) : Async<HttpResponse> =\n#if FABLE_COMPILER\n        Async.FromContinuations <| fun (resolve, reject, _) ->\n            let xhr = XMLHttpRequest.Create()\n            xhr.``open``(serializeMethod req.method, req.url)\n            xhr.onreadystatechange <- fun _ ->\n                if xhr.readyState = ReadyState.Done\n                then resolve {\n                    responseText =\n                        match xhr.responseType with\n                        | \"\" -> xhr.responseText\n                        | \"text\" -> xhr.responseText\n                        | _ -> \"\"\n\n                    statusCode = int xhr.status\n                    responseType = xhr.responseType\n                    content =\n                        match xhr.responseType with\n                        | (\"\" | \"text\") -> ResponseContent.Text xhr.responseText\n                        | \"arraybuffer\" -> ResponseContent.ArrayBuffer (unbox xhr.response)\n                        | \"blob\" -> ResponseContent.Blob (unbox xhr.response)\n                        | _ -> ResponseContent.Unknown xhr.response\n\n                    responseHeaders =\n                        xhr.getAllResponseHeaders()\n                        |> splitAt \"\\r\\n\"\n                        |> Array.choose (fun headerLine ->\n                            let parts = splitAt \":\" headerLine\n                            match List.ofArray parts with\n                            | key :: rest ->  Some (key.ToLower(), (String.concat \":\" rest).Trim())\n                            | otherwise -> None)\n                        |> Map.ofArray\n\n                    responseUrl = xhr.responseURL\n                }\n\n            for (Header(key, value)) in req.headers do\n                xhr.setRequestHeader(key, value)\n\n            xhr.withCredentials <- req.withCredentials\n\n            match req.overridenMimeType with\n            | Some mimeType -> xhr.overrideMimeType(mimeType)\n            | None -> ()\n\n            match req.overridenResponseType with\n            | Some ResponseTypes.Text -> xhr.responseType <- \"text\"\n            | Some ResponseTypes.Blob -> xhr.responseType <- \"blob\"\n            | Some ResponseTypes.ArrayBuffer -> xhr.responseType <- \"arraybuffer\"\n            | None -> ()\n\n            match req.timeout with\n            | Some timeout -> xhr.timeout <- timeout\n            | None -> ()\n\n            match req.content with \n            | BodyContent.Empty -> xhr.send()\n            | BodyContent.Text value -> xhr.send(value)\n            | BodyContent.Form formData -> xhr.send(formData)\n            | BodyContent.Binary blob -> xhr.send(blob)\n#else\n        async {\n            try\n                use requestMessage = new HttpRequestMessage()\n                requestMessage.RequestUri <- Uri(req.url)\n                requestMessage.Method <-\n                    match req.method with\n                    | HttpMethod.GET     -> HttpMethod.Get\n                    | HttpMethod.POST    -> HttpMethod.Post\n                    | HttpMethod.PUT     -> HttpMethod.Put\n                    | HttpMethod.PATCH   -> HttpMethod \"PATCH\"\n                    | HttpMethod.DELETE  -> HttpMethod.Delete\n                    | HttpMethod.HEAD    -> HttpMethod.Head\n                    | HttpMethod.OPTIONS -> HttpMethod.Options\n                req.headers\n                |> Seq.iter (fun (Header (key, value)) ->\n                    requestMessage.Headers.Add(key, value))\n                use content =\n                    match req.content with\n                    | BodyContent.Text text -> new StringContent(text)\n                    | BodyContent.Empty -> null\n                    | _ -> failwith \"Only BodyContent.Text is supported in the dotnet implementation\"\n                requestMessage.Content <- content\n\n                use client = new HttpClient()\n\n                match req.timeout with\n                | Some timeout -> client.Timeout <- TimeSpan.FromMilliseconds(timeout)\n                | None -> ()\n\n                let! response = client.SendAsync requestMessage |> Async.AwaitTask\n                let! responseBody = response.Content.ReadAsStringAsync() |> Async.AwaitTask\n\n                let headers =\n                    response.Headers\n                    |> Seq.choose (fun kv ->\n                        kv.Value\n                        |> Seq.tryLast\n                        |> Option.map (fun value -> kv.Key, value))\n                    |> Map.ofSeq\n\n                return\n                    { statusCode = int response.StatusCode\n                      responseText = responseBody\n                      responseType = \"text\"\n                      responseHeaders = headers\n                      responseUrl = req.url\n                      content = ResponseContent.Text responseBody }\n            with\n            // We're catching a lot here to mimic the behaviour of the JS\n            // implementation, which isn't able to expose the kind of error.\n            | :? ArgumentException ->\n                return emptyResponse // invalid uri\n            | :? HttpRequestException\n            | :? AggregateException as aggrEx when (aggrEx.InnerException :? HttpRequestException) ->\n                return emptyResponse // connection errors\n        }\n#endif\n\n    /// Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.\n    let get url : Async<int * string> =\n        async {\n            let! response =\n                request url\n                |> method HttpMethod.GET\n                |> send\n            return response.statusCode, response.responseText\n        }\n\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\n    let put url (data: string) : Async<int * string> =\n        async {\n            let! response =\n                request url\n                |> method HttpMethod.PUT\n                |> content (BodyContent.Text data)\n                |> send\n            return response.statusCode, response.responseText\n        }\n\n    /// Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.\n    let delete url : Async<int * string> =\n        async {\n            let! response =\n                request url\n                |> method HttpMethod.DELETE\n                |> send\n            return response.statusCode, response.responseText\n        }\n\n    /// Safely sends a PATCH request and returns a tuple(status code * response text). This function does not throw.\n    let patch url (data: string) : Async<int * string> =\n        async {\n            let! response =\n                request url\n                |> method HttpMethod.PATCH\n                |> content (BodyContent.Text data)\n                |> send\n            return response.statusCode, response.responseText\n        }\n\n    /// Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.\n    let post url (data: string) : Async<int * string> =\n        async {\n            let! response =\n                request url\n                |> method HttpMethod.POST\n                |> content (BodyContent.Text data)\n                |> send\n            return response.statusCode, response.responseText\n        }\n","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","namespace Fable.Parsimmon\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\ntype ParseResult<'t> =\r\n    abstract status : bool\r\n    abstract value : 't\r\n\r\ntype IParserOffSet =\r\n    abstract offset : int\r\n    abstract line : int\r\n    abstract column : int\r\n\r\ntype TokenPosition =\r\n    { offset: int\r\n      line: int\r\n      column: int }\r\n\r\ntype NodeResult<'t> =\r\n    { name: string\r\n      value: 't\r\n      start: TokenPosition\r\n      ``end``: TokenPosition }\r\n\r\ntype IParser<'t> =\r\n    abstract map<'u> : ('t -> 'u) -> IParser<'u>\r\n    abstract parse : string -> ParseResult<'t>\r\n    abstract times : int -> IParser<'t []>\r\n    abstract times : int * int -> IParser<'t []>\r\n    abstract many : unit -> IParser<'t []>\r\n    [<Emit(\"$0.then($1)\")>]\r\n    abstract chain : IParser<'u> -> IParser<'u>\r\n    [<Emit(\"$0.chain($1)\")>]\r\n    abstract bind : ('t -> IParser<'u>) -> IParser<'u>\r\n    abstract skip : IParser<'u> -> IParser<'t>\r\n    abstract sepBy : IParser<'u> -> IParser<'t []>\r\n    abstract fallback : 't -> IParser<'t>\r\n    abstract trim : IParser<'u> -> IParser<'t>\r\n    abstract notFollowedBy : IParser<'u> -> IParser<'t>\r\n    abstract atMost : int -> IParser<'t[]>\r\n    abstract atLeast : int -> IParser<'t[]>\r\n    [<Emit(\"$0.or($1)\")>]\r\n    abstract orTry : IParser<'t> -> IParser<'t>\r\n    abstract sepBy1 : IParser<'u> -> IParser<'t []>\r\n    [<Emit(\"$0.node($1)\")>]\r\n    abstract node : string -> IParser<NodeResult<'t>>\r\n\r\nmodule Parsimmon =\r\n    let parseRaw (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n\r\n    let parse (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n        |> fun result ->\r\n            match result.status with\r\n            | true -> Some result.value\r\n            | false -> None\r\n\r\n    /// A parser that consumes no input and yields an object an object representing the current offset into the parse: it has a 0-based character offset property and 1-based line and column properties\r\n    let index : IParser<IParserOffSet> =\r\n        import \"index\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a new parser which tries parser, and if it fails uses otherParser. Example:\r\n    let orTry (otherParser: IParser<'t>) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.orTry(otherParser)\r\n\r\n    /// Returns a new parser that tries to parse the input exactly `n` times\r\n    let times<'t> (n: int) (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.times n\r\n\r\n    /// Expects parser at least n times. Yields an array of the results.\r\n    let atLeast (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atLeast n\r\n\r\n\r\n    /// Expects parser at most n times. Yields an array of the results.\r\n    let atMost (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atMost n\r\n\r\n    let skip (skipped: IParser<'u>) (keep: IParser<'t>) : IParser<'t> =\r\n        keep.skip skipped\r\n\r\n    let many (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.many()\r\n\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1))\")>]\r\n    let regex (pattern: string) : IParser<string> = jsNative\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1), $2)\")>]\r\n    let regexGroupNumber (pattern: string) (groupNumber: int): IParser<string> = jsNative\r\n    let ofLazy (f: unit -> IParser<'t>) : IParser<'t> =\r\n        import \"lazy\" \"./Parsimmon.js\"\r\n\r\n    /// This is the same as Parsimmon.sepBy, but matches the parser at least once.\r\n    let seperateByAtLeastOne (seperator : IParser<'u>) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.sepBy1(seperator)\r\n\r\n    /// Expects parser \"after\" to follow parser \"before\", and yields the result of \"before\".\r\n    let chain  (after: IParser<'u>) (before: IParser<'t>) : IParser<'u> =\r\n        before.chain after\r\n\r\n    /// Returns a new parser which tries parser \"p\", and on success calls the function \"f\" with the result of the parse, which is expected to return another parser, which will be tried next. This allows you to dynamically decide how to continue the parse, which is impossible with the other combinators.\r\n    let bind (f: 't -> IParser<'u>) (p: IParser<'t>) : IParser<'u> =\r\n        p.bind f\r\n\r\n    /// A parser that consumes one letter\r\n    let letter : IParser<string> =\r\n        import \"letter\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that tries `parser` and succeeds if `parser` is able to parse between `min` and `max` times\r\n    let timesBetween (min: int) (max: int) (parser: IParser<'u>) =\r\n        parser.times(min, max)\r\n\r\n    /// A parser that consumes one or more letters\r\n    let letters : IParser<string[]> =\r\n        import \"letters\" \"./Parsimmon.js\"\r\n\r\n    /// A parser that expects to be at the end of the input (zero characters left).\r\n    let endOfFile : IParser<string> =\r\n        import \"eof\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that looks for anything but whatever \"p\" wants to parse, and does not consume it. Yields the same result as \"before\".\r\n    let notFollowedBy (p: IParser<'u>) (before: IParser<'t>) : IParser<'t> =\r\n        before.notFollowedBy p\r\n\r\n    /// Returns a parser that doesn't consume any input, and yields the given value\r\n    let succeed (value: 't) : IParser<'t> =\r\n        import \"succeed\" \"./Parsimmon.js\"\r\n\r\n    /// Parses using parser, but does not consume what it parses. Yields an empty string.\r\n    let lookahead (parser: IParser<'t>) : IParser<string> =\r\n        import \"lookahead\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one digit\r\n    let digit : IParser<string> =\r\n        import \"digit\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one or more digits\r\n    let digits : IParser<string[]> =\r\n        digit\r\n        |> many\r\n\r\n    /// Returns a new parser which tries \"parser\" and, if it fails, yields value without consuming any input.\r\n    let fallback (value: 't) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.fallback value\r\n\r\n    let seperateBy (content: IParser<'u>) (others: IParser<'t>) : IParser<'t[]> =\r\n        others.sepBy(content)\r\n\r\n    let between (left: IParser<'t>) (right: IParser<'u>) (middle: IParser<'v>) =\r\n        left\r\n        |> chain middle\r\n        |> skip right\r\n\r\n    /// Transforms the parsed value of the given parser.\r\n    let map (f: 't -> 'u) (parser: IParser<'t>) = parser.map f\r\n\r\n    /// Alias of Parsimmon.concat\r\n    let tie (parser: IParser<string[]>) : IParser<string> =\r\n        map (String.concat \"\") parser\r\n\r\n    /// A parser that consumes and yields the next character of the input.\r\n    let any : IParser<string> =\r\n        import \"any\" \"./Parsimmon.js\"\r\n\r\n    /// Accepts any number of parsers, yielding the value of the first one that succeeds, backtracking in between.\r\n    let choose (ps: IParser<'t> list) : IParser<'t> =\r\n        List.reduce (fun acc parser -> acc.orTry(parser)) ps\r\n\r\n    /// A parser that consumes and yields the entire remainder of the input.\r\n    let all : IParser<string> =\r\n        import \"all\"  \"./Parsimmon.js\"\r\n\r\n    /// Returns a failing parser with the given message.\r\n    let fail (input: string) : IParser<string> =\r\n        import \"fail\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that yield a single character if it passes the predicate function.\r\n    let satisfy (f: string -> bool) : IParser<string> =\r\n        import \"test\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser yield a string containing all the next characters that pass the predicate \"f\"\r\n    let takeWhile (f: string -> bool) : IParser<string> =\r\n        import \"takeWhile\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that can only parse the exact given input string\r\n    let str (input: string) : IParser<string> =\r\n        import \"string\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that parses any of the characters of the input string\r\n    let oneOf (input: string) : IParser<string> =\r\n        import \"oneOf\" \"./Parsimmon.js\"\r\n\r\n    let whitespace : IParser<string> =\r\n        import \"whitespace\" \"./Parsimmon.js\"\r\n\r\n    let optionalWhitespace : IParser<string> =\r\n        import \"optWhitespace\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that succeeds one or more times\r\n    let atLeastOneOrMany (parser: IParser<'t>) : IParser<'t[]> =\r\n        atLeast 1 parser\r\n\r\n    let stringReturn (input: string) (value: 't) : IParser<'t> =\r\n        str input\r\n        |> map (fun _ -> value)\r\n\r\n    /// Returns a parser that parses comsumes any character of a string other than the characters of the input string\r\n    let noneOf (input: string) : IParser<string> =\r\n        import \"noneOf\" \"./Parsimmon.js\"\r\n\r\n    let seq2 (p1: IParser<'t>) (p2:IParser<'u>) :  IParser<'t * 'u> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let trim (trimmed: IParser<'a>) (p: IParser<'t>) : IParser<'t> =\r\n        p.trim trimmed\r\n\r\n    /// Equivalent to `parser.map (String.concat \"\")`\r\n    let concat (parser: IParser<string[]>) : IParser<string> =\r\n        parser.map (String.concat \"\")\r\n\r\n    let seq3 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>) :  IParser<'t * 'u * 'v> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq4 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>)\r\n             (p4:IParser<'w>) :  IParser<'t * 'u * 'v * 'w> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq5 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3: IParser<'v>)\r\n             (p4: IParser<'w>)\r\n             (p5: IParser<'q>) : IParser<'t * 'u * 'v * 'w * 'q> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    /// Equivalent to `parser.node(\"description\")`\r\n    let node<'t> description (p:IParser<'t>) = p.node(description)",null,"namespace Fable.SimpleJson\n\nopen Fable.Parsimmon\n\n#nowarn \"40\"\n\nmodule Parser =\n\n    let digits = \n        Parsimmon.digit \n        |> Parsimmon.atLeastOneOrMany\n        |> Parsimmon.concat\n\n    let jint = digits |> Parsimmon.map float\n\n    let negJint = \n        Parsimmon.seq2 (Parsimmon.str \"-\") jint \n        |> Parsimmon.map (fun (sign, number) -> -number)\n\n    let jfloat =\n        let floatWithComma =\n            Parsimmon.regex \"-?(0|[1-9][0-9]*)?[.][0-9]+([eE][+-]?[0-9]+)?\"\n        let floatWithoutComma =\n            Parsimmon.regex \"-?[1-9][0-9]*[eE][+-]?[0-9]+\"\n\n        [ floatWithComma; floatWithoutComma ]\n        |> Parsimmon.choose\n        |> Parsimmon.map float\n\n    let jnumber = \n        [jfloat; jint; negJint] \n        |> Parsimmon.choose\n        |> Parsimmon.map JNumber\n\n    let jbool = \n        [ Parsimmon.stringReturn \"true\" (JBool true)\n          Parsimmon.stringReturn \"false\" (JBool false)]\n        |> Parsimmon.choose\n\n    let jnull = Parsimmon.stringReturn \"null\" JNull\n\n    let stringLiteral =\n        let escape =  \n            Parsimmon.oneOf \"\\\"\\\\/bfnrt\"\n            |> Parsimmon.map(function\n                | \"b\" -> \"\\b\"\n                | \"f\" -> \"\\u000C\"\n                | \"n\" -> \"\\n\"\n                | \"r\" -> \"\\r\"\n                | \"t\" -> \"\\t\"\n                | c   -> c) // every other char is mapped to itself\n\n        let escapedCharSnippet = \n            Parsimmon.seq2 (Parsimmon.str \"\\\\\") escape\n            |> Parsimmon.map snd\n\n        let normalCharSnippet = Parsimmon.satisfy (fun c -> c <> \"\\\"\" && c <> \"\\\\\")\n\n        let anyCharSnippet = \n            normalCharSnippet\n            |> Parsimmon.orTry escapedCharSnippet\n            |> Parsimmon.many\n            |> Parsimmon.concat\n\n        anyCharSnippet\n        |> Parsimmon.between (Parsimmon.str \"\\\"\") (Parsimmon.str \"\\\"\")\n        \n    let jstring = stringLiteral.map JString\n\n    let withWhitespace p = \n        Parsimmon.between (Parsimmon.optionalWhitespace) (Parsimmon.optionalWhitespace) p\n        \n    let jvalue = \n        [ jnull; jbool; jnumber; jstring ]\n        |> List.map withWhitespace\n        |> Parsimmon.choose\n    \n    let comma = withWhitespace (Parsimmon.str \",\")\n \n    let rec json = Parsimmon.ofLazy <| fun () ->\n        \n        let leftBracket = withWhitespace (Parsimmon.str \"[\")\n        let rightBracket = withWhitespace (Parsimmon.str \"]\")\n                    \n        let arrayValue = Parsimmon.seperateBy comma json\n        \n        let jarray = \n            arrayValue\n            |> Parsimmon.between leftBracket rightBracket\n            |> Parsimmon.map (List.ofArray >> JArray)\n\n        let leftBrace = withWhitespace (Parsimmon.str \"{\")\n        let rightBrace = withWhitespace (Parsimmon.str \"}\")\n            \n        let keyValues = \n            Parsimmon.seq3 \n                (withWhitespace stringLiteral)\n                (withWhitespace (Parsimmon.str \":\"))\n                (withWhitespace json)\n            |> Parsimmon.map (fun (key, _ , value) -> key,value)\n            |> Parsimmon.seperateBy comma\n\n        let jobject = \n            keyValues\n            |> Parsimmon.between leftBrace rightBrace\n            |> Parsimmon.map (List.ofArray >> Map.ofList >> JObject)\n\n        [jvalue; jarray; jobject]\n        |> Parsimmon.choose\n        \n    let jsonParser = withWhitespace json\n","import { List, declare, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(bound, digits) {\n  this.bound = bound | 0;\n  this.digits = digits;\n}, Record);\nexport function BigNat$reflection() {\n  return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32($x$$1, $n$$2) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    const x = $x$$1,\n          n = $n$$2;\n\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      $x$$1 = x * x;\n      $n$$2 = ~~(n / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power($b$$1$$4, $tp$$5, $i$$6) {\n    findBounding2Power: while (true) {\n      const b$$1 = $b$$1$$4,\n            tp = $tp$$5,\n            i = $i$$6;\n\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        $b$$1$$4 = b$$1;\n        $tp$$5 = tp * 2;\n        $i$$6 = i + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nexport const BigNatModule$002EFFT$$$p = fromBits(2013265921, 0, false);\nconst BigNatModule$002EFFT$$$patternInput$004075 = [27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004075[3];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004075[1];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004075[0];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004075[2];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow($x$$3$$9, $n$$1$$10) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    const x$$3 = $x$$3$$9,\n          n$$1 = $n$$1$$10;\n\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      $x$$3$$9 = toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$1$$10 = ~~(n$$1 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      const y$$2 = BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(y$$2, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL($x$$7$$11, $n$$2$$12) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    const x$$7 = $x$$7$$11,\n          n$$2 = $n$$2$$12;\n\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      $x$$7$$11 = toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$2$$12 = op_Division(n$$2, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      const y$$5 = BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false)));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(y$$5, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      let y$$8;\n      const x$$13 = wj;\n      y$$8 = toInt(op_Modulus(op_Multiply(fromInteger(x$$13, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offset + j] = (even + y$$8) % BigNatModule$002EFFT$002EFp$$$p;\n      let y$$10;\n      const x$$15 = wj;\n      y$$10 = toInt(op_Modulus(op_Multiply(fromInteger(x$$15, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - y$$10) % BigNatModule$002EFFT$002EFp$$$p;\n      const y$$11 = wj;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y$$11, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  BigNatModule$002EFFT$$$computeFFT(1, 0, n$$5, w$$1, u$$1, res$$1, 0);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, v);\n  const rT = initialize(bigK, function (i$$2) {\n    const x$$19 = uT$$1[i$$2];\n    const y$$14 = vT[i$$2];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$19, true, 6), fromInteger(y$$14, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(bigK, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, v$$2);\n  const rT$$1 = initialize(patternInput[0], function (i$$4) {\n    const x$$20 = uT$$2[i$$4];\n    const y$$15 = vT$$1[i$$4];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$20, true, 6), fromInteger(y$$15, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(patternInput[0], w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64($x$$23$$48, $n$$15$$49) {\n  BigNatModule$$$pow64: while (true) {\n    const x$$23 = $x$$23$$48,\n          n$$15 = $n$$15$$49;\n\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      $x$$23$$48 = op_Multiply(x$$23, x$$23);\n      $n$$15$$49 = ~~(n$$15 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32($x$$24$$50, $n$$16$$51) {\n  BigNatModule$$$pow32: while (true) {\n    const x$$24 = $x$$24$$50,\n          n$$16 = $n$$16$$51;\n\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      $x$$24$$50 = x$$24 * x$$24;\n      $n$$16$$51 = ~~(n$$16 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound($na$$62, $i$$9$$63) {\n    findLeastBound: while (true) {\n      const na = $na$$62,\n            i$$9 = $i$$9$$63;\n\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        $na$$62 = na;\n        $i$$9$$63 = i$$9 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP($i$$16$$75, $n$$25$$76, $c$$77, $p$$78, $q$$79, $r$$5$$80) {\n  BigNatModule$$$addP: while (true) {\n    const i$$16 = $i$$16$$75,\n          n$$25 = $n$$25$$76,\n          c = $c$$77,\n          p = $p$$78,\n          q = $q$$79,\n          r$$5 = $r$$5$$80;\n\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      $i$$16$$75 = i$$16 + 1;\n      $n$$25$$76 = n$$25;\n      $c$$77 = c$$1;\n      $p$$78 = p;\n      $q$$79 = q;\n      $r$$5$$80 = r$$5;\n      continue BigNatModule$$$addP;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  BigNatModule$$$addP(0, rbound, 0, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP($i$$19$$83, $n$$26$$84, $c$$2$$85, $p$$2$$86, $q$$2$$87, $r$$7$$88) {\n  BigNatModule$$$subP: while (true) {\n    const i$$19 = $i$$19$$83,\n          n$$26 = $n$$26$$84,\n          c$$2 = $c$$2$$85,\n          p$$2 = $p$$2$$86,\n          q$$2 = $q$$2$$87,\n          r$$7 = $r$$7$$88;\n\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$3;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$4;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, 0, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check($pa$$96, $qa$$97, $i$$22$$98) {\n      check: while (true) {\n        const pa = $pa$$96,\n              qa = $qa$$97,\n              i$$22 = $i$$22$$98;\n\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          $pa$$96 = pa;\n          $qa$$97 = qa;\n          $i$$22$$98 = i$$22 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1($pa$$1$$103, $qa$$1$$104, $i$$23$$105) {\n      check$$1: while (true) {\n        const pa$$1 = $pa$$1$$103,\n              qa$$1 = $qa$$1$$104,\n              i$$23 = $i$$23$$105;\n\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            $pa$$1$$103 = pa$$1;\n            $qa$$1$$104 = qa$$1;\n            $i$$23$$105 = i$$23 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2($pa$$2$$108, $qa$$2$$109, $i$$24$$110) {\n      check$$2: while (true) {\n        const pa$$2 = $pa$$2$$108,\n              qa$$2 = $qa$$2$$109,\n              i$$24 = $i$$24$$110;\n\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          $pa$$2$$108 = pa$$2;\n          $qa$$2$$109 = qa$$2;\n          $i$$24$$110 = i$$24 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr($a$$4$$123, $i$$25$$124, $c$$5$$125) {\n  BigNatModule$$$contributeArr: while (true) {\n    const a$$4 = $a$$4$$123,\n          i$$25 = $i$$25$$124,\n          c$$5 = $c$$5$$125;\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    let x$$38;\n    const value = op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64);\n    x$$38 = ~~toInt(value);\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      $a$$4$$123 = a$$4;\n      $i$$25$$124 = i$$25 + 1;\n      $c$$5$$125 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  var value$$1;\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, (value$$1 = op_BitwiseAnd(rak, BigNatModule$$$baseMaski64), (~~toInt(value$$1))));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry($r$$12$$130, $c$$8$$131, $k$$4$$132) {\n  var value$$2;\n\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    const r$$12 = $r$$12$$130,\n          c$$8 = $c$$8$$131,\n          k$$4 = $k$$4$$132;\n\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, (value$$2 = op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64), (~~toInt(value$$2))));\n      $r$$12$$130 = r$$12;\n      $c$$8$$131 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      $k$$4$$132 = k$$4 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  var value$$3;\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, (value$$3 = op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64), (~~toInt(value$$3))));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  var value$$4;\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(p$$17.digits[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(q$$14.digits[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(r$$14.digits[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      r$$14.digits[k$$5] = (value$$4 = op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64), (~~toInt(value$$4)));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n  this.bigL = bigL | 0;\n  this.twoToBigL = twoToBigL | 0;\n  this.k = k | 0;\n  this.bigK = bigK | 0;\n  this.bigN = bigN | 0;\n  this.split = split | 0;\n  this.splits = splits;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom($i$$31$$145) {\n    selectFrom: while (true) {\n      const i$$31 = $i$$31$$145;\n\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        $i$$31$$145 = i$$31 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi($k$$8$$147) {\n    hi: while (true) {\n      const k$$8 = $k$$8$$147;\n\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        $k$$8$$147 = k$$8 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder($i$$38$$154, $bi$$1$$155) {\n    encoder: while (true) {\n      const i$$38 = $i$$38$$154,\n            bi$$1 = $bi$$1$$155;\n\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {\n        void null;\n      } else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        $i$$38$$154 = i$$39;\n        $bi$$1$$155 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    } else {\n      void null;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate($i$$41$$160, $j$$2$$161, $d$$3$$162) {\n    evaluate: while (true) {\n      const i$$41 = $i$$41$$160,\n            j$$2 = $j$$2$$161,\n            d$$3 = $d$$3$$162;\n\n      if (i$$41 === enc$$3.bigK) {\n        void null;\n      } else {\n        if (j$$2 >= rbound$$5) {\n          void null;\n        } else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        $i$$41$$160 = i$$43;\n        $j$$2$$161 = patternInput$$1[0];\n        $d$$3$$162 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const r$$18 = BigNatModule$$$add(q0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, q2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo;\n    let value$$6;\n    const x$$59 = z$$7;\n    const value$$5 = op_BitwiseAnd(x$$59, BigNatModule$$$baseMaski64);\n    value$$6 = ~~toInt(value$$5);\n    zLo = value$$6;\n    let zHi;\n    const x$$60 = z$$7;\n    zHi = op_Division(x$$60, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$57);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo$$1;\n    let value$$8;\n    const x$$64 = z$$8;\n    const value$$7 = op_BitwiseAnd(x$$64, BigNatModule$$$baseMaski64);\n    value$$8 = ~~toInt(value$$7);\n    zLo$$1 = value$$8;\n    let zHi$$1;\n    const x$$65 = z$$8;\n    zHi$$1 = op_Division(x$$65, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$62);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(x$$67.digits[n$$34] / a$$11.digits[0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), fromInteger(a$$11.digits[0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(x$$67.digits[patternInput$$6[1]] / (a$$11.digits[patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(a$$11.digits[patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg) {\n      void null;\n    };\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        } else {\n          void null;\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop($a$$19$$206, $b$$14$$207) {\n    hcfloop: while (true) {\n      const a$$19 = $a$$19$$206,\n            b$$14 = $b$$14$$207;\n\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        $a$$19$$206 = patternInput$$8[1];\n        $b$$14$$207 = a$$19;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power($acc$$2$$210, $x$$70$$211, $n$$37$$212) {\n    power: while (true) {\n      const acc$$2 = $acc$$2$$210,\n            x$$70 = $x$$70$$211,\n            n$$37 = $n$$37$$212;\n\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        $acc$$2$$210 = acc$$2;\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      } else {\n        $acc$$2$$210 = BigNatModule$$$mul(x$$70, acc$$2);\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1($acc$$3$$215, $x$$72$$216, $n$$39$$217) {\n    power$$1: while (true) {\n      const acc$$3 = $acc$$3$$215,\n            x$$72 = $x$$72$$216,\n            n$$39 = $n$$39$$217;\n\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          $acc$$3$$215 = acc$$3;\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          $acc$$3$$215 = BigNatModule$$$mul(x$$72, acc$$3);\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat($acc$$4$$219, $k$$10$$220, $i$$49$$221) {\n    evalFloat: while (true) {\n      const acc$$4 = $acc$$4$$219,\n            k$$10 = $k$$10$$220,\n            i$$49 = $i$$49$$221;\n\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        $acc$$4$$219 = acc$$4 + k$$10 * n$$40.digits[i$$49];\n        $k$$10$$220 = k$$10 * basef;\n        $i$$49$$221 = i$$49 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        const value$$9 = n$$43.digits[0] | 0;\n        return value$$9 >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        const value$$10 = n$$44.digits[0] | 0;\n        return fromInteger(value$$10, true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route($prior$$227, $k$$11$$228, $ten2k$$229) {\n    route: while (true) {\n      const prior = $prior$$227,\n            k$$11 = $k$$11$$228,\n            ten2k = $ten2k$$229;\n\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        $prior$$227 = new List([k$$11, ten2k], prior);\n        $k$$11$$228 = k$$11 + 1;\n        $ten2k$$229 = BigNatModule$$$mul(ten2k, ten2k);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$1) {\n    if (_arg1$$1.tail != null) {\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, _arg1$$1.head[1]);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], _arg1$$1.tail);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], _arg1$$1.tail);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], _arg1$$1.tail);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const digits$$4 = collect(true, new List(), n$$45, kten2ks);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    let arg00;\n    arg00 = ofList(digits$$4, Array);\n    return join(\"\", arg00);\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  } else {\n    void null;\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build($acc$$5$$235, $i$$50$$236) {\n    build: while (true) {\n      const acc$$5 = $acc$$5$$235,\n            i$$50 = $i$$50$$236;\n\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          $acc$$5$$235 = BigNatModule$$$add(BigNatModule$$$mul(ten, acc$$5), BigNatModule$$$embed(d$$7));\n          $i$$50$$236 = i$$50 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","import { declare, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  void null;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n  void null;\n}, Record);\nexport function BigInteger$reflection() {\n  return class_type(\"BigInt.BigInteger\", undefined, BigInteger);\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n  void null;\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$12;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 3;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 5;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 0;\n    } else {\n      $target$$12 = 9;\n    }\n  } else {\n    $target$$12 = 9;\n  }\n\n  switch ($target$$12) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$17;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 3;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 5;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 0;\n    } else {\n      $target$$17 = 9;\n    }\n  } else {\n    $target$$17 = 9;\n  }\n\n  switch ($target$$17) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$20;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 3;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 5;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 9;\n    }\n  } else {\n    $target$$20 = 9;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n  return obj instanceof BigInteger ? BigInteger$$$op_Equality$$56F059C0(this$, obj) : false;\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(matchValue$$4), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$38;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 3;\n      } else {\n        $target$$38 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 0;\n      } else {\n        $target$$38 = 4;\n      }\n    } else {\n      $target$$38 = 4;\n    }\n\n    switch ($target$$38) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$41;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 3;\n      } else {\n        $target$$41 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 0;\n      } else {\n        $target$$41 = 4;\n      }\n    } else {\n      $target$$41 = 4;\n    }\n\n    switch ($target$$41) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$46;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 3;\n      } else {\n        $target$$46 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 0;\n      } else {\n        $target$$46 = 4;\n      }\n    } else {\n      $target$$46 = 4;\n    }\n\n    switch ($target$$46) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  const tuple = BigInteger$$$DivRem$$56F059C0(x$$16, y$$8);\n  return tuple[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  const tuple$$1 = BigInteger$$$DivRem$$56F059C0(x$$17, y$$9);\n  return tuple$$1[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$68;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 3;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 7;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 0;\n    } else {\n      $target$$68 = 9;\n    }\n  } else {\n    $target$$68 = 9;\n  }\n\n  switch ($target$$68) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$71;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 3;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 7;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 0;\n    } else {\n      $target$$71 = 9;\n    }\n  } else {\n    $target$$71 = 9;\n  }\n\n  switch ($target$$71) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  } else {\n    void null;\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  } else {\n    void null;\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    return BigInteger$$$compare$$56F059C0(this$$$1, obj$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { delay, unfold, rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  var value;\n\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1((value = i$$1, (fromInteger(value, false, 6))));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  if (lowBitFound) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (currByte === 0) {\n    return [0, false];\n  } else {\n    let firstBitIndex;\n    const list = ofSeq(rangeNumber(0, 1, 7));\n    firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, list);\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    let mask32;\n    let i$$3;\n    i$$3 = fromInteger(4294967295, false, 6);\n    mask32 = fromInt64(i$$3);\n\n    const loop = function loop($accumBytes$$74, $consumeValue$$75, $lowBitFound$$1$$76) {\n      var value$$9, value$$10, value$$11;\n\n      loop: while (true) {\n        const accumBytes = $accumBytes$$74,\n              consumeValue = $consumeValue$$75,\n              lowBitFound$$1 = $lowBitFound$$1$$76;\n\n        if (consumeValue.CompareTo(zero) <= 0) {\n          let accumBytes$$1;\n\n          if (isPositive) {\n            accumBytes$$1 = skipWhile(function predicate$$1(b) {\n              return b === 0;\n            }, accumBytes);\n          } else {\n            accumBytes$$1 = skipWhile(function predicate$$2(b$$1) {\n              return b$$1 === 255;\n            }, accumBytes);\n          }\n\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          let array;\n          array = ofList(accumBytes$$2, Uint8Array);\n          return reverse(array, Uint8Array);\n        } else {\n          let currValue;\n          const x$$19 = BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32);\n          currValue = toUInt32(x$$19);\n\n          if (isPositive) {\n            let b0;\n            b0 = currValue & 0xFF;\n            let b1;\n            const value$$5 = currValue >>> 8;\n            b1 = value$$5 & 0xFF;\n            let b2;\n            const value$$6 = currValue >>> 16;\n            b2 = value$$6 & 0xFF;\n            let b3;\n            const value$$7 = currValue >>> 24;\n            b3 = value$$7 & 0xFF;\n            $accumBytes$$74 = new List(b3, new List(b2, new List(b1, new List(b0, accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement((value$$9 = currValue >>> 8, (value$$9 & 0xFF)), patternInput[1]);\n            const patternInput$$2 = flipTwosComplement((value$$10 = currValue >>> 16, (value$$10 & 0xFF)), patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement((value$$11 = currValue >>> 24, (value$$11 & 0xFF)), patternInput$$2[1]);\n            $accumBytes$$74 = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  } else {\n    void null;\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1($accumUInt32$$80, $currIndex$$81, $bytesRemaining$$82, $lowBitFound$$6$$83) {\n      loop$$1: while (true) {\n        const accumUInt32 = $accumUInt32$$80,\n              currIndex = $currIndex$$81,\n              bytesRemaining = $bytesRemaining$$82,\n              lowBitFound$$6 = $lowBitFound$$6$$83;\n\n        if (bytesRemaining === 0) {\n          let value$$14;\n          value$$14 = fold(function folder(acc, value$$12) {\n            var i$$4;\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), (i$$4 = (fromInteger(value$$12, false, 6)), (fromInt64(i$$4))));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$15, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$16, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}\nexport function makeRangeStepFunction(step, last) {\n  const stepComparedWithZero = step.CompareTo(zero) | 0;\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  } else {\n    void null;\n  }\n\n  const stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x$$20) {\n    const comparedWithLast = x$$20.CompareTo(last) | 0;\n    return ((stepGreaterThanZero ? comparedWithLast <= 0 : false) ? true : !stepGreaterThanZero ? comparedWithLast >= 0 : false) ? [x$$20, BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(x$$20, step)] : undefined;\n  };\n}\nexport function range(first, step$$1, last$$1) {\n  const stepFn = makeRangeStepFunction(step$$1, last$$1);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}","namespace Fable.SimpleJson\n\nopen Fable.Core\nopen Fable.Parsimmon\nopen Parser\nopen Fable.Import\nopen System\nopen Fable.Core.JsInterop\n\n[<AutoOpen>]\nmodule InteropUtil =\n    [<Emit(\"Array.from($0)\")>]\n    let arrayFrom (xs: obj) : obj = jsNative\n    [<Emit(\"$1[$0]\")>]\n    let get<'a> (key: string) (x: obj) : 'a = jsNative\n    [<Emit(\"$0 instanceof Date\")>]\n    let isDate (x: obj) = jsNative\n    [<Emit(\"$0 in $1\")>]\n    let hasKey (key: string) (x: 'a) = jsNative\n    let isDateOffset (x: obj) = isDate x && hasKey \"offset\" x\n    [<Emit(\"typeof $0\")>]\n    let getTypeOf (x: obj) : string = jsNative\n    let isObjectLiteral (x: obj) = getTypeOf x = \"object\"\n    let isBigInt (x: obj) =\n        not (isNull x)\n        && isObjectLiteral x\n        && hasKey \"signInt\" x\n        && hasKey \"v\" x\n        && hasKey \"digits\" (get \"v\" x)\n        && hasKey \"bound\" (get \"v\" x)\n\n    [<Emit(\"console.log($0)\")>]\n    let log (x: 'a) : unit = jsNative\n\n    [<Emit \"({})\">]\n    let createEmptyObject() : obj = jsNative\n\nmodule SimpleJson =\n    /// Tries to parse a string into a Json structured JSON data.\n    let tryParse (input: string) : Option<Json> =\n        Parsimmon.parse input jsonParser\n\n    /// Parses the input string into a structured JSON data. Fails with an exception if parsing fails.\n    let parse (input: string) : Json =\n        match tryParse input with\n        | Some result -> result\n        | None -> failwithf \"Could not parse the JSON input: %s\" input\n\n    /// Stringifies a Json object back to string representation\n    let rec toString = function\n        | JNull -> \"null\"\n        | JBool true -> \"true\"\n        | JBool false -> \"false\"\n        | JNumber number -> string number\n        | JString text -> sprintf \"\\\"%s\\\"\" text\n        | JArray elements ->\n            elements\n            |> List.map toString\n            |> String.concat \",\"\n            |> sprintf \"[%s]\"\n        | JObject map ->\n            map\n            |> Map.toList\n            |> List.map (fun (key,value) -> sprintf \"\\\"%s\\\":%s\" key (toString value))\n            |> String.concat \",\"\n            |> sprintf \"{%s}\"\n\n    [<Emit \"$2[$0] = $1\">]\n    let private setValue (key: string) (value: obj) (destination: obj) = jsNative\n    let rec toPlainObject (input: Json) : obj =\n        match input with\n        | JNull -> unbox null\n        | JBool value -> unbox value\n        | JNumber value -> unbox value\n        | JString value -> unbox value\n        | JArray values ->\n            let array = new ResizeArray<obj>()\n            for value in values do array.Add(toPlainObject value)\n            unbox array\n        | JObject map ->\n            let jsObject = createEmptyObject()\n            for (key, value) in Map.toList map do\n                setValue key (toPlainObject value) jsObject\n            unbox jsObject\n\n    let stringify (value: 'a) : string =\n        if isNullOrUndefined value\n        then JS.JSON.stringify(null)\n        else JS.JSON.stringify(value, (fun key jsonValue ->\n            if isBigInt jsonValue then\n                let bigInt : bigint = unbox(jsonValue)\n                box (string (decimal bigInt))\n            elif isDate jsonValue then\n                let dateOffset : DateTimeOffset = unbox(jsonValue)\n                box (dateOffset.ToString(\"o\"))\n            else\n            match jsonValue with\n            | :? string -> jsonValue\n            | :? System.Collections.IEnumerable ->\n                if JS.Constructors.Array.isArray(jsonValue) then jsonValue\n                else arrayFrom jsonValue\n            | _ when isBigInt jsonValue -> box (string (decimal (unbox<bigint> jsonValue)))\n            | _ when isDateOffset jsonValue -> box ((unbox<DateTimeOffset> jsonValue).ToString(\"O\"))\n            | _ -> jsonValue\n        ), 0)\n\n    let rec internal parseNative' (x: obj) =\n        match x with\n        | TypeCheck.NativeString str -> JString str\n        | TypeCheck.NativeNumber number -> JNumber number\n        | TypeCheck.NativeBool value -> JBool value\n        | TypeCheck.Null _ -> JNull\n        | TypeCheck.NativeArray arr -> JArray (List.ofArray (Array.map parseNative' arr))\n        | TypeCheck.NativeObject object ->\n            [ for key in JS.Constructors.Object.keys object -> key, parseNative' (get<obj> key object)  ]\n            |> Map.ofList\n            |> JObject\n        | _ -> JNull\n\n    /// Parses and converts the input string to Json using Javascript's native parsing capabilities\n    let parseNative (input: string) =\n        let parsed = JS.JSON.parse input\n        parseNative' parsed\n\n    let tryParseNative (input: string) =\n        try Some (parseNative input)\n        with | ex -> None\n\n    /// Tries to convert an object literal to the Json by calling JSON.stringify on the object first\n    let fromObjectLiteral (x: 'a) =\n        try Some (parseNative' x)\n        with | _ -> None\n\n    /// Transforms all keys of the objects within the Json structure\n    let rec mapKeys f = function\n        | JObject dictionary ->\n            dictionary\n            |> Map.toList\n            |> List.map (fun (key, value) -> f key, mapKeys f value)\n            |> Map.ofList\n            |> JObject\n        | JArray values ->\n            values\n            |> List.map (mapKeys f)\n            |> JArray\n        | otherJsonValue -> otherJsonValue\n\n    /// Transforms object values recursively using function `f` that takes the key and value of the object and returns a new value\n    let rec mapbyKey f = function\n        | JObject dictionary ->\n            dictionary\n            |> Map.toList\n            |> List.map (fun (key, value) -> key, f key value)\n            |> Map.ofList\n            |> JObject\n        | JArray values ->\n            values\n            |> List.map (mapbyKey f)\n            |> JArray\n        | otherJsonValue -> otherJsonValue\n\n    /// Transforms keys of object selectively by path segments\n    let mapKeysByPath f json =\n        let rec mapKey xs = function\n            | JObject dictionary ->\n                dictionary\n                |> Map.toList\n                |> List.map (fun (key, value) ->\n                    let keyPath = List.concat [xs; [key]]\n                    match f keyPath with\n                    | Some nextKey -> nextKey, mapKey keyPath value\n                    | None -> key, mapKey keyPath value)\n                |> Map.ofList\n                |> JObject\n            | JArray values ->\n                values\n                |> List.map (mapKey xs)\n                |> JArray\n            | otherJsonValue -> otherJsonValue\n        mapKey [] json\n\n    let rec readPath (keys: string list) (input: Json) =\n        match keys, input with\n        | [ ], _ -> None\n        | [ key ], JObject dict -> Map.tryFind key dict\n        | firstKey :: rest, JObject dict ->\n            match Map.tryFind firstKey dict with\n            | Some (JObject nextDict) -> readPath rest (JObject nextDict)\n            | _ -> None\n        | _ -> None","namespace Fable.SimpleJson\n\n/// A type representing Javascript Object Notation\ntype Json = \n    | JNumber of float\n    | JString of string\n    | JBool of bool\n    | JNull\n    | JArray of Json list\n    | JObject of Map<string, Json>","namespace Fable.SimpleJson\n\nopen System\nopen FSharp.Reflection\nopen Fable.Core\nopen System.Reflection\nopen System.Collections.Generic\n\n[<AutoOpen>]\nmodule Converter =\n    let (|PrimitiveType|_|) (primType: Type) =\n        match primType.FullName with\n        | \"System.String\" -> Some TypeInfo.String\n        | \"System.Char\" -> Some TypeInfo.Char\n        | \"System.Int16\" -> Some TypeInfo.Short\n        | \"System.Int32\" -> Some TypeInfo.Int32\n        | \"Microsoft.FSharp.Core.int64`1\"\n        | \"System.Int64\" -> Some TypeInfo.Long\n        | \"System.UInt16\" -> Some TypeInfo.UInt16\n        | \"System.UInt32\" -> Some TypeInfo.UInt32\n        | \"System.UInt64\" -> Some TypeInfo.UInt64\n        | \"System.DateTime\" -> Some TypeInfo.DateTime\n        | \"System.DateOnly\" -> Some TypeInfo.DateOnly\n        | \"System.TimeOnly\" -> Some TypeInfo.TimeOnly\n        | \"System.TimeSpan\" -> Some TypeInfo.TimeSpan\n        | \"System.DateTimeOffset\" -> Some TypeInfo.DateTimeOffset\n        | \"System.Boolean\" -> Some  TypeInfo.Bool\n        | \"System.Single\" -> Some TypeInfo.Float32\n        | \"System.Double\" -> Some TypeInfo.Float\n        | \"Microsoft.FSharp.Core.decimal`1\"\n        | \"System.Decimal\" -> Some TypeInfo.Decimal\n        | \"System.Numerics.BigInteger\" -> Some TypeInfo.BigInt\n        | \"Microsoft.FSharp.Core.Unit\" -> Some TypeInfo.Unit\n        | \"System.Guid\" -> Some TypeInfo.Guid\n        | \"System.Byte\" -> Some TypeInfo.Byte\n        | \"System.SByte\" -> Some TypeInfo.SByte\n        | \"System.Object\" -> Some TypeInfo.Object\n        | \"System.Uri\" -> Some TypeInfo.Uri\n        | _ -> None\n\n    let (|RecordType|_|) (t: Type) =\n        if FSharpType.IsRecord t\n        then\n            FSharpType.GetRecordFields t\n            |> Array.map (fun field -> field, field.Name, field.PropertyType)\n            |> Some\n        else None\n\n    let (|SetType|_|) (t: Type) =\n        if t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpSet`1\"\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|Nullable|_|) (t: Type) =\n        if t.FullName.StartsWith \"System.Nullable`1\"\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|UnionType|_|) (t: Type) =\n        if FSharpType.IsUnion t\n        then\n            FSharpType.GetUnionCases t\n            |> Array.map (fun info ->\n                let caseName = info.Name\n                let caseTypes = info.GetFields() |> Array.map (fun prop -> prop.PropertyType)\n                caseName, info, caseTypes)\n            |> Some\n        else None\n\n    let (|MapType|_|) (t: Type) =\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpMap`2\")\n        then\n            let genArgs = t.GetGenericArguments()\n            Some (genArgs.[0], genArgs.[1])\n        else None\n\n    let (|ListType|_|) (t: Type) =\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpList`1\")\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let rec flattenFuncTypes (typeDef: Type) =\n        [| if FSharpType.IsFunction typeDef\n           then let (domain, range) = FSharpType.GetFunctionElements typeDef\n                yield! flattenFuncTypes domain\n                yield! flattenFuncTypes range\n           else yield typeDef |]\n\n    let (|FuncType|_|) (t: Type) =\n        if FSharpType.IsFunction t\n        then flattenFuncTypes t |> Some\n        else None\n\n    let (|ArrayType|_|) (t:Type) =\n        if t.IsArray\n        then t.GetElementType() |> Some\n        else None\n\n    let (|OptionType|_|) (t:Type) =\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Core.FSharpOption`1\")\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|TupleType|_|) (t: Type) =\n        if FSharpType.IsTuple t\n        then FSharpType.GetTupleElements(t) |> Some\n        else None\n\n    let (|SeqType|_|) (t: Type) =\n        if t.FullName.StartsWith \"System.Collections.Generic.IEnumerable`1\"\n        then  t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|DictionaryType|_|) (t: Type) =\n        if t.FullName.StartsWith \"System.Collections.Generic.Dictionary\"\n        then\n          let genArgs = t.GetGenericArguments()\n          Some (genArgs.[0], genArgs.[1])\n        else\n          None\n\n    let (|ResizeArrayType|_|) (t: Type) =\n        if t.FullName.StartsWith \"System.Collections.Generic.List\"\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|HashSetType|_|) (t: Type) =\n        if t.FullName.StartsWith \"System.Collections.Generic.HashSet\"\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|AsyncType|_|) (t:Type) =\n        if t.FullName.StartsWith \"Microsoft.FSharp.Control.FSharpAsync`1\"\n        then  t.GetGenericArguments().[0] |> Some\n        else None\n\n    let (|PromiseType|_|) (t:Type) =\n        if t.FullName.StartsWith \"Fable.Core.JS.Promise`1\"\n        then t.GetGenericArguments().[0] |> Some\n        else None\n\n    let private lazyToDelayed (l:Lazy<_>) = fun () -> l.Value\n\n    let (|EnumType|_|) (t: Type) =\n        if t.IsEnum\n        then Enum.GetUnderlyingType(t) |> Some\n        else None\n\n    let rec private _createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\n        match resolvedType with\n        | PrimitiveType typeInfo -> typeInfo\n        | FuncType (types) -> TypeInfo.Func <| lazyToDelayed (lazy (Array.map createTypeInfo types))\n        | RecordType fields ->\n            let l = lazy (\n                let fields =\n                    [| for (field, fieldName, fieldType) in fields ->\n                        { PropertyInfo = field\n                          FieldName = fieldName;\n                          FieldType = createTypeInfo fieldType } |]\n                fields, resolvedType)\n            TypeInfo.Record (lazyToDelayed l)\n\n        | UnionType cases ->\n            let l = lazy (\n                [| for (caseName, caseInfo, caseTypes) in cases ->\n                    { CaseName = caseName;\n                      Info = caseInfo;\n                      CaseTypes = Array.map createTypeInfo caseTypes } |], resolvedType)\n            TypeInfo.Union (lazyToDelayed l)\n\n        | EnumType elemType -> TypeInfo.Enum (lazyToDelayed <| lazy (createTypeInfo elemType, resolvedType))\n        | ListType elemType -> TypeInfo.List (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | ResizeArrayType elemType -> TypeInfo.ResizeArray (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | HashSetType elemType -> TypeInfo.HashSet (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | ArrayType elemType -> TypeInfo.Array (lazyToDelayed <| lazy (createTypeInfo elemType))\n        // Checking for tuples has to happen after checking for arrays\n        | TupleType types -> TypeInfo.Tuple (lazyToDelayed <| lazy (Array.map createTypeInfo types))\n        | OptionType elemType -> TypeInfo.Option (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | Nullable elemType -> TypeInfo.Option (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | SetType elemType -> TypeInfo.Set (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | MapType (keyType, valueType) -> TypeInfo.Map (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType))\n        | DictionaryType (keyType, valueType) -> TypeInfo.Dictionary (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType, valueType))\n        | SeqType elemType -> TypeInfo.Seq (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | AsyncType elemType -> TypeInfo.Async (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | PromiseType elemType -> TypeInfo.Promise (lazyToDelayed <| lazy (createTypeInfo elemType))\n        | _ -> TypeInfo.Any (lazyToDelayed <| lazy (resolvedType))\n\n    and private typeInfoCache = Dictionary<Type,Fable.SimpleJson.TypeInfo>()\n\n    and createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\n        match typeInfoCache.TryGetValue resolvedType with\n        | true, ti -> ti\n        | false, _ ->\n            let ti = _createTypeInfo resolvedType\n            // see https://github.com/fable-compiler/Fable/issues/1871\n            // Type equality doesn't work for anonymous records - all anon records are considered equal.\n            // For anonymous records, the name is the empty string.\n            let notAnonymousRecord =\n                not (String.IsNullOrEmpty resolvedType.FullName)\n                && not (resolvedType.FullName.EndsWith(\"`1[]\"))\n                && not (resolvedType.FullName.EndsWith(\"`2[]\"))\n\n            if notAnonymousRecord then\n                typeInfoCache.[resolvedType] <- ti\n                ti\n            else\n                ti\n\n    type Fable.SimpleJson.TypeInfo with\n        static member inline createFrom<'t> () : Fable.SimpleJson.TypeInfo =\n            createTypeInfo typeof<'t>\n\n    /// returns whether a type is primitive\n    let isPrimitive = function\n        | TypeInfo.Unit\n        | TypeInfo.String\n        | TypeInfo.UInt16\n        | TypeInfo.UInt32\n        | TypeInfo.UInt64\n        | TypeInfo.Int32\n        | TypeInfo.Bool\n        | TypeInfo.Float32\n        | TypeInfo.Float\n        | TypeInfo.Decimal\n        | TypeInfo.Short\n        | TypeInfo.Long\n        | TypeInfo.Byte\n        | TypeInfo.DateTime\n        | TypeInfo.DateTimeOffset\n        | TypeInfo.DateOnly\n        | TypeInfo.TimeOnly\n        | TypeInfo.BigInt\n        | TypeInfo.Guid\n        | TypeInfo.Option _ -> true\n        | otherwise -> false\n\n    /// returns whether the discrimiated union type is like a enum\n    let enumUnion = function\n        | TypeInfo.Union getCases ->\n            getCases()\n            |> fst\n            |> Array.forall (fun case -> Array.isEmpty case.CaseTypes)\n        | otherwise -> false\n",null,null,null,null,"namespace Fable.SimpleJson\n\nopen System\nopen Fable.Core\nopen FSharp.Reflection\nopen System.Numerics\nopen System.Collections\nopen System.Collections.Generic\nopen Fable.Core.JsInterop\n\nmodule Node =\n\n    /// Converts Base64 string into a byte array in Node environment\n    [<Emit(\"Array.prototype.slice.call(Buffer.from($0, 'base64'))\")>]\n    let bytesFromBase64 (value: string) : byte array = jsNative\n\nmodule Convert =\n    let internal isBrowser () : bool = importDefault \"./isBrowser.js\"\n\n    let insideBrowser = isBrowser()\n\n    [<Emit \"($0 === undefined)\">]\n    let private isUndefined (value: obj) : bool = jsNative\n    let private isDefined (value: obj) : bool = not (isUndefined value)\n\n    /// <summary>Uses internal representation of F# maps to determine whether we are using Fable 3 or not</summary>\n    let usingFable3() =\n        #if FABLE_COMPILER_3\n        true\n        #else\n        let map = JS.JSON.parse(JS.JSON.stringify (Map.ofList [ 1, 1; 2, 2 ]))\n        let tree = get \"tree\" map\n        isDefined tree && isDefined (get \"k\" tree) && isDefined (get \"v\" tree) && isDefined (get \"h\" tree)\n        #endif\n\n    let isUsingFable3 = usingFable3()\n\n    [<Emit(\"typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\")>]\n    let internal insideWorker :  bool = jsNative\n\n    [<Emit(\"$0[$1] = $2\")>]\n    let internal setProp o k v = jsNative\n\n    type InternalMap =\n        | MapEmpty\n        | MapOne of string * Json\n        | MapNode of string * Json * InternalMap * InternalMap\n\n    let rec flattenMap = function\n        | MapEmpty -> [ ]\n        | MapOne (key, value) -> [ key, value ]\n        | MapNode (key, value, left, right) ->\n            [ yield! flattenMap left\n              yield! flattenMap right\n              yield  (key, value) ]\n\n    let (|KeyValue|_|) key (map: Map<string, Json>) =\n        map\n        |> Map.tryFind key\n        |> Option.map (fun value -> key, value, Map.remove key map)\n\n    let (|NonArray|_|) = function\n        | JArray _ -> None\n        | json -> Some json\n\n    let (|MapEmpty|_|) json =\n        match json with\n        | JString \"MapEmpty\" -> Some json\n        | _ -> None\n\n    let (|MapKey|_|) = function\n        | JNumber number -> Some (string number)\n        | JString key -> Some key\n        | _ -> None\n\n    let (|MapOne|_|) = function\n        | JArray [ JString \"MapOne\"; MapKey key; value ] -> Some (key, value)\n        | _ -> None\n\n    let (|MapNode|_|) = function\n        | JArray [ JString \"MapNode\"; MapKey key; value; left; right; JNumber _  ] ->\n            Some (key, value, left, right)\n        | _ -> None\n\n    let rec generateMap json =\n        match json with\n        | MapEmpty _ -> Some InternalMap.MapEmpty\n        | MapOne (key, value) -> Some (InternalMap.MapOne (key, value))\n        | MapNode (key, value, left, right) ->\n            match generateMap left, generateMap right with\n            | Some leftMap, Some rightMap ->\n                Some (InternalMap.MapNode(key, value, leftMap, rightMap))\n            | _ -> None\n        | _ -> None\n\n    let rec flatteFable3Map (tree: Map<string, Json>) =\n        [\n            match Map.tryFind \"k\" tree, Map.tryFind \"v\" tree with\n            | Some (JString key), Some value -> (key, value)\n            | _ -> ()\n\n            match Map.tryFind \"left\" tree with\n            | Some (JObject left) -> yield! flatteFable3Map left\n            | _ -> ()\n\n            match Map.tryFind \"right\" tree with\n            | Some (JObject right) -> yield! flatteFable3Map right\n            | _ -> ()\n        ]\n\n    let rec flattenFable3Lists (linkedList: Map<string, Json>) =\n        [\n            match Map.tryFind \"head\" linkedList with\n            | Some value -> value\n            | None -> ()\n\n            match Map.tryFind \"tail\" linkedList with\n            | Some (JObject tail) -> yield! flattenFable3Lists tail\n            | _ -> ()\n        ]\n\n    /// <summary>Returns whether the type information resembles a type of a sequence of elements (including tuples)</summary>\n    let arrayLike = function\n        | TypeInfo.Array _ -> true\n        | TypeInfo.List _ -> true\n        | TypeInfo.Seq _ -> true\n        | TypeInfo.Tuple _ -> true\n        | TypeInfo.Set _ -> true\n        | TypeInfo.ResizeArray _ -> true\n        | TypeInfo.HashSet _ -> true\n        | _ -> false\n\n    let isRecord = function\n        | TypeInfo.Record recordType -> true\n        | _ -> false\n\n    let unionOfRecords = function\n        | TypeInfo.Union getCases ->\n            let (unionCases, unionType) = getCases()\n            unionCases\n            |> Seq.forall (fun case -> case.CaseTypes.Length = 1 && isRecord case.CaseTypes.[0])\n        | _ ->\n            false\n\n    let optional = function\n        | TypeInfo.Option _ -> true\n        | _ -> false\n\n    let isQuoted (input: string) =\n        input.StartsWith \"\\\"\" && input.EndsWith \"\\\"\"\n\n    let betweenQuotes (input: string) = \"\\\"\" + input + \"\\\"\"\n\n    let removeQuotes (input: string) =\n        input.Substring(1, input.Length - 2)\n\n    let rec fromJsonAs (input: Json) (typeInfo: Fable.SimpleJson.TypeInfo) : obj =\n        match input, typeInfo with\n        | JNumber value, TypeInfo.Float -> unbox value\n        | JString value, TypeInfo.Float when value.ToLower() = \"nan\" -> unbox (Double.NaN)\n        | JString value, TypeInfo.Float -> unbox (float value)\n        | JNumber value, TypeInfo.Float32 -> unbox (float32 value)\n        | JString value, TypeInfo.Float32 when value.ToLower() = \"nan\" -> unbox (Double.NaN)\n        | JString value, TypeInfo.Float32 -> unbox (float32 value)\n        // reading number as int -> floor it\n        | JNumber value, TypeInfo.Int32 -> unbox (JS.Math.floor(value))\n        | JBool value, TypeInfo.Bool -> unbox value\n        // reading int from string -> parse it\n        | JString value, TypeInfo.Int32 -> unbox (int value)\n        | JString value, TypeInfo.Char -> unbox (char value)\n        | JNumber value, TypeInfo.Char -> unbox (char (unbox<int> value))\n        // reading into strings\n        | JString value, TypeInfo.String -> unbox value\n        | JNumber value, TypeInfo.String -> unbox (string value)\n        // uri\n        | JString value, TypeInfo.Uri -> unbox(Uri(value))\n        // decimals\n        | JString value, TypeInfo.Decimal -> unbox (decimal value)\n        | JNumber value, TypeInfo.Decimal -> unbox (decimal value)\n        | JString value, TypeInfo.Short -> unbox (int16 value)\n        | JNumber value, TypeInfo.Short -> unbox (int16 value)\n        // Unsigned integers\n        | JNumber value, TypeInfo.UInt16 -> unbox (uint16 value)\n        | JString value, TypeInfo.UInt16 -> unbox (uint16 value)\n        | JNumber value, TypeInfo.UInt32 -> unbox (uint32 value)\n        | JString value, TypeInfo.UInt32 -> unbox (uint32 value)\n        | JNumber value, TypeInfo.UInt64 -> unbox (uint64 value)\n        | JString value, TypeInfo.UInt64 -> unbox (uint64 value)\n        | JNumber value, TypeInfo.TimeSpan -> unbox (JS.Math.floor value)\n        | JString value, TypeInfo.Enum getlElemType ->\n            let (underlyingType, originalType) = getlElemType()\n            match underlyingType with\n            | TypeInfo.Int32 ->\n                match Int32.TryParse(value) with\n                | true, parsedNumber ->\n                    unbox parsedNumber\n                | false, _ ->\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\n            | TypeInfo.Long ->\n                match Int64.TryParse(value) with\n                | true, parsedNumber ->\n                    unbox parsedNumber\n                | false, _ ->\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\n            | other ->\n                failwithf \"The value '%s' cannot be converted to enum of type '%s'\" value originalType.Name\n        | JNumber value, TypeInfo.Enum getElemType ->\n            let (_, originalType) = getElemType()\n            unbox value\n        // byte[] coming from the server is serialized as base64 string\n        // convert it back to the actual byte array\n        | JString value, TypeInfo.Array getElemType ->\n            let elemType = getElemType()\n            match elemType with\n            | TypeInfo.Byte ->\n                if insideWorker || insideBrowser\n                then unbox (Convert.FromBase64String value)\n                else unbox (Node.bytesFromBase64 value)\n            | otherType -> failwithf \"Cannot convert arbitrary string '%s' to %A\" value otherType\n\n        // null values for strings are just the null string\n        | JNull, TypeInfo.String -> unbox null\n        | JNull, TypeInfo.Unit -> unbox ()\n        | genericJson, TypeInfo.Object -> unbox (SimpleJson.toPlainObject genericJson)\n        // int64 as string -> parse it\n        | JString value, TypeInfo.Long -> unbox (int64 value)\n        | JString value, TypeInfo.Byte -> unbox (byte value)\n        | JNumber value, TypeInfo.Byte -> unbox (byte value)\n        | JNumber value, TypeInfo.SByte -> unbox (sbyte value)\n        | JString value, TypeInfo.SByte -> unbox (sbyte value)\n        // BigInt as string -> parse it\n        | JString value, TypeInfo.BigInt -> unbox (BigInteger.Parse value)\n        | JNumber value, TypeInfo.BigInt -> unbox (bigint (JS.Math.floor(value)))\n        // parse formatted date time\n        | JString value, TypeInfo.DateTime -> unbox (DateTime.Parse(value))\n        // parse formatted date time offset\n        | JString value, TypeInfo.DateTimeOffset -> unbox (DateTimeOffset.Parse(value))\n        | JNumber value, TypeInfo.DateTimeOffset ->\n            let seconds = int64 (JS.Math.floor(value))\n            unbox (DateTimeOffset.FromUnixTimeSeconds seconds)\n#if NET6_0_OR_GREATER\n        // TimeOnly, DateOnly\n        | JNumber value, TypeInfo.DateOnly -> unbox (DateOnly.FromDayNumber (int value))\n        | JString value, TypeInfo.DateOnly -> unbox (DateOnly.FromDayNumber (int value))\n        | JString value, TypeInfo.TimeOnly -> unbox (TimeOnly (int64 value))\n#endif\n\n        // deserialize union from objects\n        // { \"One\": 20 } or {\"One\": [20]} -> One of int\n        | JObject values, TypeInfo.Union (getTypes) ->\n            let (cases, unionType) = getTypes()\n            match Map.toList values with\n            | [ caseName, JArray values ] ->\n                cases\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\n                |> function\n                    | None ->\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\n                        let expectedCases = String.concat \", \" caseNames\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && arrayLike foundCase.CaseTypes.[0] ->\n                        let deserialized = fromJsonAs (JArray values) foundCase.CaseTypes.[0]\n                        FSharpValue.MakeUnion(foundCase.Info, [| deserialized |])\n                        |> unbox\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && optional foundCase.CaseTypes.[0] ->\n                        let parsedOptional = unbox (fromJsonAs (JArray values) foundCase.CaseTypes.[0])\n                        FSharpValue.MakeUnion(foundCase.Info, [| parsedOptional |])\n                        |> unbox\n                    | Some foundCase ->\n                        if Array.length foundCase.CaseTypes = 1\n                            && not (arrayLike foundCase.CaseTypes.[0])\n                            && Array.length foundCase.CaseTypes <> List.length values\n                        then failwithf \"Expected case '%s' to have %d argument types but the JSON data only contained %d values\" foundCase.CaseName (Array.length foundCase.CaseTypes) (List.length values)\n                        let parsedValues =\n                            Array.ofList values\n                            |> Array.zip foundCase.CaseTypes\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\n                        FSharpValue.MakeUnion(foundCase.Info, parsedValues)\n                        |> unbox\n            | [ caseName, NonArray json ] ->\n                cases\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\n                |> function\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = [| caseType |] }) ->\n                        FSharpValue.MakeUnion(caseInfo, [| unbox fromJsonAs json caseType |])\n                        |> unbox\n                    | _ ->\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\n                        let expectedCases = String.concat \", \" caseNames\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\n\n            // Specific for Fable 3\n            | otherwise when Map.containsKey \"tag\" values && Map.containsKey \"fields\" values && Map.count values = 2 ->\n                match Map.tryFind \"tag\" values, Map.tryFind \"fields\" values with\n                | Some (JNumber caseIndex), Some (JArray fieldValues) ->\n                    let foundCase = cases.[int caseIndex]\n                    let values =\n                        fieldValues\n                        |> Array.ofList\n                        |> Array.mapi (fun index value -> fromJsonAs value (foundCase.CaseTypes.[index]))\n\n                    FSharpValue.MakeUnion(foundCase.Info, values)\n                | _ ->\n                    failwithf \"Could not deserialize JSON(%s) into type %s\" (SimpleJson.toString (JObject values)) unionType.FullName\n\n            | otherwise when unionOfRecords typeInfo ->\n                let discriminators = [\"__typename\"; \"$typename\"; \"$type\" ]\n                let foundDiscriminatorKey =\n                    discriminators\n                    |> List.tryFind (fun keyword -> Map.containsKey keyword values)\n\n                match foundDiscriminatorKey with\n                | None ->\n                    failwithf \"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected '__typename', '$typeName' or '$type'\" unionType.Name\n                | Some discriminatorKey ->\n                    let discriminatorValueJson = Map.find discriminatorKey values\n                    match discriminatorValueJson with\n                    | JString discriminatorValue ->\n                        let foundUnionCase =\n                            cases\n                            |> Seq.tryFind (fun case -> case.CaseName.ToUpperInvariant() = discriminatorValue.ToUpperInvariant())\n\n                        match foundUnionCase with\n                        | None ->\n                            failwithf \"Union of records of type '%s' does not have a matching case '%s'\" unionType.Name discriminatorValue\n                        | Some case ->\n                            // Assuming the case types is [recordType]\n                            // one element of types and the first element is a record\n                            // as satisfied by the unionOfRecords function\n                            let record = unbox (fromJsonAs (JObject values) (case.CaseTypes.[0]))\n                            FSharpValue.MakeUnion(case.Info, [| record |])\n                    | otherwise ->\n                        failwithf \"Union of records of type '%s' cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\" unionType.Name\n            | otherwise ->\n                // TODO!!! Better error messages here\n                let unexpectedJson = JS.JSON.stringify otherwise\n                let expectedType = JS.JSON.stringify cases\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\n        | JNull, TypeInfo.Option _ -> unbox None\n        | jsonValue, TypeInfo.Option optionalTypeDelayed when jsonValue <> JNull ->\n            let optionalType = optionalTypeDelayed()\n            let parsedOptional = unbox (fromJsonAs jsonValue optionalType)\n            unbox Some parsedOptional\n        | JString value, TypeInfo.Guid _ -> unbox (System.Guid.Parse(value))\n        // int64 as a number, convert it to int then to in64\n        | JNumber value , TypeInfo.Long _ -> unbox int64 (int value)\n        // int64 as the internal representation from Long.js\n        // then reconstruct it from the high/low (two integers) components\n        | JObject dict, TypeInfo.Long _ ->\n            let get key = Map.tryFind key dict\n            [ get \"low\"; get \"high\"; get \"unsigned\" ]\n            |> List.choose id\n            |> function\n                | [ JNumber low; JNumber high; JBool _ ] ->\n                    let lowBytes = BitConverter.GetBytes(int low)\n                    let highBytes = BitConverter.GetBytes(int high)\n                    let combinedBytes = Array.concat [ lowBytes; highBytes ]\n                    BitConverter.ToInt64(combinedBytes, 0)\n                    |> unbox\n                | _ -> failwithf \"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"\n        // convert a single case string to union\n        // \"One\" -> One, here is a special case where the case in quoted inside the string\n        | JString caseName, TypeInfo.Union getTypes when isQuoted caseName ->\n            let (caseTypes, unionType) = getTypes()\n            caseTypes\n            |> Array.tryFind (fun case -> case.CaseName = removeQuotes caseName)\n            |> function\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\n                | None ->\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\n                    let expectedCases = String.concat \", \" caseNames\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\n        // convert a single case string to union\n        // \"One\" -> One\n        | JString caseName, TypeInfo.Union getTypes ->\n            let (caseTypes, unionType) = getTypes()\n            caseTypes\n            |> Array.tryFind (fun case -> case.CaseName = caseName)\n            |> function\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\n                | None ->\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\n                    let expectedCases = String.concat \", \" caseNames\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\n        | JString serializedRecord, TypeInfo.Record getFields ->\n            fromJsonAs (SimpleJson.parse serializedRecord) typeInfo\n        // convert unions from arrays\n        // [\"One\", 20] -> One of int\n        | JArray caseValue, TypeInfo.Union getTypes ->\n            let (cases, unionType) = getTypes()\n            match caseValue with\n            // Union case without values\n            | [ JString caseName ] ->\n                cases\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\n                |> function\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = caseInfoTypes }) ->\n                        // single case without values\n                        unbox (FSharpValue.MakeUnion(caseInfo, [||]))\n                    | None ->\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\n                        let expectedCases = String.concat \", \" caseNames\n                        failwithf \"Case '%s' was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\n            | JString caseName :: values ->\n                cases\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\n                |> function\n                    | None ->\n                        let caseNames = Array.map (fun ({ CaseName = name }) -> name) cases\n                        let expectedCases = String.concat \", \" caseNames\n                        failwithf \"Case %s was not valid, expected one of [%s]\" caseName expectedCases\n                    | Some ({ CaseName = foundCaseName; Info = caseInfo; CaseTypes = types }) ->\n                        if Array.length types <> List.length values\n                        then failwithf \"The number of union case parameters for '%s' is different\" foundCaseName\n                        let parsedValues =\n                            Array.ofList values\n                            |> Array.zip types\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\n                        FSharpValue.MakeUnion(caseInfo, parsedValues)\n                        |> unbox\n            | otherwise ->\n                let unexpectedJson = JS.JSON.stringify otherwise\n                let expectedType = JS.JSON.stringify cases\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\n        // Arrays\n        | JArray values, TypeInfo.Array elementTypeDelayed ->\n            let elementType = elementTypeDelayed()\n            values\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\n            |> Array.ofList\n            |> unbox\n        // Lists\n        | JArray values, TypeInfo.List elementTypeDelayed ->\n            let elementType = elementTypeDelayed()\n            values\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\n            |> unbox\n\n        // Specific for Fable 3\n        | JObject linkedList, TypeInfo.List elementTypeDelayed ->\n            let elementType = elementTypeDelayed()\n            let flattenedList = flattenFable3Lists linkedList\n            flattenedList\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\n            |> unbox\n\n        | JArray values, TypeInfo.Set elementTypeDelayed ->\n            let elementType = elementTypeDelayed()\n            values\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\n            |> Set.ofList\n            |> unbox\n\n        | JArray values, TypeInfo.Seq elementTypeDelayed ->\n            let elementType = elementTypeDelayed()\n            let converted = List.map (fun value -> unbox (fromJsonAs value elementType)) values\n            unbox converted\n        // Tuples, become just arrays\n        | JArray array, TypeInfo.Tuple tupleTypesDelayed ->\n            let tupleTypes = tupleTypesDelayed()\n            array\n            |> Array.ofList\n            |> Array.zip tupleTypes\n            |> Array.map (fun (jsonType, jsonData) -> fromJsonAs jsonData jsonType)\n            |> unbox\n        // Records\n        | JObject dict, TypeInfo.Record getTypes ->\n            let fields, recordType = getTypes()\n            // Match the JSON object literal keys with their types\n            let recordValues =\n                let values = Map.toList dict\n                fields\n                |> Array.map (fun ({ FieldName = fieldName; FieldType = fieldType }) ->\n                    values\n                    |> List.tryFind (fun (key, value) -> fieldName = key)\n                    |> function\n                        | Some (key, value) -> unbox (fromJsonAs value fieldType)\n                        | None ->\n                            match fieldType with\n                            // field type is an option of something, just return None\n                            | TypeInfo.Option _ -> unbox None\n                            | _ ->\n                              // field type is required and it doens't exist in the JSON\n                              // then generate a nice error message\n                              let dictKeys =\n                                  Map.toList dict\n                                  |> List.map (fst >> sprintf \"'%s'\")\n                                  |> String.concat \", \"\n                                  |> sprintf \"[ %s ]\"\n                              let recordFields =\n                                  fields\n                                  |> Array.map (fun ({ FieldName = name; FieldType = innerFieldType }) ->\n                                      match innerFieldType with\n                                      | TypeInfo.Option _ -> sprintf \"optional('%s')\" name\n                                      | _ -> sprintf \"required('%s')\" name)\n                                  |> String.concat \", \"\n                                  |> sprintf \"[ %s ]\"\n                              failwithf \"Could not find the required key '%s' in the JSON object literal with keys %s to match with record type '%s' that has fields %s\" fieldName dictKeys recordType.Name recordFields)\n            unbox (FSharpValue.MakeRecord(recordType, recordValues))\n\n        | JArray tuples, TypeInfo.Map getTypes ->\n            let (keyType, valueType) = getTypes()\n            let pairs =\n                [ for keyValuePair in tuples do\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (let a = [| keyType; valueType |] in fun () -> a))\n                    yield tuple ]\n            match keyType with\n            | TypeInfo.Int32\n            | TypeInfo.String\n            | TypeInfo.Bool ->\n                pairs\n                |> unbox<(string * obj) list>\n                |> Map.ofList\n                |> unbox\n            | _ ->\n                pairs\n                |> unbox<(IStructuralComparable * obj) list>\n                |> Map.ofList\n                |> unbox\n\n        | JArray tuples, TypeInfo.Dictionary getTypes ->\n            let (keyType, valueType, originalType) = getTypes()\n            let pairs =\n                [ for keyValuePair in tuples do\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (fun () -> [| keyType; valueType |]))\n                    yield tuple ]\n\n            let output =\n                match keyType with\n                | TypeInfo.Union _ ->  Dictionary<Result<_, _>, _>()\n                | TypeInfo.Record _ -> Dictionary<{| dummy: int |}, _>() |> unbox\n                | _ -> Dictionary<IStructuralComparable, _>() |> unbox\n\n            for (key, value) in (unbox<(IStructuralComparable * obj) list> pairs) do output.Add(unbox key, value)\n            unbox output\n\n        | JObject dict, TypeInfo.Dictionary getTypes ->\n            let (keyType, valueType, originalType) = getTypes()\n            dict\n            |> Map.toList\n            |> List.map (fun (key, value) -> fromJsonAs (JString key) keyType, fromJsonAs value valueType )\n            |> fun pairs ->\n                let output =\n                    match keyType with\n                    | TypeInfo.Union _ -> Dictionary<Result<_, _>, _>()\n                    | TypeInfo.Record _ -> Dictionary<{| dummy: int |}, _>() |> unbox\n                    | _ -> Dictionary<IStructuralComparable, _>() |> unbox\n\n                for (key, value) in pairs do output.Add(unbox key, value)\n\n                unbox output\n\n        | JArray items, TypeInfo.HashSet getType ->\n            let elemType = getType()\n            let hashset =\n                match elemType with\n                | TypeInfo.Union _ -> HashSet<Result<_, _>>()\n                | TypeInfo.Record _ -> HashSet<{| dummy: int |}>() |> unbox\n                | _ -> HashSet<IStructuralComparable>() |> unbox\n\n            for item in items do\n                let deserialized = fromJsonAs item elemType\n                hashset.Add(unbox deserialized) |> ignore\n\n            unbox hashset\n\n        | JObject map, TypeInfo.Map getTypes ->\n            let (keyType, valueType) = getTypes()\n            // check whether the map is serialized to it's internal representation\n            // and convert that to back to a normal map from the data\n            match Map.tryFind \"comparer\" map, Map.tryFind \"tree\" map with\n            | Some (JObject comparer), Some (JArray tree) when Map.isEmpty comparer ->\n                match generateMap (JArray tree) with\n                | Some internalMap ->\n                    let pairs =\n                        flattenMap internalMap\n                        |> List.map (fun (key, value) ->\n                            let nextKey =\n                                if not (isQuoted key)\n                                then unbox (fromJsonAs (JString key) keyType)\n                                else unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\n                            let nextValue = unbox (fromJsonAs value valueType)\n                            unbox<obj> nextKey, nextValue)\n                    match keyType with\n                    | TypeInfo.Int32\n                    | TypeInfo.String\n                    | TypeInfo.Bool ->\n                        pairs\n                        |> unbox<(string * obj) list>\n                        |> Map.ofList\n                        |> unbox\n                    | _ ->\n                        pairs\n                        |> unbox<(IStructuralComparable * obj) list>\n                        |> Map.ofList\n                        |> unbox\n\n                | None ->\n                    let inputJson = SimpleJson.toString (JArray tree)\n                    failwithf \"Could not generate map from JSON\\n %s\" inputJson\n\n            // Specific for Fable 3\n            | Some (JObject comparer), Some (JObject tree) when Map.isEmpty comparer ->\n                let flattenedMap = Map.ofList (flatteFable3Map tree)\n                fromJsonAs (JObject flattenedMap) typeInfo\n            | _ ->\n                // if comparer and tree are not present,\n                // assume we are parsing Fable 1 object literal\n                // and converting that to map\n                let pairs =\n                    map\n                    |> Map.toList\n                    |> List.map (fun (key, value) ->\n                        let nextKey =\n                            if not (isQuoted key)\n                            then\n                                if Converter.isPrimitive keyType || Converter.enumUnion keyType\n                                then\n                                    // for primitive type, just read them as string and parse\n                                    unbox (fromJsonAs (JString key) keyType)\n                                else\n                                    // server-side JSON can still be complex (for complex types)\n                                    // but doesn't have to be quoted, parse again here\n                                    unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\n                            else\n                                unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\n                        let nextValue = unbox (fromJsonAs value valueType)\n                        unbox<string> nextKey, nextValue)\n\n                match keyType with\n                | TypeInfo.Int32\n                | TypeInfo.String\n                | TypeInfo.Bool ->\n                    pairs\n                    |> unbox<(string * obj) list>\n                    |> Map.ofList\n                    |> unbox\n                | _ ->\n                    pairs\n                    |> unbox<(IStructuralComparable * obj) list>\n                    |> Map.ofList\n                    |> unbox\n        | _, TypeInfo.Any getType ->\n            let unknownType = getType()\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) unknownType.FullName\n        | _ ->\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) (JS.JSON.stringify typeInfo)\n\n    let fromJson<'t> json typeInfo =\n        unbox<'t> (fromJsonAs json typeInfo)\n\n    let quoteText (inputText: string) : string = importDefault \"./quote.js\"\n\n    let rec serialize value (typeInfo: TypeInfo) =\n        match typeInfo with\n        | TypeInfo.String ->\n            let content = unbox<string> value\n            if isNull content\n            then \"null\"\n            else quoteText content\n        | TypeInfo.Unit -> \"null\"\n        | TypeInfo.Float\n        | TypeInfo.Float32 ->\n            if Double.IsNaN(unbox value)\n            then quoteText \"NaN\"\n            else string (unbox<double> value)\n        | TypeInfo.Char -> quoteText (string (unbox<char> value))\n        | TypeInfo.Byte\n        | TypeInfo.SByte\n        | TypeInfo.UInt16\n        | TypeInfo.UInt32\n        | TypeInfo.Short\n        | TypeInfo.Enum _\n        | TypeInfo.TimeSpan\n        | TypeInfo.Int32 -> string (unbox<int> value)\n        | TypeInfo.UInt64\n        | TypeInfo.Long -> betweenQuotes (string (unbox<int64> value))\n        | TypeInfo.BigInt -> betweenQuotes (string (unbox<bigint> value))\n        | TypeInfo.Decimal -> betweenQuotes (string (unbox<decimal> value))\n        | TypeInfo.Bool -> if unbox<bool> value then \"true\" else \"false\"\n        | TypeInfo.Guid -> betweenQuotes ((unbox<Guid> value).ToString())\n        | TypeInfo.Uri -> betweenQuotes ((unbox<Uri> value).ToString())\n        | TypeInfo.DateTime -> betweenQuotes ((unbox<DateTime> value).ToString(\"O\"))\n        | TypeInfo.DateTimeOffset -> betweenQuotes ((unbox<DateTimeOffset> value).ToString(\"O\"))\n#if NET6_0_OR_GREATER\n        | TypeInfo.DateOnly -> string (unbox<DateOnly> value).DayNumber\n        | TypeInfo.TimeOnly -> betweenQuotes (string (unbox<TimeOnly> value).Ticks)\n#endif\n        | TypeInfo.Record getFields ->\n            let (fieldTypes, recordType) = getFields()\n            let serializedFields =\n                fieldTypes\n                |> Array.map (fun field ->\n                    let fieldValue = FSharpValue.GetRecordField(value, field.PropertyInfo)\n                    sprintf \"\\\"%s\\\": %s\" field.FieldName (serialize fieldValue field.FieldType)\n                )\n\n            \"{\" + String.concat \", \" serializedFields + \"}\"\n\n        | TypeInfo.ResizeArray getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<ResizeArray<obj>>\n                |> Seq.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.HashSet getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<HashSet<obj>>\n                |> Seq.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.Set getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<Set<IComparable>>\n                |> Seq.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.Array getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<obj []>\n                |> Array.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.List getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<obj list>\n                |> List.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.Seq getElementType ->\n            let elementType = getElementType()\n            let values =\n                value\n                |> unbox<obj seq>\n                |> Seq.toArray\n                |> Array.map (fun element -> serialize element elementType)\n                |> String.concat \", \"\n\n            \"[\" + values + \"]\"\n\n        | TypeInfo.Option getElementType ->\n            match unbox<obj option> value with\n            | None -> \"null\"\n            | Some existingValue -> serialize existingValue (getElementType())\n\n        | TypeInfo.Union getCases ->\n            let (unionCases, unionType) = getCases()\n            let (usedCase, fields) = FSharpValue.GetUnionFields(value, unionType)\n            let caseTypes =\n                unionCases\n                |> Array.find (fun case -> case.CaseName = usedCase.Name)\n                |> fun case -> case.CaseTypes\n\n            if enumUnion typeInfo || Array.isEmpty caseTypes then\n                betweenQuotes usedCase.Name\n            elif caseTypes.Length = 1 then\n                \"{\" + betweenQuotes usedCase.Name + \": \" + serialize fields.[0] caseTypes.[0] + \"}\"\n            else\n                let serializedFields =\n                    caseTypes\n                    |> Array.mapi (fun index caseType -> serialize fields.[index] caseType)\n                    |> String.concat \", \"\n\n                \"{\" + betweenQuotes usedCase.Name + \": \" + \"[\" + serializedFields + \"] }\"\n\n        | TypeInfo.Map getPairTypes ->\n            let (keyType, valueType) = getPairTypes()\n\n            let serializedValues =\n                value\n                |> unbox<Map<IComparable, obj>>\n                |> Map.toArray\n                |> Array.map (fun (key, value) ->\n                    let serializedKey = serialize key keyType\n                    let serializedValue = serialize value valueType\n\n                    if isPrimitive keyType || enumUnion keyType then\n                        if not (isQuoted serializedKey)\n                        then (quoteText serializedKey) + \": \" + serializedValue\n                        else serializedKey + \": \" + serializedValue\n                    else\n                        \"[\" + serializedKey + \", \" + serializedValue + \"]\"\n                )\n                |> String.concat \", \"\n\n            if isPrimitive keyType || enumUnion keyType\n            then \"{\" + serializedValues + \"}\"\n            else \"[\" + serializedValues + \"]\"\n\n        | TypeInfo.Dictionary getPairTypes ->\n            let (keyType, valueType, originalType) = getPairTypes()\n            let serializedValues =\n                value\n                |> unbox<Dictionary<IComparable, obj>>\n                |> Seq.map (fun pair ->\n                    let (key, value) = pair.Key, pair.Value\n                    let serializedKey = serialize key keyType\n                    let serializedValue = serialize value valueType\n\n                    if isPrimitive keyType || enumUnion keyType then\n                        if not (isQuoted serializedKey)\n                        then (betweenQuotes serializedKey) + \": \" + serializedValue\n                        else serializedKey + \": \" + serializedValue\n                    else\n                        \"[\" + serializedKey + \", \" + serializedValue + \"]\"\n                )\n                |> String.concat \", \"\n\n            if isPrimitive keyType || enumUnion keyType\n            then \"{\" + serializedValues + \"}\"\n            else \"[\" + serializedValues + \"]\"\n\n        | TypeInfo.Tuple getTupleTypes ->\n            let tupleTypes = getTupleTypes()\n\n            if tupleTypes.Length = 1 then\n                \"[\" + serialize value tupleTypes.[0] + \"]\"\n            else\n                let serializedValues =\n                    value\n                    |> unbox<obj array>\n                    |> Array.mapi (fun index element -> serialize element tupleTypes.[index])\n                    |> String.concat \", \"\n\n                \"[\" + serializedValues + \"]\"\n\n        | TypeInfo.Object ->\n            SimpleJson.stringify value\n\n        | TypeInfo.Any getType ->\n            // fallback to low-level serialization\n            SimpleJson.stringify value\n\n        | _ ->\n            \"null\"\n\n[<AutoOpenAttribute>]\nmodule ConverterExtensions =\n    type Json with\n\n        /// <summary>\n        /// Serialized the input value object into JSON, uses built-in JSON.stringify and should be used with Fable 2.x or earlier\n        /// </summary>\n        static member stringify (value: obj) : string =\n            if Convert.isUsingFable3\n            then JS.console.warn(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\")\n            SimpleJson.stringify value\n\n        /// <summary>\n        /// Serialized the input value into JSON using Reflection. Compatible with Fable 2.x and Fable 3 (codename: nagareyama)\n        /// </summary>\n        static member inline serialize<'t> (value: 't) : string =\n            let typeInfo = TypeInfo.createFrom<'t>()\n            Convert.serialize value typeInfo\n\n        /// Parses the input string as JSON and tries to convert it as the given type argument\n        static member inline parseAs<'t> (input: string) : 't =\n            match SimpleJson.tryParse input with\n            | None -> failwith \"Couldn't parse the input JSON string because it seems to be invalid\"\n            | Some inputJson ->\n                let typeInfo = TypeInfo.createFrom<'t> ()\n                Convert.fromJson<'t> inputJson typeInfo\n\n        /// Parses the input string as JSON using native parsing and tries to convert it as the given type argument\n        static member inline parseNativeAs<'t> (input: string) : 't =\n            let inputJson = SimpleJson.parseNative input\n            let typeInfo = TypeInfo.createFrom<'t> ()\n            Convert.fromJson<'t> inputJson typeInfo\n\n        /// Tries to parse the input string as JSON and tries to convert it as the given type argument, returing a (hopefully) useful error message when it fails\n        static member inline tryParseAs<'t> (input: string) : Result<'t, string> =\n            try Ok (Json.parseAs<'t> input)\n            with | ex -> Error ex.Message\n\n        /// Tries to parse the input string as JSON using native parsing and tries to convert it as the given type argument\n        static member inline tryParseNativeAs<'t> (input: string) : Result<'t, string> =\n            try Ok (Json.parseNativeAs<'t> input)\n            with | ex -> Error ex.Message\n\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\n        static member inline convertFromJsonAs<'t> (input: Json) : 't =\n            let typeInfo = TypeInfo.createFrom<'t> ()\n            Convert.fromJson<'t> input typeInfo\n\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\n        static member inline tryConvertFromJsonAs<'t> (input: Json) : Result<'t, string> =\n            try Ok (Json.convertFromJsonAs<'t> input)\n            with | ex -> Error ex.Message\n","export default function isBrowser() {\n    return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n}","module Common\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser.Types\r\nopen Fable.React\r\nopen Imports\r\n\r\n// Web3\r\n// ---------------\r\nlet getLibrary provider = new Web3Provider(provider)\r\n\r\nlet Injected :IWeb3Connector = new InjectedConnector({ supportedChainIds = [|42|] }) :> IWeb3Connector\r\n\r\nlet web3treeAbi : obj = import \"default\" \"./web3tree-abi.js\"\r\n\r\nlet web3treeAbiHr :obj =\r\n    let inter = new Interface(web3treeAbi)\r\n    inter.format(formatTypes.full)\r\n\r\n// ----------------\r\n\r\ntype DappTxResult<'msg> =\r\n    | Response of 'msg * TransactionResponse\r\n    | Confirmed of 'msg * ConfirmedTransactionResponse\r\n    | UserCancelled of 'msg\r\n    | UnknownError of 'msg * exn\r\n\r\n// --------------\r\n\r\ntype AsyncResult<'t> =\r\n    | Resolved of 't\r\n    | Unresolved\r\n\r\ntype StorageType =\r\n    | Unknown\r\n    | IPFS\r\n    | OnChain\r\n\r\ntype ImageFormat =\r\n    | Svg\r\n    | Jpg\r\n    | Gif\r\n    | Png\r\n    | WebP\r\n    | UnknownFormat\r\n\r\ntype VideoFormat = Mp4\r\n\r\ntype NFTDisplayRecord =\r\n    { display: string\r\n      format: string\r\n      storage: string\r\n      url: string\r\n      hasPreview: bool\r\n      hasW388: bool }\r\n\r\ntype NFTOwners =\r\n    { owners: string[] }\r\n\r\ntype NFT =\r\n    { token_id: string\r\n      token_uri: string\r\n      token_address: string\r\n      block_number: string\r\n      block_number_minted: string\r\n      name: string\r\n      symbol: string\r\n      metadata: string\r\n      display: NFTDisplayRecord\r\n      media_raw: string\r\n      title: string\r\n      description: string }\r\n\r\ntype Like =\r\n    { userAddress: string\r\n      userDisplay: string\r\n      userImage: string\r\n      userUrl: string\r\n      text: string\r\n      timestamp: int64\r\n      blockNumber: int64\r\n      transactionHash: string }\r\n\r\ntype LikeSlim =\r\n    { text: string }\r\n\r\ntype ProfileInfo =\r\n    { displayName: string\r\n      image: string }\r\n\r\ntype NFTResult =\r\n    { index: int\r\n      nft: NFT\r\n      likes: LikeSlim[]\r\n      likeCount: int\r\n      rarityRanking: float }\r\n\r\ntype NftAttribute =\r\n    { traitType: string\r\n      value: string\r\n      displayType: string }\r\n\r\ntype NFTResultFull =\r\n    { nft: NFT\r\n      attributes: NftAttribute[] }\r\n\r\ntype NFTCollection =\r\n    { token_address: string \r\n      name: string\r\n      symbol: string\r\n      ranking: int\r\n      description: string\r\n      bannerUrl: string\r\n      imageUrl: string }\r\n\r\ntype NFTCollectionResult =\r\n    { collection: NFTCollection\r\n      nfts: NFTResult[] }\r\n\r\ntype PagedResult<'t> =\r\n    { results: 't[]\r\n      cursor: string }\r\n\r\ntype NFTDetails =\r\n    { nft: NFT }\r\n\r\ntype TreeLink =\r\n    { name: string\r\n      url: string }\r\n\r\ntype TreeEditLink =\r\n    { key: string\r\n      index: int\r\n      editing: bool\r\n      name: string\r\n      url: string\r\n      nameField: string\r\n      urlField: string }\r\n\r\ntype TreeNft =\r\n    { token_address: string\r\n      token_id: string\r\n      display: bool }\r\n\r\ntype TreeData =\r\n    { profileNft: (string * string) option\r\n      name: string\r\n      bio: string\r\n      links: TreeLink[]\r\n      nfts: Map<string * string, bool>\r\n      colors: string[]\r\n      darkMode: bool }\r\n\r\ntype TreeEditData =\r\n    { profileNft: (string * string) option\r\n      nameField: string\r\n      bioField: string\r\n      hasChanges: bool\r\n      linkFields: TreeEditLink[]\r\n      nftFields: Map<string * string, bool>\r\n      colors: string[]\r\n      darkMode: bool }\r\n\r\ntype AccountData =\r\n    { selectedAccount: string\r\n      profileInfo: ProfileInfo option option\r\n      chainId: int }\r\n\r\ntype CommonModel =\r\n    { accountData: AccountData option }\r\n\r\ntype ChainConfig =\r\n    { infuraUrl: string\r\n      infuraWsUrl: string\r\n      chainId: int\r\n      chainName: string\r\n      moralisChainName: string\r\n      moralisApiKey: string\r\n      web3treeContractAddress: string }\r\n\r\nlet (|ContainsKey|_|) key map = map |> Map.tryFind key\r\n\r\nlet isMobile =\r\n    \r\n    match !!Browser.Dom.window?navigator?userAgent with\r\n    | (x :string) when x.Contains(\"Android\") -> true\r\n    | x when x.Contains(\"webOS\") -> true\r\n    | x when x.Contains(\"iPhone\") -> true\r\n    | x when x.Contains(\"iPad\") -> true\r\n    | x when x.Contains(\"iPod\") -> true\r\n    | x when x.Contains(\"BlackBerry\") -> true\r\n    | x when x.Contains(\"IEMobile\") -> true\r\n    | x when x.Contains(\"Opera Mini\") -> true\r\n    | _ -> false\r\n\r\nlet inline modelViewer props children = domEl \"model-viewer\" props children\r\n\r\nmodule Emojis =\r\n\r\n    let fire = @\"\"\r\n\r\n    let emojis =\r\n        [\"fire\", \"emoji_u1f525\", \"🔥\"\r\n         \"heart\", \"emoji_u2764\", \"❤\"\r\n         \"smile\", \"emoji_u1f600\", \"😃\"\r\n         \"laugh\", \"emoji_u1f602\", \"😂\"\r\n         \"wink\", \"emoji_u1f609\", \"😉\"\r\n         \"cool\", \"emoji_u1f60e\", \"😎\"\r\n         \"nerd\", \"emoji_u1f913\", \"🤓\"\r\n         \"star-struck\", \"emoji_u1f60d\", \"🤩\"\r\n         \"in-love\", \"emoji_u1f970\", \"🥰\"\r\n         \"crazy\", \"emoji_u1f92a\", \"🤪\"\r\n         \"money\", \"emoji_u1f911\", \"🤑\"\r\n         \"surprised\", \"emoji_u1f62e\", \"😲\"\r\n         \"thumbs-up\", \"\", \"👍\"\r\n         \"100\", \"\", \"💯\"\r\n         \"hands-up\", \"\", \"🙌\"\r\n         \"top\", \"\", \"🔝\"\r\n         \"ghost\", \"emoji_u1f47b\", \"👻\"\r\n         \"alien\", \"emoji_u1f47d\", \"👽\"\r\n         \"space-invader\", \"\", \"👾\"\r\n         ]\r\n\r\n    let picByName = emojis |> List.map (fun (n, c, _) -> n, c) |> Map.ofList\r\n\r\n    let charByName = emojis |> List.map (fun (n, _, c) -> n, c) |> Map.ofList\r\n\r\nmodule TreeEditData =\r\n\r\n    let toTree (tree :TreeEditData) =\r\n        { profileNft = tree.profileNft\r\n          name = tree.nameField\r\n          bio = tree.bioField\r\n          links = tree.linkFields |> Array.map (fun l -> { name = l.name; url = l.url })\r\n          nfts = tree.nftFields\r\n          colors = tree.colors\r\n          darkMode = tree.darkMode }\r\n\r\nmodule TreeData =\r\n\r\n    open System.Text\r\n\r\n    let toMarkdown (tree :TreeData) =\r\n        let sb = new StringBuilder()\r\n        match tree.profileNft with\r\n        | Some (address, id) ->\r\n            sb.AppendLine(\"+ \" + address + \", \" + id) |> ignore\r\n        | _ -> ()\r\n        let sb =\r\n            sb.Append(\"#\")\r\n              .AppendLine(tree.name)\r\n              .AppendLine(tree.bio)\r\n              .AppendLine(\"***\")\r\n        for link in tree.links do\r\n            sb.AppendLine(sprintf \"[%s](%s)\" link.name link.url) |> ignore\r\n        let toHide = tree.nfts |> Map.toArray |> Array.map fst |> Array.groupBy fst\r\n        for (address, ids) in toHide do\r\n            sb.AppendLine(sprintf \"* %s\" address) |> ignore\r\n            for (_, id) in ids do\r\n                sb.AppendLine(sprintf \"** %s\" (id.ToString())) |> ignore\r\n        match tree.colors with\r\n        | [||] -> ()\r\n        | _ ->\r\n            let cstr = System.String.Join(\", \", tree.colors)\r\n            let mstr = if tree.darkMode then \"+\" else \"-\"\r\n            sb.AppendLine(sprintf \"%s %s\" mstr cstr) |> ignore\r\n        sb.ToString()\r\n\r\n    let fromMarkdown (markdown :string) =\r\n        let lines = markdown.Split('\\n') |> Array.filter (fun l -> not <| System.String.IsNullOrEmpty l)\r\n        // optional profile nft\r\n        let profileNft =\r\n            if lines.[0].StartsWith(\"+\") then\r\n                let split = lines.[0].Substring(1).Split(',')\r\n                Some (split.[0].Trim(), split.[1].Trim())\r\n            else\r\n                None\r\n        let headerLine = match profileNft with | None -> 0 | Some _ -> 1\r\n        let name = lines.[headerLine].TrimStart('#')\r\n        let bioEnd = lines |> Array.findIndex (fun l -> l = \"***\")\r\n        let bio = System.String.Join(\"\\n\", [| (headerLine + 1) .. bioEnd - 1 |] |> Array.map (fun i -> lines.[i]))\r\n        let links =\r\n            lines |> Array.choose (fun l ->\r\n                let regex = RegularExpressions.Regex(\"\"\"^\\[([\\w\\s\\d]+)\\]\\((https?:\\/\\/[\\w\\d./?=#]+)\\)\"\"\" )\r\n                let m = regex.Matches(l)\r\n                if m.Count > 0 then Some (m.[0].Groups.[1].Value, m.[0].Groups.[2].Value) else None)\r\n                |> Array.map (fun (n, u) -> { name = n; url = u })\r\n        let rec addHide tokenAddress nfts (lines :string list) =\r\n            match lines with\r\n            | [] -> nfts\r\n            | (l::ls) ->\r\n                if l.StartsWith(\"**\") then\r\n                    let id = l.TrimStart('*').Trim()\r\n                    addHide tokenAddress (nfts |> Map.add (tokenAddress, id) true) ls\r\n                else\r\n                    if l.StartsWith(\"*\") then addHide (l.TrimStart('*').Trim()) nfts ls\r\n                    else addHide tokenAddress nfts ls\r\n        let remaining = lines |> Array.skip (bioEnd + 1) |> Array.toList\r\n        let darkMode, colors =\r\n            let last = lines |> Array.last\r\n            if last.StartsWith(\"-\") || last.StartsWith(\"+\") then\r\n                last.StartsWith(\"+\"), last.Substring(2).Split(',') |> Array.map (fun s -> s.Trim())\r\n            else false, [||]\r\n        { profileNft = profileNft\r\n          name = name\r\n          bio = bio\r\n          links = links\r\n          nfts = addHide \"\" Map.empty remaining\r\n          colors = colors\r\n          darkMode = darkMode }\r\n\r\nmodule ColorUtils =\r\n\r\n    let gradients =\r\n        [[\"#FF4E50\"; \"#F9D423\"], \"Dance To Forget\"\r\n         [\"#ee0979\"; \"#ff6a00\"], \"Ibiza Sunset\"\r\n         [\"#FC354C\"; \"#0ABFBC\"], \"Miaka\"\r\n         [\"#e14fad\"; \"#f9d423\"], \"Juicy Cake\"\r\n         [\"#FEAC5E\"; \"#C779D0\"; \"#4BC0C8\"], \"Atlas\"\r\n         [\"#DA22FF\"; \"#9733EE\"], \"Intuitive Purple\"\r\n         [\"#f953c6\"; \"#b91d73\"], \"Neuromancer\"\r\n         [\"#FC466B\"; \"#3F5EFB\"], \"Submlime Vivid\"\r\n         [\"#9796f0\"; \"#fbc7d4\"], \"Anamnisar\"\r\n         [\"#00dbde\"; \"#fc00ff\"], \"North Miracle\"\r\n         [\"#283048\"; \"#859398\"], \"Titanium\"\r\n         [\"#373B44\"; \"#4286f4\"], \"Dark Ocean\"\r\n         [\"#3a6186\"; \"#89253e\"], \"Love Couple\"\r\n         [\"#4ECDC4\"; \"#556270\"], \"Disco\"\r\n         [\"#2193b0\"; \"#6dd5ed\"], \"Cool Blues\"\r\n         [\"#c2e59c\"; \"#64b3f4\"], \"Green and Blue\"\r\n         [\"#16A085\"; \"#F4D03F\"], \"Harmonic Energy\"\r\n         [\"#FA8BFF\"; \"#2BD2FF\"; \"#2BFF88\"], \"Summer Glow\"\r\n         [\"#434343\"; \"#000000\"], \"Premium Dark\"\r\n         [\"#fdfbfb\"; \"#ebedee\"], \"Cloudy Knoxville\"\r\n         ]\r\n\r\n    let gradientArray =\r\n        gradients |> List.map (fun (cs, n) -> cs |> List.toArray, n) |> Array.ofList\r\n\r\n    let defaultColors = [|\"#283048\"; \"#859398\"|]\r\n\r\n    let fromRgb (r, g, b) =\r\n        let r = float r / 255.0\r\n        let g = float g / 255.0\r\n        let b = float b / 255.0\r\n        let mn = min (min r g) b\r\n        let mx = max (max r g) b\r\n        let d = mx - mn\r\n        let l = (mx + mn) / 2.0\r\n        if d <> 0.0 then\r\n            let s = if l < 0.5 then d / (mx + mn) else d / (2.0 - mx - mn)\r\n            let h = if r = mx then (g - b) / d else if g = mx then 2.0 + (b - r) / d else 4.0 + (r - g) / d\r\n            let h = h * 60.0\r\n            let h = if h < 0.0 then h + 360.0 else h\r\n            h, s, l\r\n        else 0.0, 0.0, l\r\n\r\n    let toRgb (h, s, l) =\r\n        let h = h / 60.0\r\n        match s with\r\n        | 0.0 -> let v = int (round (l * 255.0)) in v, v, v\r\n        | _ ->\r\n            let calc c t1 t2 =\r\n                let c = if c < 0.0 then c + 1.0 else if c > 1.0 then c - 1.0 else c\r\n                if 6.0 * c < 1.0 then t1 + (t2 - t1) * 6.0 * c\r\n                    else if 2.0 * c < 1.0 then t2\r\n                        else if 3.0 * c < 2.0 then t1 + (t2 - t1) * (2.0 / 3.0 - c) * 6.0 else t1\r\n            let t2 = if l < 0.5 then l * (1.0 + s) else (l + s) - (l * s)\r\n            let t1 = 2.0 * l - t2\r\n            let th = h / 6.0\r\n            let tr = th + (1.0 / 3.0)\r\n            let tg = th\r\n            let tb = th - (1.0 / 3.0)\r\n            let tr = calc tr t1 t2\r\n            let tg = calc tg t1 t2\r\n            let tb = calc tb t1 t2\r\n            int (round (tr * 255.0)), int (round (tg * 255.0)), int (round (tb * 255.0))\r\n\r\n    let fromHexStr (color :string) =\r\n        let r = System.Int32.Parse(color.Substring(1, 2), System.Globalization.NumberStyles.HexNumber)\r\n        let g = System.Int32.Parse(color.Substring(3, 2), System.Globalization.NumberStyles.HexNumber)\r\n        let b = System.Int32.Parse(color.Substring(5, 2), System.Globalization.NumberStyles.HexNumber)\r\n        r, g, b\r\n\r\n    let lighten (factor: float) (hexColor :string) =\r\n        let h, s, l = hexColor |> fromHexStr |> fromRgb\r\n        let r, g, b = toRgb (h, (s * (1.0 + factor)), (l * (1.0 + factor)))\r\n        sprintf \"rgb(%i, %i, %i)\" r g b\r\n\r\n    let isLight (colors :string seq) =\r\n        let averageLightness = colors |> Seq.map (fun c -> let _, _, l = c |> fromHexStr |> fromRgb in l) |> Seq.average\r\n        averageLightness > 0.85\r\n\r\n    let isDark (colors :string seq) =\r\n        let averageLightness = colors |> Seq.map (fun c -> let _, _, l = c |> fromHexStr |> fromRgb in l) |> Seq.average\r\n        averageLightness < 0.15\r\n\r\n    let isSlightlyLight (colors: string seq) =\r\n        let averageLightness = colors |> Seq.map (fun c -> let _, _, l = c |> fromHexStr |> fromRgb in l) |> Seq.average\r\n        averageLightness > 0.4\r\n\r\nmodule Config =\r\n\r\n    let private kovan =\r\n      { infuraUrl = \"https://kovan.infura.io/v3/2ba89d75124a4e0baf363346d70820fb\"\r\n        infuraWsUrl = \"wss://kovan.infura.io/ws/v3/2ba89d75124a4e0baf363346d70820fb\"\r\n        chainId = 42\r\n        chainName = \"Kovan\"\r\n        moralisChainName = \"kovan\"\r\n        moralisApiKey = \"jpdexOGpbd1eIulwVUTz5Y1LB1dJow8ApkDhv6YukusfUIFLmVfCzagT4Dv8buWg\"\r\n        web3treeContractAddress = \"0x5f73F01a15efb3311605AFCbB7dDC60055dB941D\" }\r\n\r\n    let network = kovan\r\n\r\n    let alchemyHttps = \"https://eth-mainnet.alchemyapi.io/v2/ISwsu9zW_oF4jSNsJ00y6ldFN_rUDf8g\"\r\n\r\n    let nftPageSize = 6\r\n\r\n    let getBlockExplorerUrl txHash =\r\n        match network.chainId with\r\n        | 42 -> \"https://kovan.etherscan.io/tx/\" + txHash\r\n\r\n    let siteUrl = \"http://localhost:8080\"\r\n\r\nlet getStorageType (src :string) =\r\n    if src.StartsWith \"data:\" then OnChain\r\n    else\r\n        if src.StartsWith \"ipfs://\" then IPFS\r\n        else Unknown\r\n\r\nmodule Moralis =\r\n\r\n    open Fable.SimpleHttp\r\n    open Fable.SimpleJson\r\n\r\n    type PagedResult<'t> =\r\n        { total: int\r\n          page: int\r\n          page_size: int\r\n          cursor: string\r\n          result: 't[] }\r\n\r\n    type ProfileEvent =\r\n        { user: string\r\n          text: string\r\n          block_number: int64 }\r\n\r\n    type EventResults<'t> =\r\n        { results: 't[] }\r\n\r\n    let getProfileEvents (account :string) =\r\n        let url =\r\n            \"https://eqvine8lhmho.usemoralis.com:2053/server/classes/profile?order=-block_number&limit=1&where=%7B%20%22user%22%20%3A%20%22\" + account.ToLower() + \"%22%20%7D\"\r\n        async {\r\n            let! response =\r\n                Http.request url\r\n                    |> Http.method GET\r\n                    |> Http.header (Headers.accept \"application/json\")\r\n                    |> Http.header (Headers.create \"X-Parse-Application-Id\" \"xM24pQrlxdF6qlE6cTNfb1vvztGUCRV98APSyytQ\")\r\n                    |> Http.header (Headers.create \"X-Parse-Master-Key\" \"mMnh4gsodOoq9QTwG8l9uAW2fmcDNHDRbQFiXdqG\")\r\n                    |> Http.send\r\n            let results : EventResults<ProfileEvent> = Json.parseAs response.responseText\r\n            return results\r\n            }\r\n\r\nmodule Server =\r\n\r\n    open Fable.SimpleJson\r\n    open Fable.SimpleHttp\r\n\r\n    let baseUrl = \"https://sociable.network\"\r\n\r\n    let postReceipt (receipt :obj) =\r\n        async {\r\n            let body = Json.stringify receipt\r\n            let! code, _ = Http.post (baseUrl + \"/api/receipt\") body\r\n            match code with\r\n            | 200 -> return ()\r\n            | _ -> return failwith \"error\"\r\n        }\r\n\r\n    let getLikes tokenAddress tokenId :Like[] Async =\r\n        async {\r\n            let! code, response = Http.get <| sprintf \"%s/api/likes/%s/%s\" baseUrl tokenAddress tokenId\r\n            match code with\r\n            | 200 -> return Json.parseAs response\r\n            | _ -> return [||]\r\n        }\r\n\r\n    let getProfileInfo address :ProfileInfo option Async =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/profileinfo/\" + address\r\n            match code with\r\n            | 200 -> return Some (Json.parseAs response)\r\n            | 404 -> return None\r\n            | _ -> return failwith \"error\"\r\n        }\r\n\r\n    let getAddressForEns username =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/address/\" + username\r\n            match code with\r\n            | 200 -> return Some response\r\n            | 404 -> return None\r\n            | _ -> return failwith \"error\"\r\n        }\r\n\r\n    let getAddressForUrl url =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/map/\" + url\r\n            match code with\r\n            | 200 -> return Some response\r\n            | 404 -> return None\r\n            | _ -> return failwith \"error\"\r\n        }\r\n\r\n    let getUrlForAddress address =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/map/\" + address\r\n            match code with\r\n            | 200 -> return Some response\r\n            | _ -> return failwith \"error\"\r\n        }\r\n\r\n    let getEns address =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/ens/\" + address\r\n            match code with\r\n            | 200 when not <| System.String.IsNullOrEmpty response -> return Some response\r\n            | _ -> return None\r\n        }\r\n\r\n    let getTreeData address =\r\n        async {\r\n            let! response = Moralis.getProfileEvents address\r\n            let getColorsForAddress () =\r\n                let r = System.Int32.Parse(address.Substring(2, 2), System.Globalization.NumberStyles.HexNumber)\r\n                let colors, _ = ColorUtils.gradients |> List.item (r % ColorUtils.gradients.Length)\r\n                let darkMode = r % 2 = 0\r\n                colors |> List.toArray, darkMode\r\n            match response.results.Length with\r\n            | 0 ->\r\n                // pick colour scheme at random from address\r\n                let colors, darkMode = getColorsForAddress ()\r\n                return\r\n                    { TreeData.name = \"\"\r\n                      profileNft = None\r\n                      bio = \"\"\r\n                      links = [||]\r\n                      nfts = Map.empty\r\n                      colors = colors\r\n                      darkMode = darkMode }\r\n            | _ ->\r\n                let latest = response.results |> Array.maxBy (fun e -> e.block_number)\r\n                let treeData = latest.text |> TreeData.fromMarkdown\r\n                match treeData.colors with\r\n                | [||] ->\r\n                    let colors, darkMode = getColorsForAddress ()\r\n                    return { treeData with colors = colors; darkMode = darkMode }\r\n                | _ -> return treeData\r\n        }\r\n\r\n    let getNFTs account =\r\n        async {\r\n            let! code, response = Http.get <| baseUrl + \"/api/nfts?account=\" + account\r\n            match code with\r\n            | 200 ->\r\n                let nfts :PagedResult<NFTCollectionResult> = Json.parseNativeAs response\r\n                return nfts\r\n            | _ -> return { results = [||]; cursor = null }\r\n        }\r\n\r\n    let getNFT tokenAddress tokenId =\r\n        async {\r\n            let! code, response = Http.get <| sprintf \"%s/api/nft/%s/%s\" baseUrl tokenAddress tokenId\r\n            match code with\r\n            | 200 when not <| System.String.IsNullOrEmpty (response) ->\r\n                let nft :NFT = Json.parseNativeAs response\r\n                return Some nft\r\n            | _ -> return None\r\n        }\r\n\r\n    let getNFTDetails tokenAddress tokenId =\r\n        async {\r\n            let! code, response = Http.get <| sprintf \"%s/api/nftdetails/%s/%s\" baseUrl tokenAddress tokenId\r\n            match code with\r\n            | 200 when not <| System.String.IsNullOrEmpty (response) ->\r\n                let nft :NFTResultFull = Json.parseNativeAs response\r\n                return Some nft\r\n            | _ -> return None\r\n        }\r\n\r\n    let getNFTOwners tokenAddress tokenId =\r\n        async {\r\n            let! code, response = Http.get <| sprintf \"%s/api/nftowners/%s/%s\" baseUrl tokenAddress tokenId\r\n            match code with\r\n            | 200 when not <| System.String.IsNullOrEmpty (response) ->\r\n                let nft :NFTOwners = Json.parseNativeAs response\r\n                return Some nft\r\n            | _ -> return None\r\n        }\r\n\r\n    let getCollection tokenAddress =\r\n        async {\r\n            let! code, response = Http.get <| sprintf \"%s/api/collection/%s\" baseUrl tokenAddress\r\n            match code with\r\n            | 200 when not <| System.String.IsNullOrEmpty (response) ->\r\n                let nft :NFTCollection = Json.parseNativeAs response\r\n                return Some nft\r\n            | _ -> return None\r\n        }\r\n\r\n    let getTreeAndProfileNft address =\r\n        async {\r\n            let! tree = getTreeData address\r\n            let! profileNft =\r\n                match tree.profileNft with\r\n                | None -> async { return None }\r\n                | Some (tokenAddress, tokenId) ->\r\n                    getNFT tokenAddress tokenId\r\n            return tree, profileNft\r\n        }\r\n\r\nmodule Validate =\r\n\r\n    let linkName txt = if System.String.IsNullOrEmpty txt then false else true\r\n\r\n    let linkUrl txt = System.Text.RegularExpressions.Regex.IsMatch(txt, \"^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&%\\$#_]*)?$\")\r\n\r\n\r\n\r\n","\r\n[<RequireQualifiedAccess>]\r\nmodule Promise\r\n\r\n#nowarn \"1182\" // Unused values\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\n[<Emit(\"new Promise($0)\")>]\r\n/// <summary>\r\n/// Create a promise from a function\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let write (path: string) (content: string) =\r\n///     Promise.create (fun resolve reject ->\r\n///         Node.Api.fs.writeFile(path, content, (fun res ->\r\n///             match res with\r\n///             | Some res -> reject (res :?> System.Exception)\r\n///             | None -> resolve ()\r\n///         ))\r\n///     )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"f\">\r\n/// Function used to create the promise, it receives two other function parameters:\r\n///\r\n/// - <c>success</c> : called when the promise is resolved\r\n/// - <c>fail</c> : called when the promise is rejected\r\n/// </param>\r\n/// <typeparam name=\"'T\">Return type of the promise</typeparam>\r\n/// <returns>\r\n/// The promise created by the function\r\n/// </returns>\r\nlet create (f: ('T -> unit) -> (exn -> unit) -> unit): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\r\n\r\n/// <summary>\r\n/// Create a promise which wait <c>X</c> ms before resolving.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// // Do something\r\n/// doSomething ()\r\n/// // Sleep for 1 second\r\n/// |> Promise.sleep 1000\r\n/// // Do another thing\r\n/// |> Promise.map (fun _ ->\r\n///     doAnotherThing ()\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"ms\">Number of milliseconds to wait</param>\r\n/// <returns>A delayed promise</returns>\r\nlet sleep (ms: int): JS.Promise<unit> = jsNative\r\n\r\n[<Emit(\"Promise.resolve($0)\")>]\r\n/// <summary>\r\n/// Create a promise (in resolved state) with supplied value.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.lift {| Firstname = \"John\" |}\r\n/// |> Promise.map (fun user ->\r\n///     console.log $\"Hello, %s{user.Firstname}\"\r\n///     // Expected output: \"Hello, John\"\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"a\">Value to return</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>Returns a promise returning the supplied value</returns>\r\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"Promise.reject($0)\")>]\r\n/// <summary>\r\n/// Creates promise (in rejected state) with supplied reason.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.reject (Exception \"User not found\")\r\n/// |> Promise.map (fun _ ->\r\n///     // This promise is skipped\r\n/// )\r\n/// |> Promise.catch (fun error ->\r\n///     console.error $\"An error ocurred: %s{error.Message}\"\r\n///     // Expected output: \"An error ocurred: User not found\"\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"reason\">Reason to return</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>Return a promise in a rejected state</returns>\r\nlet reject<'T> (reason: exn) : JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\n/// <summary>\r\n/// Bind a value into a promise of a new type.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.lift {| Firstname = \"John\" |}\r\n/// |> Promise.bind (fun user ->\r\n///     // Do something with user and returns a promise\r\n///     Promise.create (fun resolve reject ->\r\n///         resolve $\"Hello, %s{user.Firstname}\"\r\n///     )\r\n/// )\r\n/// |> Promise.map (fun message ->\r\n///     console.log message\r\n///     // Expected output: \"Hello, John\"\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"a\">\r\n/// A function that takes the value of type <c>T1</c> and transforms it into a promise of type <c>T2</c>.\r\n/// </param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <returns>A promise of the output type of the binder.</returns>\r\nlet bind (a: 'T1 -> JS.Promise<'T2>) (pr: JS.Promise<'T1>): JS.Promise<'T2> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\n/// <summary>\r\n/// Map a value into another type, the result will be wrapped in a promise for you.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.lift {| Firstname = \"John\" |}\r\n/// |> Promise.map (fun user ->\r\n///     user.Firstname\r\n/// ) // Returns a Promise&lt;string&gt; with the value \"John\"\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"a\">A function to apply to the result of the input promise.</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <returns>A promise after applying the mapping function</returns>\r\nlet map (a: 'T1 -> 'T2) (pr: JS.Promise<'T1>): JS.Promise<'T2> = jsNative\r\n\r\n[<Emit(\"void ($1.then($0))\")>]\r\n/// <summary>\r\n/// Call a function with the result of a promise and stop the promise chain.\r\n///\r\n/// This is equivalent to <c>Promise.map ... |> ignore</c>\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// fetchUser ()\r\n/// |> Promise.iter (fun user ->\r\n///     console.log \"User firstname is user.Firstname\"\r\n/// ) // unit\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"a\">A function to apply to the result of the input promise</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\nlet iter (a: 'T -> unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n\r\n/// <summary>\r\n/// This is an identity function, it calls the given function and return the promise value untouched.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// fetchUser ()\r\n/// |> Promise.tap (fun user ->\r\n///     // Do something\r\n///     console.log \"The user has been received\"\r\n/// )\r\n/// |> Promise.map (fun user ->\r\n///     // user value is available here untouched\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fn\">A function to call after receiving the receiving of the input promise</param>\r\n/// <param name=\"a\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>A promise of the same type as the input promise</returns>\r\nlet tap (fn: 'T -> unit) (a: JS.Promise<'T>): JS.Promise<'T> =\r\n    a |> map (fun x -> fn x; x)\r\n\r\n[<Emit(\"$1.catch($0)\")>]\r\n/// <summary>\r\n/// Handle an errored promise allowing you pass a return value.\r\n///\r\n/// This version of <c>catch</c> expects a function returning just <c>'T</c>, as opposed to <c>Promise&lt;'T&gt;</c>. If you need to return <c>Promise&lt;'T&gt;</c>, use <c>catchBind</c>.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.create (fun resolve reject ->\r\n///     reject (System.Exception \"User not found\")\r\n/// )\r\n/// |> Promise.catch (fun error ->\r\n///     // Log the error\r\n///     console.error error\r\n///     // Do something to recover from the error\r\n///     Error error.Message\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fail\">Function to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>A promise which result of the call of fail</returns>\r\nlet catch (fail: exn -> 'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.catch($0)\")>]\r\n/// <summary>\r\n/// Handle an errored promise allowing to call a promise.\r\n///\r\n/// This version of <c>catch</c> expects a function returning <c>Promise&lt;'T&gt;</c> as opposed to just <c>'T</c>. If you need to return just 'T, use <c>catch</c>.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.create (fun resolve reject ->\r\n///     reject (System.Exception \"User not found\")\r\n/// )\r\n/// |> Promise.catchBind (fun error ->\r\n///     // Recover from the error, here we call another promise and returns it's result\r\n///     logErrorToTheServer error\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fail\">Function to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>A promise which is the result of the fail function</returns>\r\nlet catchBind (fail: exn -> JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"void ($1.catch($0))\")>]\r\n/// <summary>\r\n/// Used to catch errors at the end of a promise chain.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.create (fun resolve reject ->\r\n///     reject (System.Exception \"User not found\")\r\n/// )\r\n/// |> Promise.map (fun _ ->\r\n///     // ...\r\n/// )\r\n/// |> Promise.map (fun _ ->\r\n///     // ...\r\n/// )\r\n/// |> Promise.catchEnd (fun error ->\r\n///     // ...\r\n/// ) // Returns unit\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fail\">Fuction to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\nlet catchEnd (fail: exn -> unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$2.then($0).catch($1)\")>]\r\n/// <summary>\r\n/// A combination of <c>map</c> and <c>catch</c>, this function applies the <c>success</c> continuation when the input promise resolves successfully, or <c>fail</c> continuation when the input promise fails.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// somePromise\r\n/// |> Promise.either\r\n///     (fun x -> string x)\r\n///     (fun err -> Promise.lift err.Message)\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"success\">Function to call if the input promise succeeds</param>\r\n/// <param name=\"fail\">Function to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <returns>A new promise which is the result of calling <c>success</c> if <c>pr</c> succeedes, or of <c>fail</c> if <c>pr</c> failed</returns>\r\nlet either (success: 'T1 -> 'T2) (fail: exn -> 'T2) (pr: JS.Promise<'T1>): JS.Promise<'T2> = jsNative\r\n\r\n[<Emit(\"$2.then($0).catch($1)\")>]\r\n/// <summary>\r\n/// A combination of <c>bind</c> and <c>catchBind</c>, this function applies the <c>success</c> continuation when the input promise resolves successfully, or <c>fail</c> continuation when the input promise fails.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// somePromise\r\n/// |> Promise.eitherBind\r\n///     (fun x -> string x |> Promise.lift)\r\n///     (fun err -> Promise.lift err.Message)\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"success\">Binder function to call if the input promise succeeds</param>\r\n/// <param name=\"fail\">Binder function to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <returns>A new promise which is the result of calling <c>success</c> if <c>pr</c> succeedes, or of <c>fail</c> if <c>pr</c> failed</returns>\r\nlet eitherBind (success: 'T1 -> JS.Promise<'T2>) (fail: exn -> JS.Promise<'T2>) (pr: JS.Promise<'T1>): JS.Promise<'T2> = jsNative\r\n\r\n[<Emit(\"void ($2.then($0).catch($1))\")>]\r\n/// <summary>\r\n/// Same as <c>Promise.either</c> but stopping the promise execution.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// somePromise\r\n/// |> Promise.eitherEnd\r\n///     (fun x -> string x)\r\n///     (fun err -> Promise.lift err.Message)\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"success\">Binder function to call if the input promise succeeds</param>\r\n/// <param name=\"fail\">Binder function to call if the input promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\nlet eitherEnd (success: 'T -> unit) (fail: exn -> unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"void $0\")>]\r\n/// <summary>\r\n/// Start a promise.\r\n///\r\n/// Fake starting a promise. It is faking it because promise are hot meaning they execute directly after their creation.\r\n///\r\n/// <c>Promise.start</c> is equivalent to <c>promise |> ignore</c>\r\n///\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// myPromise\r\n/// |> Promise.start\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\nlet start (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.catch($0)\")>]\r\n/// <summary>\r\n/// Same as <c>Promise.start</c> but forcing you to handle the rejected state.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// myPromise\r\n/// |> Promise.tryStart\r\n///     (fun error ->\r\n///         // Do something on error\r\n///     )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fail\">Function to apply if the promise fail</param>\r\n/// <param name=\"pr\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\nlet tryStart (fail: exn -> unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\n/// <summary>\r\n/// Takes a sequence of promises as an input, and returns a single <c>Promise</c> that resolves to an array of the results of the input promises.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let p1 =\r\n///     promise {\r\n///         do! Promise.sleep 100\r\n///         return 1\r\n///     }\r\n/// let p2 =\r\n///     promise {\r\n///         do! Promise.sleep 200\r\n///         return 2\r\n///     }\r\n/// let p3 =\r\n///     promise {\r\n///         do! Promise.sleep 300\r\n///         return 3\r\n///     }\r\n///\r\n/// Promise.Parallel [p1; p2; p3]\r\n/// |> Promise.map (fun res ->\r\n///     // res = [|1; 2; 3 |]\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"pr\">A list of promise to wait for</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>Return a new promise returning an array containing all the promise result</returns>\r\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\n/// <summary>\r\n/// Takes a sequence of promises as an input, and returns a single <c>Promise</c> that resolves to an array of the results of the input promises.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let p1 =\r\n///     promise {\r\n///         do! Promise.sleep 100\r\n///         return 1\r\n///     }\r\n/// let p2 =\r\n///     promise {\r\n///         do! Promise.sleep 200\r\n///         return 2\r\n///     }\r\n/// let p3 =\r\n///     promise {\r\n///         do! Promise.sleep 300\r\n///         return 3\r\n///     }\r\n///\r\n/// Promise.all [p1; p2; p3]\r\n/// |> Promise.map (fun res ->\r\n///     // res = [|1; 2; 3 |]\r\n/// )\r\n/// |> Promise.map ...\r\n/// </code>\r\n/// </example>\r\n///\r\n/// Note: If you need to return mixed types you can use boxing and unboxing\r\n///\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let users =\r\n///     promise {\r\n///         let! users = fetchUsers ()\r\n///         return box users\r\n///     }\r\n/// let posts =\r\n///     promise {\r\n///         let! posts = fetchPosts ()\r\n///         return box posts\r\n///     }\r\n///\r\n/// Promise.all [p1; p2]\r\n/// |> Promise.map (fun res ->\r\n///     let users = unbox&lt;User list&gt; res.[0]\r\n///     let posts = unbox&lt;Post list&gt; res.[1]\r\n///     // ...\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"pr\">A list of promise to wait for</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>Return a new promise returning an array containing all the promise result</returns>\r\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\n\r\n/// <summary>\r\n/// Map the <c>Promise</c> result into a <c>Result</c> type.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n// Success example\r\n/// Promise.lift 42\r\n/// |> Promise.result\r\n/// |> Promise.map (fun value ->\r\n///     // value = Ok 42\r\n/// )\r\n///\r\n/// // Fail example\r\n/// Promise.reject \"Invalid value\"\r\n/// |> Promise.result\r\n/// |> Promise.map (fun value ->\r\n///     // value = Error \"Invalid value\"\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"a\">The input promise</param>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>A promise returning <c>Ok</c> if the input promise succeed, <c>Error</c> if the input promise failed</returns>\r\nlet result (a: JS.Promise<'T>): JS.Promise<Result<'T, exn>> =\r\n    either Ok Error a\r\n\r\n/// <summary>\r\n/// Evaluates to `myPromise |> Promise.map (Result.map fn)`\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.lift 42\r\n/// |> Promise.result\r\n/// |> Promise.mapResult (fun value ->\r\n///     value + 10\r\n/// )\r\n/// |> Promise.map (fun value ->\r\n///     // value = Ok 52\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fn\">The mapping function</param>\r\n/// <param name=\"a\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <typeparam name=\"'E\"></typeparam>\r\n/// <returns>A promise returning the result of applying the mapping function to the input promise result</returns>\r\nlet mapResult (fn: 'T1 -> 'T2) (a: JS.Promise<Result<'T1, 'E>>): JS.Promise<Result<'T2, 'E>> =\r\n    a |> map (Result.map fn)\r\n\r\n\r\n/// <summary>\r\n/// Transform the success part of a result promise into another promise.\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let multiplyBy2 (value : int) =\r\n///     Promise.create (fun resolve reject ->\r\n///         resolve (value * 2)\r\n///     )\r\n///\r\n/// Promise.lift 42\r\n/// |> Promise.result\r\n/// |> Promise.bindResult (fun value ->\r\n///     multiplyBy2 value\r\n/// )\r\n/// |> Promise.map (fun value ->\r\n///     // value = Ok 84\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fn\">The binder function</param>\r\n/// <param name=\"a\">The input promise</param>\r\n/// <typeparam name=\"'T1\"></typeparam>\r\n/// <typeparam name=\"'T2\"></typeparam>\r\n/// <typeparam name=\"'E\"></typeparam>\r\n/// <returns>Returns a new promise applying to the binder function to it if the input promise succeed</returns>\r\nlet bindResult (fn: 'T1 -> JS.Promise<'T2>) (a: JS.Promise<Result<'T1, 'E>>): JS.Promise<Result<'T2, 'E>> =\r\n    a |> bind (fun a ->\r\n        match a with\r\n        | Ok a ->\r\n            fn a |> map Ok\r\n        | Error e ->\r\n            lift (Error e))\r\n\r\n/// <summary>\r\n/// Evaluates to <c>myPromise |> Promise.map (Result.map fn)</c>\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// Promise.reject -1\r\n/// |> Promise.result\r\n/// |> Promise.mapResultError (fun value ->\r\n///     $\"%s{value} is not a valid value\"\r\n/// )\r\n/// |> Promise.map (fun value ->\r\n///     // value = Error \"-1 is not a valid value\"\r\n/// )\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\n/// <param name=\"fn\">A mapper function</param>\r\n/// <param name=\"a\">The input promise</param>\r\n/// <typeparam name=\"'E1\"></typeparam>\r\n/// <typeparam name=\"'E2\"></typeparam>\r\n/// <typeparam name=\"'T\"></typeparam>\r\n/// <returns>A promise returning the result of applying the mapper function to the input promise in case of error, otherwise the result of the input promise as it is</returns>\r\nlet mapResultError (fn: 'E1 -> 'E2) (a: JS.Promise<Result<'T, 'E1>>): JS.Promise<Result<'T, 'E2>> =\r\n    a |> map (Result.mapError fn)\r\n\r\n/// <summary>\r\n/// A builder to provide promise Computation Expression support.\r\n///\r\n/// The CE is available via <c>promise { ... }</c>\r\n/// <example>\r\n/// <code lang=\"fsharp\">\r\n/// let double (value : int) =\r\n///     promise {\r\n///         return value * 2\r\n///     }\r\n/// </code>\r\n/// </example>\r\n/// </summary>\r\ntype PromiseBuilder() =\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member _.Bind(p: JS.Promise<'T1>, f: 'T1 -> JS.Promise<'T2>): JS.Promise<'T2> = jsNative\r\n\r\n    [<Emit(\"$1.then(() => $2)\")>]\r\n    member _.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member _.For(seq: seq<'T>, body: 'T -> JS.Promise<unit>): JS.Promise<unit> =\r\n        // (lift (), seq)\r\n        // ||> Seq.fold (fun p a ->\r\n        //     bind (fun () -> body a) p)\r\n        let mutable p = lift ()\r\n        for a in seq do\r\n            p <- p |> bind (fun () -> body a)\r\n        p\r\n\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member _.For(p: JS.Promise<'T1>, f: 'T1 -> JS.Promise<'T2>): JS.Promise<'T2> = jsNative\r\n\r\n    member this.While(guard: unit -> bool, p: JS.Promise<unit>): JS.Promise<unit> =\r\n        if guard()\r\n        then bind (fun () -> this.While(guard, p)) p\r\n        else lift()\r\n\r\n    [<Emit(\"Promise.resolve($1)\")>]\r\n    member _.Return(a: 'T): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"$1\")>]\r\n    member _.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"Promise.resolve()\")>]\r\n    member _.Zero(): JS.Promise<unit> = jsNative\r\n\r\n    member _.TryFinally(p: JS.Promise<'T>, compensation: unit -> unit): JS.Promise<'T> =\r\n        either (fun (x: 'T) -> compensation(); x) (fun er -> compensation(); raise er) p\r\n\r\n    [<Emit(\"$1.catch($2)\")>]\r\n    member _.TryWith(p: JS.Promise<'T>, catchHandler: exn -> JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    // Delay must generate a cold promise-like object that re-runs every time it's called,\r\n    // so we cannot use the JS Promise constructor which is stateful\r\n    member _.Delay(generator: unit -> JS.Promise<'T>): JS.Promise<'T> =\r\n        !!createObj[\r\n            \"then\" ==> fun onSuccess onError ->\r\n                try generator().``then``(onSuccess, onError)\r\n                with er ->\r\n                    if isNull(box onError) then reject er\r\n                    else\r\n                        try onError er |> lift\r\n                        with er -> reject er\r\n            \"catch\" ==> fun onError ->\r\n                try generator().catch(onError)\r\n                with er ->\r\n                    try onError er |> lift\r\n                    with er -> reject er\r\n        ]\r\n\r\n    // Make sure we call `then` because this may be used with \"cold\" fake promises generated by Delay\r\n    member _.Run(p:JS.Promise<'T>): JS.Promise<'T> = p.``then``(id)\r\n\r\n    member this.Using<'T1, 'T2 when 'T1 :> IDisposable>(resource: 'T1, binder: 'T1 -> JS.Promise<'T2>): JS.Promise<'T2> =\r\n        this.TryFinally(binder(resource), fun () -> resource.Dispose())\r\n\r\n    [<Emit(\"Promise.all([$1, $2])\")>]\r\n    member _.MergeSources(a: JS.Promise<'T1>, b: JS.Promise<'T2>): JS.Promise<'T1 * 'T2> = jsNative\r\n\r\n    [<Emit(\"Promise.all([$1, $2, $3])\")>]\r\n    member _.MergeSources3(a: JS.Promise<'T1>, b: JS.Promise<'T2>, c: JS.Promise<'T3>): JS.Promise<'T1 * 'T2 * 'T3> = jsNative\r\n\r\n    [<Emit(\"Promise.all([$1, $2, $3, $4])\")>]\r\n    member _.MergeSources4(a: JS.Promise<'T1>, b: JS.Promise<'T2>, c: JS.Promise<'T3>, d: JS.Promise<'T4>): JS.Promise<'T1 * 'T2 * 'T3 * 'T4> = jsNative\r\n\r\n    [<Emit(\"Promise.all([$1, $2, $3, $4, $5])\")>]\r\n    member _.MergeSources5(a: JS.Promise<'T1>, b: JS.Promise<'T2>, c: JS.Promise<'T3>, d: JS.Promise<'T4>, e: JS.Promise<'T5>): JS.Promise<'T1 * 'T2 * 'T3 * 'T4 * 'T5> = jsNative\r\n\r\n    [<Emit(\"Promise.all([$1, $2, $3, $4, $5, $6])\")>]\r\n    member _.MergeSources6(a: JS.Promise<'T1>, b: JS.Promise<'T2>, c: JS.Promise<'T3>, d: JS.Promise<'T4>, e: JS.Promise<'T5>, f: JS.Promise<'T6>): JS.Promise<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6> = jsNative\r\n\r\n//    member _.BindReturn(y: JS.Promise<'T1>, f) = map f y\r\n\r\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\r\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\r\n    member _.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\r\n","module Imports\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Browser.Types\r\n\r\n// Web3 providers\r\n// --------------\r\n\r\n[<Import(\"Web3Provider\", from = \"@ethersproject/providers\")>]\r\ntype Web3Provider(provider :obj) = class end\r\n\r\ntype Web3ReactProviderProps =\r\n    | GetLibrary of obj\r\n\r\ntype IWeb3Connector = interface end\r\n\r\ntype InjectedConnectorConfig =\r\n    { supportedChainIds: int[] }\r\n\r\n[<Import(\"InjectedConnector\", from = \"@web3-react/injected-connector\")>]\r\ntype InjectedConnector(InjectedConnectorConfig :InjectedConnectorConfig) =\r\n    interface IWeb3Connector\r\n\r\nlet inline web3ReactProvider (props : Web3ReactProviderProps list) (elems : ReactElement list) : ReactElement = \r\n    ofImport \"Web3ReactProvider\" \"@web3-react/core\"  (keyValueList CaseRules.LowerFirst props) elems\r\n\r\ntype UseWeb3ReactHook =\r\n    { account: string option\r\n      activate: IWeb3Connector -> unit\r\n      active: bool\r\n      chainId: int option\r\n      deactivate: unit -> unit\r\n      library: obj\r\n      error: obj option\r\n      setError: obj -> unit }\r\n\r\nlet useWeb3React :unit -> UseWeb3ReactHook = import \"useWeb3React\" \"@web3-react/core\"\r\n\r\ntype Ethers() =\r\n\r\n    [<Emit(\"new $0.Contract($1, $2, $3)\")>]\r\n    member _.newContract(address :string, abi :obj, signer :obj) = jsNative\r\n\r\nlet ethers :Ethers = import \"ethers\" \"ethers\"\r\n\r\ntype FormatType = interface end\r\n\r\ntype FormatTypes =\r\n    abstract full: FormatType\r\n\r\nlet formatTypes :FormatTypes = import \"FormatTypes\" \"@ethersproject/abi\"\r\n\r\n[<Import(\"Interface\", from = \"@ethersproject/abi\")>]\r\ntype Interface(abi :obj) =\r\n    member _.format(formatType :FormatType) :obj = jsNative\r\n\r\ntype ConfirmedTransactionResponse =\r\n    abstract blockHash: string\r\n    abstract blockNumber: int\r\n    abstract confirmations: int\r\n    abstract gasUsed: obj\r\n    abstract transactionHash: string\r\n    abstract from: string\r\n\r\ntype TransactionResponse =\r\n    abstract chainId: int\r\n    abstract confirmations: int\r\n    abstract gasLimit: obj\r\n    abstract gasPrice: obj\r\n    abstract hash: string\r\n    abstract nonce: int\r\n    abstract from: string\r\n    abstract wait: unit -> JS.Promise<ConfirmedTransactionResponse>\r\n\r\ntype IBN =\r\n\r\n    abstract eq :IBN -> bool\r\n\r\n    abstract div :IBN -> IBN\r\n\r\n    abstract ``mod`` :IBN -> IBN\r\n\r\ntype IWeb3Util =\r\n\r\n    abstract toBN :int -> IBN\r\n\r\n    abstract toBN :string -> IBN\r\n\r\n    abstract soliditySha3 :obj -> string\r\n\r\n\r\n\r\n//[<Import(\"default\", from = \"web3\")>]\r\n//type Web3(provider :obj) =\r\n\r\n//    [<Emit(\"new $0.eth.Contract($1, $2)\")>]\r\n//    member _.NewContract(abi, address) :obj = jsNative\r\n\r\n//    member _.utils : IWeb3Util = jsNative\r\n\r\n//[<Import(\"default\", from = \"web3-providers-http\")>]\r\n//type Web3HttpProvider(url :string) =\r\n\r\n//    member _.x :int = jsNative\r\n\r\n//[<Import(\"default\", from = \"web3-providers-ws\")>]\r\n//type Web3WsProvider(url :string) =\r\n\r\n//    member _.x :int = jsNative\r\n\r\n//[<Import(\"default\", from = \"web3modal\")>]\r\n//type Web3Modal(config: obj) =\r\n\r\n//    member _.x :int = jsNative\r\n\r\n//    member _.connect() :JS.Promise<obj> = jsNative\r\n\r\nopen Fable.React\r\n\r\nopen Browser.Types\r\n\r\nmodule InfiniteScroll =\r\n\r\n  type InfiniteScrollProps =\r\n    /// Name of the element that the component should render as.\r\n    /// Defaults to 'div'.\r\n    | Element of string option\r\n    /// Whether there are more items to be loaded. Event listeners are removed if false.\r\n    /// Defaults to false.\r\n    | HasMore of bool option\r\n    /// Whether the component should load the first set of items.\r\n    /// Defaults to true.\r\n    | InitialLoad of bool option\r\n    /// Whether new items should be loaded when user scrolls to the top of the scrollable ar\r\n    /// Default to false.\r\n    | IsReverse of bool option\r\n    /// A callback for when more items are requested by the user.\r\n    /// Page param is next page index.\r\n    | LoadMore of (float -> unit)\r\n    /// The number of the first page to load, with the default of 0, the first page is 1.\r\n    /// Defaults to 0.\r\n    | PageStart of float option\r\n    /// The distance in pixels before the end of the items that will trigger a call to loadM\r\n    /// Defaults to 250.\r\n    | Threshold of float option\r\n    /// Proxy to the useCapture option of the added event listeners.\r\n    /// Defaults to false.\r\n    | UseCapture of bool option\r\n    /// Add scroll listeners to the window, or else, the component's parentNode.\r\n    /// Defaults to true.\r\n    | UseWindow of bool option\r\n    /// Loader component for indicating \"loading more\".\r\n    | Loader of ReactElement option\r\n    /// Override method to return a different scroll listener if it's not the immediate pare\r\n    | GetScrollParent of (unit -> HTMLElement option)\r\n\r\n  let inline infiniteScroll (props : InfiniteScrollProps list) (elems : ReactElement list) : ReactElement = \r\n    ofImport \"default\" \"react-infinite-scroller\"  (keyValueList CaseRules.LowerFirst props) elems\r\n\r\nmodule BiDirInfiniteScroll =\r\n\r\n    type BiDirInfiniteScrollProps =\r\n        | Id of string\r\n        | OnReachBottom of (float * float -> unit)\r\n        | OnReachTop of (float * float -> unit)\r\n\r\n    let inline infiniteScroll (props : BiDirInfiniteScrollProps list) (elems : ReactElement list) : ReactElement = \r\n        ofImport \"default\" \"react-bidirectional-infinite-scroll\"  (keyValueList CaseRules.LowerFirst props) elems\r\n\r\nmodule ReactMarkdown =\r\n\r\n    let inline markdown (elems :ReactElement list) : ReactElement =\r\n        ofImport \"default\" \"react-markdown\" [] elems\r\n\r\nmodule ReactJazzicon =\r\n\r\n    type JazziconProps =\r\n        | Diameter of int\r\n        | Seed of int32\r\n\r\n    let inline jazzicon (props :JazziconProps list) (elems :ReactElement list) : ReactElement =\r\n        ofImport \"default\" \"react-jazzicon\" (keyValueList CaseRules.LowerFirst props) elems\r\n\r\nmodule InlineSvg =\r\n\r\n    type InlineSvgProps =\r\n        | Src of string\r\n\r\n    let inline svg (props: InlineSvgProps list) (elems :ReactElement list) : ReactElement =\r\n        ofImport \"default\" \"react-inlinesvg\" (keyValueList CaseRules.LowerFirst props) elems\r\n","import {\n    useEffect as useEffectReact,\n    useLayoutEffect as useLayoutEffectReact,\n    useDebugValue as useDebugValueReact } from 'react'\n\nexport const useEffect = getDisposable => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useEffectWithDeps = (getDisposable, deps) => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useLayoutEffect = getDisposable => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","namespace Feliz\n\nopen System\nopen System.ComponentModel\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Browser.Types\n\nmodule internal ReactInterop =\n    let useDebugValueWithFormatter<'t>(value: 't, formatter: 't -> string) : unit = import \"useDebugValue\" \"./ReactInterop.js\"\n    let useEffect (effect: obj) : unit =  import \"useEffect\" \"./ReactInterop.js\"\n    let useEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useEffectWithDeps\" \"./ReactInterop.js\"\n    let useLayoutEffect (effect: obj) : unit =  import \"useLayoutEffect\" \"./ReactInterop.js\"\n    let useLayoutEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useLayoutEffectWithDeps\" \"./ReactInterop.js\"\n\n[<EditorBrowsable(EditorBrowsableState.Never);Erase>]\n[<RequireQualifiedAccess>]\nmodule Helpers =\n    let inline optDispose (disposeOption: #IDisposable option) =\n        { new IDisposable with member _.Dispose () = disposeOption |> Option.iter (fun d -> d.Dispose()) }\n\ntype internal Internal() =\n    static let propsWithKey (withKey: ('props -> string) option) props =\n        match withKey with\n        | Some f ->\n            props?key <- f props\n            props\n        | None -> props\n    static member\n        functionComponent\n        (\n            renderElement: 'props -> ReactElement,\n            ?name: string,\n            ?withKey: 'props -> string\n        )\n        : 'props -> Fable.React.ReactElement =\n            name |> Option.iter (fun name -> renderElement?displayName <- name)\n            #if FABLE_COMPILER_3\n            Browser.Dom.console.warn(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [<ReactComponent>] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\")\n            #endif\n            fun props ->\n                let props = props |> propsWithKey withKey\n                Interop.reactApi.createElement(renderElement, props)\n    static member\n        memo\n        (\n            renderElement: 'props -> ReactElement,\n            ?name: string,\n            ?areEqual: 'props -> 'props -> bool,\n            ?withKey: 'props -> string\n        )\n        : 'props -> Fable.React.ReactElement =\n            let memoElementType = Interop.reactApi.memo(renderElement, (defaultArg areEqual (unbox null)))\n            name |> Option.iter (fun name -> renderElement?displayName <- name)\n            fun props ->\n                let props = props |> propsWithKey withKey\n                Interop.reactApi.createElement(memoElementType, props)\n\ntype React =\n    /// Creates a disposable instance by providing the implementation of the dispose member.\n    static member createDisposable(dispose: unit -> unit) =\n        { new IDisposable with member _.Dispose() = dispose() }\n\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\n    static member inline fragment xs = Fable.React.Helpers.fragment [] xs\n\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\n    static member inline keyedFragment(key: int, xs) = Fable.React.Helpers.fragment [ !!(\"key\", key) ] xs\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\n    static member inline keyedFragment(key: string, xs) = Fable.React.Helpers.fragment [ !!(\"key\", key) ] xs\n    /// The `React.fragment` component lets you return multiple elements in your `render()` method without creating an additional DOM element.\n    static member inline keyedFragment(key: System.Guid, xs) = Fable.React.Helpers.fragment [ !!(\"key\", string key) ] xs\n    /// Placeholder empty React element to be used when importing external React components with the [<ReactComponent>] attribute.\n    static member inline imported() = Html.none\n    /// The `useState` hook that creates a state variable for React function components from an initialization function.\n    [<Hook>]\n    static member useState<'t>(initializer: unit -> 't) = Interop.reactApi.useState<unit -> 't,'t>(initializer)\n\n    /// Accepts a reducer and returns the current state paired with a dispatch.\n    [<Hook>]\n    static member useReducer(update, initialState) = Interop.reactApi.useReducer update initialState\n\n    /// The `useEffect` hook that creates a disposable effect for React function components.\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\n    /// for the dependencies: `React.useEffect(disposableEffect, [| |])`.\n    [<Hook>]\n    static member useEffect(effect: unit -> #IDisposable) : unit = ReactInterop.useEffect(effect)\n    /// The `useEffect` hook that creates a disposable effect for React function components.\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\n    /// for the dependencies: `React.useEffect(disposableEffect, [| |])`.\n    [<Hook>]\n    static member inline useEffect(effect: unit -> #IDisposable option) = React.useEffect(effect >> Helpers.optDispose)\n    /// The `useEffect` hook that creates a disposable effect for React function components.\n    /// This effect takes an array of *dependencies*.\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\n    [<Hook>]\n    static member useEffect(effect: unit -> #IDisposable, dependencies: obj []) : unit = ReactInterop.useEffectWithDeps effect dependencies\n    /// The `useEffect` hook that creates a disposable effect for React function components.\n    /// This effect takes an array of *dependencies*.\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\n    [<Hook>]\n    static member inline useEffect(effect: unit -> #IDisposable option, dependencies: obj []) = React.useEffect(effect >> Helpers.optDispose, dependencies)\n\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components.\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\n    /// for the dependencies: `React.useLayoutEffect(disposableEffect, [| |])`.\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    [<Hook>]\n    static member useLayoutEffect(effect: unit -> #IDisposable) : unit = ReactInterop.useLayoutEffect(effect)\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components.\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\n    /// for the dependencies: `React.useLayoutEffect(disposableEffect, [| |])`.\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    [<Hook>]\n    static member inline useLayoutEffect(effect: unit -> #IDisposable option) = React.useLayoutEffect(effect >> Helpers.optDispose)\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components.\n    /// This effect takes an array of *dependencies*.\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\n    /// you have to explicitly provide an empty array for the dependencies: `React.useLayoutEffect(effect, [| |])`.\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    [<Hook>]\n    static member useLayoutEffect(effect: unit -> #IDisposable, dependencies: obj []) : unit = ReactInterop.useLayoutEffectWithDeps effect dependencies\n    /// The `useLayoutEffect` hook that creates a disposable effect for React function components.\n    /// This effect takes an array of *dependencies*.\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\n    /// you have to explicitly provide an empty array for the dependencies: `React.useLayoutEffect(effect, [| |])`.\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    [<Hook>]\n    static member inline useLayoutEffect(effect: unit -> #IDisposable option, dependencies: obj []) =\n        React.useLayoutEffect(effect >> Helpers.optDispose, dependencies)\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    /// This effect is executed on every (re)render\n    [<Hook>]\n    static member useLayoutEffect(effect: unit -> unit) =\n        ReactInterop.useLayoutEffect\n            (fun _ ->\n                effect()\n                React.createDisposable(ignore))\n\n    /// The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint.\n    [<Hook>]\n    static member useLayoutEffect(effect: unit -> unit, dependencies: obj []) =\n        ReactInterop.useLayoutEffectWithDeps\n            (fun _ ->\n                effect()\n                React.createDisposable(ignore))\n            dependencies\n\n    [<Hook>]\n    static member inline useLayoutEffectOnce(effect: unit -> unit) =\n         React.useLayoutEffect(effect, [| |])\n\n    [<Hook>]\n    static member inline useLayoutEffectOnce(effect: unit -> #IDisposable) =\n        React.useLayoutEffect(effect, [| |])\n\n    [<Hook>]\n    static member inline useLayoutEffectOnce(effect: unit -> #IDisposable option) =\n        React.useLayoutEffect(effect, [| |])\n\n    /// React hook to define and use an effect only once when a function component renders for the first time.\n    /// This is an alias for `React.useEffect(effect, [| |])` which explicitly provides an empty array for the dependencies of the effect which means the effect will only run once.\n    [<Hook>]\n    static member useEffectOnce(effect: unit -> unit) =\n        React.useEffect(effect, [| |])\n\n    /// React hook to define and use a disposable effect only once when a function component renders for the first time.\n    /// This is an alias for `React.useEffect(effect, [| |])` which explicitly provides an empty array for the dependencies of the effect which means the effect will only run once.\n    [<Hook>]\n    static member useEffectOnce(effect: unit -> #IDisposable) =\n        React.useEffect(effect, [| |])\n    /// React hook to define and use a disposable effect only once when a function component renders for the first time.\n    /// This is an alias for `React.useEffect(effect, [| |])` which explicitly provide an empty array for the dependencies of the effect which means the effect will only run once.\n    [<Hook>]\n    static member useEffectOnce(effect: unit -> #IDisposable option) =\n        React.useEffect(effect >> Helpers.optDispose, [| |])\n\n    /// The `useEffect` hook that creates an effect for React function components.\n    /// This effect is executed *every time* the function component re-renders.\n    ///\n    /// To make the effect run only once, write: `React.useEffect(effect, [| |])` which explicitly states\n    /// that this effect has no dependencies and should only run once on initial render.\n    [<Hook>]\n    static member useEffect(effect: unit -> unit) : unit =\n        ReactInterop.useEffect\n            (fun _ ->\n                effect()\n                React.createDisposable(ignore))\n\n    /// The `useEffect` hook that creates an effect for React function components. This effect takes an array of *dependencies*.\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\n    [<Hook>]\n    static member useEffect(effect: unit -> unit, dependencies: obj []) : unit =\n        ReactInterop.useEffectWithDeps\n            (fun _ ->\n                effect()\n                React.createDisposable(ignore))\n            dependencies\n\n    /// Can be used to display a label for custom hooks in React DevTools.\n    [<Hook>]\n    static member useDebugValue(value: string) =\n        ReactInterop.useDebugValueWithFormatter(value, id)\n\n    /// Can be used to display a label for custom hooks in React DevTools.\n    [<Hook>]\n    static member useDebugValue(value: 't, formatter: 't -> string) =\n        ReactInterop.useDebugValueWithFormatter(value, formatter)\n\n    /// <summary>\n    /// The `useCallback` hook. Returns a memoized callback. Pass an inline callback and an array of dependencies.\n    /// `useCallback` will return a memoized version of the callback that only changes if one of the dependencies has changed.\n    /// </summary>\n    /// <param name='callbackFunction'>A callback function to be memoized.</param>\n    /// <param name='dependencies'>An array of dependencies upon which the callback function depends.\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\n    [<Hook>]\n    static member useCallback(callbackFunction: 'a -> 'b, ?dependencies: obj array) =\n        Interop.reactApi.useCallback callbackFunction (defaultArg dependencies [||])\n\n    /// Returns a mutable ref object whose .current property is initialized to the passed argument (initialValue). The returned object will persist for the full lifetime of the component.\n    ///\n    /// Essentially, useRef is like a container that can hold a mutable value in its .current property.\n    [<Hook>]\n    static member useRef(initialValue) = Interop.reactApi.useRef(initialValue)\n\n    /// A specialized version of React.useRef() that creates a reference to an input element.\n    ///\n    /// Useful for controlling the internal properties and methods of that element, for example to enable focus().\n    [<Hook>]\n    static member useInputRef() : IRefValue<HTMLInputElement option> = React.useRef(None)\n\n    /// A specialized version of React.useRef() that creates a reference to a button element.\n    [<Hook>]\n    static member useButtonRef() : IRefValue<HTMLButtonElement option> = React.useRef(None)\n\n    /// A specialized version of React.useRef() that creates a reference to a generic HTML element.\n    ///\n    /// Useful for controlling the internal properties and methods of that element, for integration with third-party libraries that require a Html element.\n    [<Hook>]\n    static member useElementRef() : IRefValue<HTMLElement option> = React.useRef(None)\n\n    /// <summary>\n    /// The `useMemo` hook. Returns a memoized value. Pass a \"create\" function and an array of dependencies.\n    /// `useMemo` will only recompute the memoized value when one of the dependencies has changed.\n    /// </summary>\n    /// <param name='createFunction'>A create function returning a value to be memoized.</param>\n    /// <param name='dependencies'>An array of dependencies upon which the create function depends.\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\n    [<Hook>]\n    static member useMemo(createFunction: unit -> 'a, ?dependencies: obj array) =\n        Interop.reactApi.useMemo createFunction (defaultArg dependencies [||])\n\n    //\n    // React.functionComponent\n    //\n\n    /// <summary>\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='render'>A render function that returns an element.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member functionComponent(render: 'props -> ReactElement, ?withKey: 'props -> string) =\n        Internal.functionComponent(render, ?withKey=withKey)\n\n    /// <summary>\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='render'>A render function that returns an element.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member functionComponent(name: string, render: 'props -> ReactElement, ?withKey: 'props -> string) =\n        Internal.functionComponent(render, name, ?withKey=withKey)\n\n    /// <summary>\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='render'>A render function that returns a list of elements.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member functionComponent(render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string) =\n        Internal.functionComponent(render >> React.fragment, ?withKey=withKey)\n\n    /// <summary>\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='render'>A render function that returns a list of elements.</param>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member functionComponent(name: string, render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string) =\n        Internal.functionComponent(render >> React.fragment, name, ?withKey=withKey)\n\n    //\n    // React.memo\n    //\n\n    /// <summary>\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='render'>A render function or a React.functionComponent.</param>\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member memo(render: 'props -> ReactElement, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\n        Internal.memo(render, ?areEqual=areEqual, ?withKey=withKey)\n\n    /// <summary>\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='render'>A render function or a React.functionComponent.</param>\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    static member memo(name: string, render: 'props -> ReactElement, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\n        Internal.memo(render, name, ?areEqual=areEqual, ?withKey=withKey)\n\n    /// <summary>\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='render'>A render function that returns a list of elements.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\n    static member memo(render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\n        Internal.memo(render >> React.fragment, ?areEqual=areEqual, ?withKey=withKey)\n\n    /// <summary>\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\n    /// </summary>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='render'>A render function that returns a list of elements.</param>\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\n    static member memo(name: string, render: 'props -> #seq<ReactElement>, ?withKey: 'props -> string, ?areEqual: 'props -> 'props -> bool) =\n        Internal.memo(render >> React.fragment, name, ?areEqual=areEqual, ?withKey=withKey)\n\n    //\n    // React.useContext\n    //\n\n    /// <summary>\n    /// Creates a Context object. When React renders a component that subscribes to this Context object\n    /// it will read the current context value from the closest matching Provider above it in the tree.\n    /// </summary>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='defaultValue'>A default value that is only used when a component does not have a matching Provider above it in the tree.</param>\n    static member createContext<'a>(?name: string, ?defaultValue: 'a) =\n        let contextObject = Interop.reactApi.createContext (defaultArg defaultValue Fable.Core.JS.undefined<'a>)\n        name |> Option.iter (fun name -> contextObject?displayName <- name)\n        contextObject\n\n    /// <summary>\n    /// A Provider component that allows consuming components to subscribe to context changes.\n    /// </summary>\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\n    /// <param name='child'>A child element.</param>\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, child: ReactElement) : ReactElement =\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], [child])\n    /// <summary>\n    /// A Provider component that allows consuming components to subscribe to context changes.\n    /// </summary>\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\n    /// <param name='children'>A sequence of child elements.</param>\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, children: #seq<ReactElement>) : ReactElement =\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], children)\n\n    /// <summary>\n    /// A Consumer component that subscribes to context changes.\n    /// </summary>\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\n    /// <param name='render'>A render function that returns an element.</param>\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> ReactElement) : ReactElement =\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!render])\n    /// <summary>\n    /// A Consumer component that subscribes to context changes.\n    /// </summary>\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\n    /// <param name='render'>A render function that returns a sequence of elements.</param>\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> #seq<ReactElement>) : ReactElement =\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!(render >> React.fragment)])\n\n    /// <summary>\n    /// The `useContext` hook. Accepts a context object (the value returned from React.createContext) and returns the current context value for that context.\n    /// The current context value is determined by the value prop of the nearest Provider component above the calling component in the tree.\n    /// </summary>\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\n    [<Hook>]\n    static member useContext(contextObject: Fable.React.IContext<'a>) = Interop.reactApi.useContext contextObject\n\n    /// <summary>\n    /// Creates a callback that keeps the same reference during the entire lifecycle of the component while having access to\n    /// the current value of the dependencies on every call.\n    ///\n    /// This hook should only be used for (like a dispatch) functions that are not used to provide information during render.\n    ///\n    /// This is not a complete replacement for the `useCallback` hook. It returns a callback that does not need explicit\n    /// dependency declarations and never causes a re-render.\n    /// </summary>\n    /// <param name='callback'>The function call.</param>\n    [<Hook>]\n    static member useCallbackRef(callback: ('a -> 'b)) =\n        let lastRenderCallbackRef = React.useRef(callback)\n\n        let callbackRef =\n            React.useCallback((fun (arg: 'a) ->\n                lastRenderCallbackRef.current(arg)\n            ), [||])\n\n        React.useLayoutEffect(fun () ->\n            // render is commited - it's safe to update the callback\n            lastRenderCallbackRef.current <- callback\n        )\n\n        callbackRef\n\n    /// <summary>\n    /// Just like React.useState except that the updater function uses the previous state of the state variable as input and allows you to compute the next value using it.\n    /// This is useful in cases where defining helpers functions inside the definition of a React function component would actually cache the initial value (because they become closures) during first render as opposed to using the current value after multiple render cycles.\n    ///\n    /// Use this instead of React.useState when your state variable is a list, an array, a dictionary, a map or other complex structures.\n    /// </summary>\n    static member useStateWithUpdater (initial: 't) : ('t * (('t -> 't) -> unit)) = import \"useState\" \"react\"\n\n    /// <summary>\n    /// Forwards a given ref, allowing you to pass it further down to a child.\n    /// </summary>\n    /// <param name='render'>A render function that returns an element.</param>\n    static member forwardRef(render: ('props * IRefValue<'t> -> ReactElement)) : ('props * IRefValue<'t> -> ReactElement) =\n        let forwardRefType = Interop.reactApi.forwardRef(Func<'props,IRefValue<'t>,ReactElement> (fun props ref -> render(props,ref)))\n        fun (props, ref) ->\n            let propsObj = props |> JsInterop.toPlainJsObj\n            propsObj?ref <- ref\n            Interop.reactApi.createElement(forwardRefType, propsObj)\n\n    /// <summary>\n    /// Forwards a given ref, allowing you to pass it further down to a child.\n    /// </summary>\n    /// <param name='name'>The component name to display in the React dev tools.</param>\n    /// <param name='render'>A render function that returns an element.</param>\n    static member forwardRef(name: string, render: ('props * IRefValue<'t> -> ReactElement)) : ('props * IRefValue<'t> -> ReactElement) =\n        let forwardRefType = Interop.reactApi.forwardRef(Func<'props,IRefValue<'t>,ReactElement> (fun props ref -> render(props,ref)))\n        render?displayName <- name\n        fun (props, ref) ->\n            let propsObj = props |> JsInterop.toPlainJsObj\n            propsObj?ref <- ref\n            Interop.reactApi.createElement(forwardRefType, propsObj)\n\n    /// <summary>\n    /// Highlights potential problems in an application by enabling additional checks\n    /// and warnings for descendants. As well as double rendering function components.\n    ///\n    /// This *does not do anything* in production mode. You do not need to hide it\n    /// with compiler directives.\n    /// </summary>\n    /// <param name='children'>The elements that will be rendered with additional\n    /// checks and warnings.</param>\n    static member strictMode(children: ReactElement list) =\n        Interop.reactApi.createElement(Interop.reactApi.StrictMode, None, children)\n\n    /// <summary>\n    /// Lets you define a component that is loaded dynamically. Which helps with code splitting.\n    /// </summary>\n    /// <param name='dynamicImport'>\n    ///  The dynamicImport of the component.\n    ///\n    ///  Such as `let asyncComponent : JS.Promise[unit -> ReactElement] = JsInterop.importDynamic \"./CodeSplitting.fs\"`.\n    ///\n    ///  Where you would then pass in `asyncComponent`.\n    /// </param>\n    /// <param name=\"props\">The props to be passed to the component.</param>\n    static member lazy'<'t,'props>(dynamicImport: JS.Promise<'t>, props: 'props) =\n        Interop.reactApi.createElement(Interop.reactApi.lazy'(fun () -> dynamicImport),props)\n    /// <summary>\n    /// Lets you define a component that is loaded dynamically. Which helps with code\n    /// splitting.\n    /// </summary>\n    /// <param name='dynamicImport'>\n    /// The dynamicImport of the component.\n    ///\n    /// Such as `let asyncComponent : JS.Promise[unit -> ReactElement] = JsInterop.importDynamic \"./CodeSplitting.fs\"`.\n    ///\n    /// Where you would then pass in `fun () -> asyncComponent`.\n    /// </param>\n    /// <param name=\"props\">The props to be passed to the component.</param>\n    static member lazy'<'t,'props>(dynamicImport: unit -> JS.Promise<'t>, props: 'props) =\n        Interop.reactApi.createElement(Interop.reactApi.lazy'(dynamicImport),props)\n\n    /// <summary>\n    /// Lets you specify a loading indicator whenever a child element is not yet ready\n    /// to render.\n    ///\n    /// Currently this is only usable with `React.lazy'`.\n    /// </summary>\n    /// <param name='children'>The elements that will be rendered within the suspense block.</param>\n    static member suspense(children: ReactElement list) =\n        Interop.reactApi.createElement(Interop.reactApi.Suspense, {| fallback = Html.none |} |> JsInterop.toPlainJsObj, children)\n    /// <summary>\n    /// Lets you specify a loading indicator whenever a child element is not yet ready\n    /// to render.\n    ///\n    /// Currently this is only usable with `React.lazy'`.\n    /// </summary>\n    /// <param name='children'>The elements that will be rendered within the suspense block.</param>\n    /// <param name='fallback'>The element that will be rendered while the children are loading.</param>\n    static member suspense(children: ReactElement list, fallback: ReactElement) =\n        Interop.reactApi.createElement(Interop.reactApi.Suspense, {| fallback = fallback |} |> JsInterop.toPlainJsObj, children)\n\n    /// <summary>\n    /// Allows you to override the behavior of a given ref.\n    ///\n    /// </summary>\n    /// <param name='ref'>The ref you want to override.</param>\n    /// <param name='createHandle'>A function that returns a new ref with changed behavior.</param>\n    [<Hook>]\n    static member useImperativeHandle(ref: IRefValue<'t>, createHandle: unit -> 't) =\n        Interop.reactApi.useImperativeHandleNoDeps ref createHandle\n\n    /// <summary>\n    /// Lets you specify a loading indicator whenever a child element is not yet ready\n    /// to render.\n    ///\n    /// Currently this is only usable with `React.lazy'`.\n    /// </summary>\n    /// <param name='ref'>The ref you want to override.</param>\n    /// <param name='createHandle'>A function that returns a new ref with changed behavior.</param>\n    /// <param name='dependencies'>An array of dependencies upon which the imperative handle function depends.</param>\n    [<Hook>]\n    static member useImperativeHandle(ref: IRefValue<'t>, createHandle: unit -> 't, dependencies: obj []) =\n        Interop.reactApi.useImperativeHandle ref createHandle dependencies\n\n    /// <summary>\n    /// Creates a CancellationToken that is cancelled when a component is unmounted.\n    /// </summary>\n    [<Hook>]\n    static member inline useCancellationToken () =\n        let cts = React.useRef(new System.Threading.CancellationTokenSource())\n        let token = React.useRef(cts.current.Token)\n\n        React.useEffectOnce(fun () ->\n            React.createDisposable(fun () ->\n                cts.current.Cancel()\n                cts.current.Dispose()\n            )\n        )\n\n        token\n\n[<AutoOpen>]\nmodule ReactOverloadMagic =\n    type React with\n        /// Creates a disposable instance by merging multiple IDisposables.\n        static member inline createDisposable([<ParamArray>] disposables: #IDisposable []) =\n            React.createDisposable(fun () ->\n                disposables\n                |> Array.iter (fun d -> d.Dispose())\n            )\n        /// Creates a disposable instance by merging multiple IDisposable options.\n        static member inline createDisposable([<ParamArray>] disposables: #IDisposable option []) =\n            React.createDisposable(fun () ->\n                disposables\n                |> Array.iter (Option.iter (fun d -> d.Dispose()))\n            )\n        /// Creates a disposable instance by merging multiple IDisposable refs.\n        static member inline createDisposable([<ParamArray>] disposables: IRefValue<#IDisposable> []) =\n            React.createDisposable(fun () ->\n                disposables\n                |> Array.iter (fun d -> d.current.Dispose())\n            )\n\n        /// Creates a disposable instance by merging multiple IDisposable refs.\n        static member inline createDisposable([<ParamArray>] disposables: IRefValue<#IDisposable option> []) =\n            React.createDisposable(fun () ->\n                disposables\n                |> Array.iter (fun d -> d.current |> Option.iter (fun d -> d.Dispose()))\n            )\n\n        /// The `useState` hook that creates a state variable for React function components.\n        [<Hook>]\n        static member useState<'t>(initial: 't) = Interop.reactApi.useState<'t,'t>(initial)\n\n\n        [<Hook>]\n        static member useStateWithUpdater<'t>(initializer: unit -> 't): ('t * (('t -> 't) -> unit)) = import \"useState\" \"react\"\n","namespace Fable.React\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser\r\nopen Props\r\n\r\n#if !FABLE_COMPILER\r\ntype HTMLNode =\r\n    | Text of string\r\n    | RawText of string\r\n    | Node of string * IProp seq * ReactElement seq\r\n    | List of ReactElement seq\r\n    | Empty\r\nwith interface ReactElement\r\n\r\ntype ServerElementType =\r\n    | Tag\r\n    | Fragment\r\n    | Component\r\n\r\ntype ReactElementTypeWrapper<'P> =\r\n    | Comp of obj\r\n    | Fn of ('P -> ReactElement)\r\n    | HtmlTag of string\r\n    interface ReactElementType<'P>\r\n\r\n[<RequireQualifiedAccess>]\r\nmodule ServerRendering =\r\n    let [<Literal>] private ChildrenName = \"children\"\r\n\r\n    let private createServerElementPrivate(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\r\n        match elementType with\r\n        | ServerElementType.Tag ->\r\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\r\n        | ServerElementType.Fragment ->\r\n            HTMLNode.List children :> ReactElement\r\n        | ServerElementType.Component ->\r\n            let tag = tag :?> System.Type\r\n            let comp = System.Activator.CreateInstance(tag, props)\r\n            let childrenProp = tag.GetProperty(ChildrenName)\r\n            childrenProp.SetValue(comp, children |> Seq.toArray)\r\n            let render = tag.GetMethod(\"render\")\r\n            render.Invoke(comp, null) :?> ReactElement\r\n\r\n    let private createServerElementByFnPrivate(f, props, children) =\r\n        let propsType = props.GetType()\r\n        let props =\r\n            if propsType.GetProperty (ChildrenName) |> isNull then\r\n                props\r\n            else\r\n                let values = ResizeArray<obj> ()\r\n                let properties = propsType.GetProperties()\r\n                for p in properties do\r\n                    if p.Name = ChildrenName then\r\n                        values.Add (children |> Seq.toArray)\r\n                    else\r\n                        values.Add (FSharp.Reflection.FSharpValue.GetRecordField(props, p))\r\n                FSharp.Reflection.FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\r\n        f props\r\n\r\n    // In most cases these functions are inlined (mainly for Fable optimizations)\r\n    // so we create a proxy to avoid inlining big functions every time\r\n\r\n    let createServerElement(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\r\n        createServerElementPrivate(tag, props, children, elementType)\r\n\r\n    let createServerElementByFn(f, props, children) =\r\n        createServerElementByFnPrivate(f, props, children)\r\n#endif\r\n\r\n[<RequireQualifiedAccess>]\r\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\nmodule ReactElementType =\r\n    let inline ofComponent<'comp, 'props, 'state when 'comp :> Component<'props, 'state>> : ReactElementType<'props> =\r\n#if FABLE_REPL_LIB\r\n        failwith \"Cannot create React components from types in Fable REPL\"\r\n#else\r\n#if FABLE_COMPILER\r\n        jsConstructor<'comp> |> unbox\r\n#else\r\n        Comp (typeof<'comp>) :> _\r\n#endif\r\n#endif\r\n\r\n    let inline ofFunction<'props> (f: 'props -> ReactElement): ReactElementType<'props> =\r\n#if FABLE_COMPILER\r\n        f |> unbox\r\n#else\r\n        Fn f :> _\r\n#endif\r\n\r\n    let inline ofHtmlElement<'props> (name: string): ReactElementType<'props> =\r\n#if FABLE_COMPILER\r\n        unbox name\r\n#else\r\n        HtmlTag name :> ReactElementType<'props>\r\n#endif\r\n\r\n    /// Create a ReactElement to be rendered from an element type, props and children\r\n    let inline create<'props> (comp: ReactElementType<'props>) (props: 'props) (children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(comp, props, children)\r\n#else\r\n        match (comp :?> ReactElementTypeWrapper<'props>) with\r\n        | Comp obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Component)\r\n        | Fn f -> ServerRendering.createServerElementByFn(f, props, children)\r\n        | HtmlTag obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Tag)\r\n#endif\r\n\r\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\r\n    /// If your function component renders the same result given the same props, you can wrap it in a call to React.memo.\r\n    /// React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\r\n    let memo<'props> (render: 'props -> ReactElement) =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.memo(render, unbox null)\r\n#else\r\n        ofFunction render\r\n#endif\r\n\r\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\r\n    /// If your function renders the same result given the \"same\" props (according to `areEqual`), you can wrap it in a call to React.memo.\r\n    /// React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\r\n    /// This version allow you to control the comparison used instead of the default shallow one by provide a custom comparison function.\r\n    let memoWith<'props> (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.memo(render, areEqual)\r\n#else\r\n        ofFunction render\r\n#endif\r\n\r\n\r\n[<AutoOpen>]\r\nmodule Helpers =\r\n    [<System.Obsolete(\"Use ReactBindings.React.createElement\")>]\r\n    let inline createElement(comp: obj, props: obj, [<ParamList>] children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(comp, props, children)\r\n#else\r\n        HTMLNode.Empty :> _\r\n#endif\r\n\r\n    /// Instantiate a component from a type inheriting React.Component\r\n    /// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\r\n    let inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\r\n        ReactElementType.create ReactElementType.ofComponent<'T,_,_> props children\r\n\r\n    [<System.Obsolete(\"Use ofType\")>]\r\n    let inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\r\n        ofType<'T, 'P, 'S> props children\r\n\r\n    let inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\r\n        ReactElementType.create (ReactElementType.ofFunction f) props children\r\n\r\n    /// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\r\n    /// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\r\n    let inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\r\n#if FABLE_REPL_LIB\r\n        failwith \"Cannot import React components in Fable REPL\"\r\n#else\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(import importMember importPath, props, children)\r\n#else\r\n        failwith \"Cannot import React components in .NET\"\r\n#endif\r\n#endif\r\n\r\n#if FABLE_COMPILER\r\n    [<Emit(\"typeof $0 === 'function'\")>]\r\n    let private isFunction (x: obj): bool = jsNative\r\n\r\n    [<Emit(\"typeof $0 === 'object' && !$0[Symbol.iterator]\")>]\r\n    let private isNonEnumerableObject (x: obj): bool = jsNative\r\n#endif\r\n\r\n    /// Normal structural F# comparison, but ignores top-level functions (e.g. Elmish dispatch).\r\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\r\n    let equalsButFunctions (x: 'a) (y: 'a) =\r\n#if FABLE_COMPILER\r\n        if obj.ReferenceEquals(x, y) then\r\n            true\r\n        elif isNonEnumerableObject x && not(isNull(box y)) then\r\n            let keys = JS.Constructors.Object.keys x\r\n            let length = keys.Count\r\n            let mutable i = 0\r\n            let mutable result = true\r\n            while i < length && result do\r\n                let key = keys.[i]\r\n                i <- i + 1\r\n                let xValue = x?(key)\r\n                result <- isFunction xValue || xValue = y?(key)\r\n            result\r\n        else\r\n            (box x) = (box y)\r\n#else\r\n        // Server rendering, won't be actually used\r\n        // Avoid `x = y` because it will force 'a to implement structural equality\r\n        false\r\n#endif\r\n\r\n    /// Comparison similar to default React.memo, but ignores functions (e.g. Elmish dispatch).\r\n    /// Performs a memberwise comparison where value types and strings are compared by value,\r\n    /// and other types by reference.\r\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\r\n    let memoEqualsButFunctions (x: 'a) (y: 'a) =\r\n#if FABLE_COMPILER\r\n        if obj.ReferenceEquals(x, y) then\r\n            true\r\n        elif isNonEnumerableObject x && not(isNull(box y)) then\r\n            let keys = JS.Constructors.Object.keys x\r\n            let length = keys.Count\r\n            let mutable i = 0\r\n            let mutable result = true\r\n            while i < length && result do\r\n                let key = keys.[i]\r\n                i <- i + 1\r\n                let xValue = x?(key)\r\n                result <- isFunction xValue || obj.ReferenceEquals(xValue, y?(key))\r\n            result\r\n        else\r\n            false\r\n#else\r\n        // Server rendering, won't be actually used\r\n        // Avoid `x = y` because it will force 'a to implement structural equality\r\n        false\r\n#endif\r\n\r\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\r\n    let memoBuilder<'props> (name: string) (render: 'props -> ReactElement) : 'props -> ReactElement =\r\n#if FABLE_COMPILER\r\n        render?displayName <- name\r\n#endif\r\n        let memoType = ReactElementType.memo render\r\n        fun props ->\r\n            ReactElementType.create memoType props []\r\n\r\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\r\n    let memoBuilderWith<'props> (name: string) (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) : 'props -> ReactElement =\r\n#if FABLE_COMPILER\r\n        render?displayName <- name\r\n#endif\r\n        let memoType = ReactElementType.memoWith areEqual render\r\n        fun props ->\r\n            ReactElementType.create memoType props []\r\n\r\n    [<System.Obsolete(\"Use ReactElementType.create\")>]\r\n    let inline from<'P> (com: ReactElementType<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\r\n        ReactElementType.create com props children\r\n\r\n    /// Alias of `ofString`\r\n    let inline str (s: string): ReactElement =\r\n#if FABLE_COMPILER\r\n        unbox s\r\n#else\r\n        HTMLNode.Text s :> ReactElement\r\n#endif\r\n\r\n    /// Cast a string to a React element (erased in runtime)\r\n    let inline ofString (s: string): ReactElement =\r\n        str s\r\n        \r\n    /// The equivalent of `sprintf (...) |> str`\r\n    let inline strf format =\r\n        Printf.kprintf str format\r\n\r\n    /// Cast an option value to a React element (erased in runtime)\r\n    let inline ofOption (o: ReactElement option): ReactElement =\r\n        match o with Some o -> o | None -> null // Option.toObj(o)\r\n\r\n    [<System.Obsolete(\"Use ofOption\")>]\r\n    let opt (o: ReactElement option): ReactElement =\r\n        ofOption o\r\n\r\n    /// Cast an int to a React element (erased in runtime)\r\n    let inline ofInt (i: int): ReactElement =\r\n#if FABLE_COMPILER\r\n        unbox i\r\n#else\r\n        HTMLNode.RawText (string i) :> ReactElement\r\n#endif\r\n\r\n    /// Cast a float to a React element (erased in runtime)\r\n    let inline ofFloat (f: float): ReactElement =\r\n#if FABLE_COMPILER\r\n        unbox f\r\n#else\r\n        HTMLNode.RawText (string f) :> ReactElement\r\n#endif\r\n\r\n    /// Returns a list **from .render() method**\r\n    let inline ofList (els: ReactElement list): ReactElement =\r\n#if FABLE_COMPILER\r\n        unbox(List.toArray els)\r\n#else\r\n        HTMLNode.List els :> ReactElement\r\n#endif\r\n\r\n    /// Returns an array **from .render() method**\r\n    let inline ofArray (els: ReactElement array): ReactElement =\r\n#if FABLE_COMPILER\r\n        unbox els\r\n#else\r\n        HTMLNode.List els :> ReactElement\r\n#endif\r\n\r\n    /// A ReactElement when you don't want to render anything (null in javascript)\r\n    let nothing: ReactElement =\r\n#if FABLE_COMPILER\r\n        null\r\n#else\r\n        HTMLNode.Empty :> ReactElement\r\n#endif\r\n\r\n    /// Instantiate a DOM React element\r\n    let inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\r\n#else\r\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\r\n#endif\r\n\r\n    /// Instantiate a DOM React element (void)\r\n    let inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, [])\r\n#else\r\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\r\n#endif\r\n\r\n    /// Instantiate an SVG React element\r\n    let inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\r\n#else\r\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\r\n#endif\r\n\r\n    /// Instantiate a React fragment\r\n    let inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(ReactBindings.React.Fragment, keyValueList CaseRules.LowerFirst props, children)\r\n#else\r\n        ServerRendering.createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\r\n#endif\r\n\r\n    /// Accepts a context value to be passed to consuming components that are descendants of this Provider.\r\n    /// One Provider can be connected to many consumers. Providers can be nested to override values deeper within the tree.\r\n    /// Important: In SSR, this is ignored, and the DEFAULT value is consumed!\r\n    /// More info at https://reactjs.org/docs/context.html#contextprovider\r\n    let inline contextProvider (ctx: IContext<'T>) (value: 'T) (children: ReactElement seq): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(ctx?Provider, createObj [\"value\" ==> value], children)\r\n#else\r\n        fragment [] children\r\n#endif\r\n\r\n    /// Consumes a context value, either from the nearest parent in the tree, or from the default value.\r\n    /// Important: in SSR, this will always consume the context DEFAULT value!\r\n    /// More info at https://reactjs.org/docs/context.html#contextconsumer\r\n    let inline contextConsumer (ctx: IContext<'T>) (children: 'T -> ReactElement): ReactElement =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createElement(ctx?Consumer, null, [!!children])\r\n#else\r\n        let ctx = ctx :?> ISSRContext<_>\r\n        fragment [] [children(ctx.DefaultValue)]\r\n#endif\r\n\r\n    /// Creates a Context object. When React renders a component that subscribes to this Context\r\n    /// object it will read the current context value from the closest matching Provider above it\r\n    /// in the tree. More info at https://reactjs.org/docs/context.html#reactcreatecontext\r\n    let inline createContext (defaultValue: 'T): IContext<'T> =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createContext(defaultValue)\r\n#else\r\n        upcast { new ISSRContext<_> with member __.DefaultValue = defaultValue }\r\n#endif\r\n\r\n    /// To be used in constructors of class components\r\n    /// (for function components use `useRef` hook)\r\n    let inline createRef (initialValue: 'T): IRefValue<'T> =\r\n#if FABLE_COMPILER\r\n        ReactBindings.React.createRef(initialValue)\r\n#else\r\n        { new IRefValue<_> with\r\n            member __.current with get() = initialValue and set _ = () }\r\n#endif\r\n\r\n    // Class list helpers\r\n    let classBaseList baseClass classes =\r\n        classes\r\n        |> Seq.choose (fun (name, condition) ->\r\n            if condition && not(System.String.IsNullOrEmpty(name)) then Some name\r\n            else None)\r\n        |> Seq.fold (fun state name -> state + \" \" + name) baseClass\r\n        |> ClassName\r\n\r\n    let classList classes = classBaseList \"\" classes\r\n\r\n    /// Finds a DOM element by its ID and mounts the React element there\r\n    /// Important: Not available in SSR\r\n    let inline mountById (domElId: string) (reactEl: ReactElement): unit =\r\n#if FABLE_COMPILER\r\n        ReactDom.render(reactEl, document.getElementById(domElId))\r\n#else\r\n        failwith \"mountById is not available for SSR\"\r\n#endif\r\n    /// Finds the first DOM element matching a CSS selector and mounts the React element there\r\n    /// Important: Not available in SSR\r\n    let inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\r\n#if FABLE_COMPILER\r\n        ReactDom.render(reactEl, document.querySelector(domElSelector))\r\n#else\r\n        failwith \"mountBySelector is not available for SSR\"\r\n#endif\r\n","namespace Fable.SimpleHttp\n\ntype HttpMethod =\n    | GET\n    | POST\n    | PUT\n    | PATCH\n    | DELETE\n    | HEAD\n    | OPTIONS\n\ntype Header = Header of string * string\n\n[<RequireQualifiedAccess>]\ntype BodyContent =\n    | Empty\n    | Text of string\n    | Binary of Browser.Types.Blob\n    | Form of Browser.Types.FormData\n\n[<RequireQualifiedAccess>]\ntype ResponseTypes =\n    | Text\n    | Blob\n    | ArrayBuffer\n\ntype HttpRequest = {\n    url: string\n    method: HttpMethod\n    headers: Header list\n    withCredentials: bool\n    overridenMimeType: Option<string>\n    overridenResponseType: Option<ResponseTypes>\n    timeout: Option<int>\n    content: BodyContent\n}\n\n[<RequireQualifiedAccess>]\ntype ResponseContent =\n    | Text of string\n    | Blob of Browser.Types.Blob\n    | ArrayBuffer of Fable.Core.JS.ArrayBuffer\n    | Unknown of obj\n\ntype HttpResponse = {\n    statusCode: int\n    responseText: string\n    responseType: string\n    responseUrl: string\n    responseHeaders: Map<string, string>\n    content : ResponseContent\n}\n",null,"module Utils\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Common\r\nopen Browser.Dom\r\n\r\nlet onClickDispatch dispatch msg = OnClick (fun _ -> dispatch msg)\r\n\r\nlet mdiIcon name = i [ClassName <| \"mdi mdi-\" + name] []\r\n\r\nlet mdiIconLrg name = i [ClassName <| \"mdi mdi-24px mdi-\" + name] []\r\n\r\nlet getMimeType format =\r\n    match format with\r\n    | \"mp4\" -> \"video/mp4\"\r\n    | _ -> \"unknown\"\r\n\r\nlet emoji emoji = span [ClassName \"emoji\"] [str emoji]\r\n\r\nlet emojisFromText (text :string) =\r\n    text.Split(' ') |> Array.choose (fun name ->\r\n        Emojis.charByName |> Map.tryFind name |> Option.map (fun c -> span [ClassName <| \"emoji emoji-\" + name] [str c]))\r\n            |> Array.toList\r\n\r\nlet strf string = str (sprintf string)\r\n\r\nlet niceAddress (address :string) =\r\n    address.Substring(0, 6) + \" ... \" + address.Substring(36)\r\n\r\nlet niceTimestamp (timestamp :int64) =\r\n    let date = System.DateTimeOffset.FromUnixTimeSeconds(timestamp).DateTime\r\n    let now = System.DateTime.UtcNow\r\n    let ago = (now - date)\r\n    match ago with\r\n    | _ when ago.TotalMinutes < 1.0 -> sprintf \"%is\" (int ago.TotalSeconds)\r\n    | _ when ago.TotalHours < 1.0 -> sprintf \"%im\" (int ago.TotalMinutes)\r\n    | _ when ago.TotalDays < 1.0 -> sprintf \"%ih\" (int ago.TotalHours)\r\n    | _ when ago.TotalDays < 7.0 -> sprintf \"%id\" (int ago.TotalDays)\r\n    | _ -> sprintf \"%iw\" (int (ago.TotalDays / 7.0))\r\n\r\nlet isNullOrEmpty = System.String.IsNullOrEmpty\r\n\r\nlet jazziconForAddress width (address :string) =\r\n    let seed = System.Int32.Parse(address.Substring(2, 8), System.Globalization.NumberStyles.HexNumber)\r\n    Imports.ReactJazzicon.jazzicon [Imports.ReactJazzicon.Diameter width; Imports.ReactJazzicon.Seed seed] []\r\n\r\nlet bigLoading = div [ClassName \"big-loading\"] [div [ClassName \"lds-dual-ring\"] []]\r\n\r\nlet errorView = div [ClassName \"error-view\"] [str \"Something went wrong, please try again later\"]\r\n\r\nlet getSimpleGradient (hexColors :string[]) = sprintf \"linear-gradient(to right, %s)\" (System.String.Join(\", \", hexColors))\r\n\r\nlet getGradientBackgroundStyle (hexColors :string[]) isDarkMode className =\r\n    let color2 = hexColors.[0] |> ColorUtils.fromHexStr\r\n    let color1 = hexColors |> Array.last |> ColorUtils.fromHexStr\r\n    let (bh, bs, _) = color2 |> ColorUtils.fromRgb\r\n    let backgroundColor = ColorUtils.toRgb (bh, bs * 0.3, if isDarkMode then 0.1 else 0.97)\r\n    let linearGradient direction color1 start1 color2 start2 =\r\n        let (r1, g1, b1, a1) = color1\r\n        let (r2, g2, b2, a2) = color2\r\n        sprintf \"linear-gradient(%s, rgba(%i, %i, %i, %f) %f%%, rgba(%i, %i, %i, %f) %f%%)\"\r\n            direction r1 g1 b1 a1 start1 r2 g2 b2 a2 start2\r\n    let radialGradient (x, y) color1 start1 color2 start2 =\r\n        let (r1, g1, b1, a1) = color1\r\n        let (r2, g2, b2, a2) = color2\r\n        sprintf \"radial-gradient(ellipse at %f%% %f%%, rgba(%i, %i, %i, %f) %f%%, rgba(%i, %i, %i, %f) %f%%)\"\r\n            x y r1 g1 b1 a1 start1 r2 g2 b2 a2 start2\r\n    let (rback, gback, bback) = backgroundColor\r\n    let (r1, g1, b1) = color1\r\n    let (r2, g2, b2) = color2\r\n    let fadeBottom = linearGradient \"to bottom\" (rback, gback, bback, 1.0) 0.0 (255, 255, 255, 0.0) 90.0\r\n    let fadeTop = linearGradient \"to top\" (rback, gback, bback, 1.0) 0.0 (255, 255, 255, 0.0) 90.0\r\n    let bro, tlo =\r\n        if isDarkMode then 0.65, 0.35 else 0.3, 0.35\r\n    let radBotRight = radialGradient (100.0, 75.0) (r1, g1, b1, bro) 0.0 (rback, gback, bback, 0.2) 85.0\r\n    let radTopLeft = radialGradient (0.0, 25.0) (r2, g2, b2, tlo) 0.0 (rback, gback, bback, 0.3) 65.0\r\n    let backgroundColorStr = sprintf \"rgb(%i, %i, %i)\" rback gback bback\r\n    let centerFade = if isDarkMode then \"rgba(22, 22, 22, 0.9)\" else \"rgba(244, 244, 244, 0.9)\"\r\n    style [] [str (sprintf \".%s { background-size: 100vw 100vh; background-color: %s; background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 25%%, %s 40%%, %s 60%%, rgba(0, 0, 0, 0) 75%%), %s, %s, %s, %s; background-blend-mode: normal, normal, normal, normal, normal }\" className backgroundColorStr backgroundColorStr centerFade fadeBottom fadeTop radBotRight radTopLeft)]\r\n\r\nlet getFormatName =\r\n    function\r\n    | \"svg\" -> \"SVG\"\r\n    | \"png\" -> \"PNG\"\r\n    | \"gif\" -> \"GIF\"\r\n    | \"jpg\" -> \"JPEG\"\r\n    | \"webp\" -> \"WebP\"\r\n    | _ -> \"Image\"\r\nlet getStorageName =\r\n    function\r\n    | \"onchain\" -> \"On-chain\"\r\n    | \"ipfs\" -> \"IPFS\"\r\n    | _ -> \"Server\"\r\nlet getVideoFormatName =\r\n    function\r\n    | \"mp4\" -> \"MP4\"\r\n    | _ -> \"Video\"\r\n\r\nlet getMediaText =\r\n    function\r\n    | { display = \"image\"; storage = \"onchain\" } -> \" On-chain Image\"\r\n    | { display = \"image\"; format = _; storage = \"ipfs\" } -> \" Image on IPFS\"\r\n    | { display = \"video\"; format = _; storage = \"ipfs\" } -> \" Video on IPFS\"\r\n    | { display = \"video\" } -> \"Video\"\r\n    | { display = \"image\" } -> \"Image\"\r\n    | _ -> \"\"\r\n\r\nlet getMediaElement display =\r\n    let txt = getMediaText display\r\n    match display with\r\n    | { storage = \"onchain\" } ->\r\n        [span [ClassName \"emoji mode-aware-text\"] [str \"🔗\"]; span [] [str txt]]\r\n    | { storage = \"ipfs\" } ->\r\n        [span [ClassName \"emoji mode-aware-text\"] [str \"🌎\"]; span [] [str txt]]\r\n    | _ -> [span [] [str txt]]\r\n\r\nlet useScrollTo () =\r\n    let ref :IRefValue<Browser.Types.Element option> = Hooks.useRef None\r\n    let shouldScrollTo = Hooks.useState false\r\n    Hooks.useEffect(fun () ->\r\n        match ref.current with\r\n        | Some element when shouldScrollTo.current ->\r\n            element?scrollIntoView()\r\n            shouldScrollTo.update(false)\r\n        | _ -> ())\r\n    ref, fun () -> shouldScrollTo.update(true)\r\n","module Home.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\nopen Common\r\nopen Global\r\nopen System.Globalization\r\nopen Imports\r\nopen Utils\r\n\r\nlet HomePage =\r\n    FunctionComponent.Of ((fun (props : {| dispatch: Msg -> unit |}) ->\r\n        let web3 = useWeb3React()\r\n        div [ClassName \"home\"]\r\n            [img [Src \"/img/tree.svg\"]\r\n             h1 [] [str \"Web3Tree\"]\r\n             match web3.active with\r\n             | false ->\r\n                yield!\r\n                    [p [] [str \"Connect your account to administer your Web3 link bio page\"]\r\n                     button [OnClick (fun _ -> web3.activate(Injected)); ClassName \"button\"] [str \"Connect\"]]\r\n             | true ->\r\n                yield!\r\n                    [jazziconForAddress 48 web3.account.Value\r\n                     p [] [b [] [str (niceAddress web3.account.Value)]]\r\n                     button [OnClick (fun _ -> props.dispatch (ChangePage (View web3.account.Value))); ClassName \"button\"] [str \"View Page\"]\r\n                     button [OnClick (fun _ -> props.dispatch (ChangePage (Edit web3.account.Value))); ClassName \"button\"] [str \"Edit Page\"]]\r\n             ]\r\n   ), \"HomePage\", equalsButFunctions)\r\n\r\nlet connectBtn dispatch = div [] [button [ClassName \"button home-button\"; OnClick <| fun _ -> dispatch (ChangePage (Edit \"0xC1A32Cb082ae11A9b4562A96Ab43ff3C1e174F6D\"))] [str \"Connect Account\"]]\r\n\r\nlet root model common dispatch = HomePage {| dispatch = dispatch |}\r\n","namespace Feliz.UseDeferred\r\n\r\n[<RequireQualifiedAccess>]\r\ntype Deferred<'T> =\r\n    | HasNotStartedYet\r\n    | InProgress\r\n    | Resolved of 'T\r\n    | Failed of exn\r\n\r\n[<RequireQualifiedAccess>]\r\n/// Contains utility functions to work with value of the type Deferred<'T>\r\nmodule Deferred =\r\n    /// Returns whether the `Deferred<'T>` value has been started or not.\r\n    let hasNotStartedYet = function\r\n        | Deferred.HasNotStartedYet -> true\r\n        | _ -> false\r\n\r\n    /// Returns whether the `Deferred<'T>` value has been resolved or not.\r\n    let resolved = function\r\n        | Deferred.Resolved _ -> true\r\n        | _ -> false\r\n\r\n    /// Returns whether the `Deferred<'T>` value is in progress or not.\r\n    let inProgress = function\r\n        | Deferred.InProgress -> true\r\n        | _ -> false\r\n\r\n    /// Transforms the underlying value of the input deferred value when it exists from type to another\r\n    let map (transform: 'T -> 'U) (deferred: Deferred<'T>) : Deferred<'U> =\r\n        match deferred with\r\n        | Deferred.HasNotStartedYet -> Deferred.HasNotStartedYet\r\n        | Deferred.InProgress -> Deferred.InProgress\r\n        | Deferred.Failed error -> Deferred.Failed error\r\n        | Deferred.Resolved value ->\r\n            try Deferred.Resolved (transform value)\r\n            with error -> Deferred.Failed error\r\n\r\n    let iter (perform: 'T -> unit) (deferred: Deferred<'T>) : unit =\r\n        match deferred with\r\n        | Deferred.Resolved value -> perform value\r\n        | _ -> ()\r\n\r\n    /// Verifies that a `Deferred<'T>` value is resolved and the resolved data satisfies a given requirement.\r\n    let exists (predicate: 'T -> bool) = function\r\n        | Deferred.Resolved value -> predicate value\r\n        | _ -> false\r\n\r\n    /// Like `map` but instead of transforming just the value into another type in the `Resolved` case, it will transform the value into potentially a different case of the the `Deferred<'T>` type.\r\n    let bind (transform: 'T -> Deferred<'U>) (deferred: Deferred<'T>) : Deferred<'U> =\r\n        match deferred with\r\n        | Deferred.HasNotStartedYet -> Deferred.HasNotStartedYet\r\n        | Deferred.InProgress -> Deferred.InProgress\r\n        | Deferred.Failed error -> Deferred.Failed error\r\n        | Deferred.Resolved value ->\r\n            try transform value\r\n            with error -> Deferred.Failed error\r\n\r\nopen Feliz\r\n\r\n[<AutoOpen>]\r\nmodule ReactHookExtensions =\r\n    type React with\r\n        [<Hook>]\r\n        static member useDeferred(operation: Async<'T>, dependencies: obj array) =\r\n            let (deferred, setDeferred) = React.useState(Deferred.HasNotStartedYet)\r\n            let token = React.useCancellationToken()\r\n            let executeOperation = async {\r\n                try\r\n                    do setDeferred(Deferred<'T>.InProgress)\r\n                    let! output = operation\r\n                    do setDeferred(Deferred<'T>.Resolved output)\r\n                with error ->\r\n                    #if DEBUG\r\n                    Browser.Dom.console.log(error)\r\n                    #endif\r\n                    do setDeferred(Deferred<'T>.Failed error)\r\n            }\r\n\r\n            React.useEffect((fun () -> Async.StartImmediate(executeOperation, token.current)), dependencies)\r\n\r\n            deferred\r\n\r\n        [<Hook>]\r\n        static member useDeferredCallback(operation: 'TIn -> Async<'TOut>, setDeferred: Deferred<'TOut> -> unit) =\r\n            let cancellationToken = React.useRef(new System.Threading.CancellationTokenSource())\r\n            let executeOperation arg = async {\r\n                try\r\n                    do setDeferred(Deferred<'TOut>.InProgress)\r\n                    let! output = operation arg\r\n                    do setDeferred(Deferred<'TOut>.Resolved output)\r\n                with error ->\r\n                    #if DEBUG\r\n                    Browser.Dom.console.log(error)\r\n                    #endif\r\n                    do setDeferred(Deferred<'TOut>.Failed error)\r\n            }\r\n\r\n            React.useEffectOnce(fun () ->\r\n                React.createDisposable(fun () -> cancellationToken.current.Cancel())\r\n            )\r\n\r\n            let start = React.useCallbackRef(fun arg ->\r\n                if not cancellationToken.current.IsCancellationRequested\r\n                then Async.StartImmediate(executeOperation arg, cancellationToken.current.Token)\r\n            )\r\n\r\n            start\r\n\r\n        [<Hook>]\r\n        static member useDeferredParallel<'T, 'U, 'Key when 'Key : comparison>(deferred: Deferred<'T>, map: 'T -> ('Key * Async<'U>) list) =\r\n            let (data, setData) = React.useStateWithUpdater(Map.empty)\r\n            let addData = React.useCallbackRef(fun (key, value) -> setData(fun prev -> Map.add key value prev))\r\n            let token = React.useCancellationToken()\r\n            let mapKeyedOperatons (operations: ('Key * Async<'U>) list) = [\r\n                for (key, operation) in operations do\r\n                    async {\r\n                        try\r\n                            do addData(key,  Deferred.InProgress)\r\n                            let! output = operation\r\n                            do addData(key, Deferred.Resolved output)\r\n                        with error ->\r\n                            #if DEBUG\r\n                            Browser.Dom.console.log(error)\r\n                            #endif\r\n                            do addData(key, Deferred.Failed error)\r\n                    }\r\n            ]\r\n\r\n            let start = React.useCallback(fun operations ->\r\n                Fable.Core.JS.setTimeout(fun () ->\r\n                    Async.StartImmediate(Async.Parallel(mapKeyedOperatons operations) |> Async.Ignore, token.current)\r\n                ) 0 |> ignore\r\n            )\r\n\r\n            React.useEffect(fun () ->\r\n                deferred\r\n                |> Deferred.iter (fun data -> start(map data))\r\n            , [| box deferred |])\r\n\r\n            Map.toList data","module App.Types\r\n\r\nopen Global\r\nopen Imports\r\nopen Common\r\n\r\ntype Msg =\r\n    | HomeMsg of Home.Types.Msg\r\n    | NewMsg of New.Types.Msg\r\n    | TreeMsg of Tree.Types.Msg\r\n    | SetProvider of obj\r\n    | SetAccountData of AccountData\r\n    | ChangePage of Page\r\n    | RefreshAccounts\r\n    | SetProfileInfo of ProfileInfo option\r\n    | ScrollToBottom\r\n\r\ntype GlobalObjs =\r\n    { web3Modal: obj//Web3Modal\r\n      window: obj\r\n      mutable web3: obj//Web3\r\n      mutable web3treeContract :obj }\r\n\r\ntype Model =\r\n    { page: Page\r\n      home: Home.Types.Model\r\n      tree: Tree.Types.Model\r\n      common: CommonModel }\r\n","module Tree.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\nopen Common\r\nopen System.Globalization\r\nopen Imports.ReactMarkdown\r\nopen Imports.ReactJazzicon\r\nopen Imports\r\nopen Utils\r\nopen Feliz.UseDeferred\r\nopen Browser.Dom\r\nopen Browser.Types\r\nopen System.Collections.Generic\r\nopen Web3TreeDapp\r\n\r\nlet getRarityDisplay rarityRanking =\r\n    match rarityRanking with\r\n    | _ when rarityRanking < 0.0 -> ofOption None\r\n    | _ when rarityRanking < 0.01 ->\r\n        div [ClassName \"rarity ranking-1 small-shadow mode-aware-border2\"] [div [ClassName \"mode-aware-border2\"] [str \"Extremely Rare\"]; div [ClassName \"mode-aware-border2 mode-aware-text\"] [span [ClassName \"emoji\"] [str \"🔥\"]; str \"Top 1%\"]]\r\n    | _ when rarityRanking < 0.05 ->\r\n        div [ClassName \"rarity ranking-5 small-shadow mode-aware-border2\"] [div [ClassName \"mode-aware-border2 mode-aware-gradient-back\"] [str \"Very Rare\"]; div [ClassName \"mode-aware-border2 mode-aware-gradient-back mode-aware-text\"] [span [ClassName \"emoji\"] [str \"✨\"]; str \"Top 5%\"]]\r\n    | _ when rarityRanking < 0.1 ->\r\n        div [ClassName \"rarity ranking-10 small-shadow mode-aware-border2\"] [div [ClassName \"mode-aware-border2 mode-aware-gradient-back\"] [str \"Rarity\"]; div [ClassName \"mode-aware-border2 mode-aware-gradient-back mode-aware-text\"] [span [ClassName \"emoji\"] [str \"✨\"]; str \"Top 10%\"]]\r\n    | _ when rarityRanking < 0.2 ->\r\n        div [ClassName \"rarity ranking-20 small-shadow mode-aware-border2\"] [div [ClassName \"mode-aware-border2 mode-aware-gradient-back\"] [str \"Rarity\"]; div [ClassName \"mode-aware-border2 mode-aware-gradient-back mode-aware-text\"] [str \"Top 20%\"]]\r\n    | _ when rarityRanking < 0.3 ->\r\n        div [ClassName \"rarity ranking-30 small-shadow mode-aware-border2\"] [div [ClassName \"mode-aware-border2 mode-aware-gradient-back\"] [str \"Rarity\"]; div [ClassName \"mode-aware-border2 mode-aware-gradient-back mode-aware-text\"] [str \"Top 30%\"]]\r\n    | _ -> ofOption None\r\n\r\nlet profileImage (profileNft :NFT option) treeAccount =\r\n    match profileNft with\r\n    | None -> jazziconForAddress 100 treeAccount\r\n    | Some nft ->\r\n        div [ClassName \"image-outer\"]\r\n            [div [ClassName \"image\"; Style [BackgroundImage (\"url(\" + nft.display.url + \")\")]] []]\r\n\r\nlet themeStyles (colors: string[]) (darkMode: bool) =\r\n    let color1 = colors.[0]\r\n    let color2 = colors |> Array.last\r\n    let gradientFill = style [] [str (sprintf \".mode-aware-gradient { background: %s }\" (getSimpleGradient colors))]\r\n    let gradientFillHover = style [] [str (sprintf \".mode-aware-gradient-hover { background: %s; transition: background 500ms linear } .mode-aware-gradient-hover:hover { background: %s; transition: background 500ms linear }\" (getSimpleGradient colors) (getSimpleGradient (colors |> Array.map (ColorUtils.lighten 0.2))))]\r\n    let gradientBack = getGradientBackgroundStyle colors darkMode \"mode-aware-gradient-back\"\r\n    let borders =\r\n        let (h, s, _) = color1 |> ColorUtils.fromHexStr |> ColorUtils.fromRgb\r\n        let r, g, b = ColorUtils.toRgb (h, s * 0.8, if darkMode then 0.85 else 0.15)\r\n        let r2, g2, b2 = ColorUtils.toRgb (h, s * 0.2, if darkMode then 0.2 else 0.9)\r\n        style [] [str (sprintf \".mode-aware-border { border-color: rgb(%i, %i, %i, 0.2) !important } .mode-aware-border2, .mode-aware-border2::before { border-color: rgb(%i, %i, %i) !important } .mode-aware-nftback { background-color: rgb(%i, %i, %i) !important }\" r g b r2 g2 b2 r2 g2 b2)]\r\n    let text =\r\n        let (h, s, _) = color1 |> ColorUtils.fromHexStr |> ColorUtils.fromRgb\r\n        let r, g, b = ColorUtils.toRgb (h, s * 0.7, if darkMode then 0.85 else 0.25)\r\n        let r2, g2, b2 = ColorUtils.toRgb (h, s * 0.15, if darkMode then 0.45 else 0.55)\r\n        let r3, g3, b3 = ColorUtils.toRgb(h, s * 0.24, if darkMode then 0.65 else 0.35)\r\n        let (h2, s2, _) = colors |> Array.last |> ColorUtils.fromHexStr |> ColorUtils.fromRgb\r\n        let r4, g4, b4 = ColorUtils.toRgb(h2, s2, if darkMode then 0.75 else 0.35)\r\n        let r5, g5, b5 = ColorUtils.toRgb(h2, s2, if darkMode then 0.65 else 0.45)\r\n        style [] [str (sprintf \".mode-aware-text { color: rgb(%i, %i, %i) !important } .mode-aware-text2 { color: rgb(%i, %i, %i) !important } strong { color: rgb(%i, %i, %i) !important  } a { color: rgb(%i, %i, %i) } a:hover { color: rgb(%i, %i, %i) }\" r g b r2 g2 b2 r3 g3 b3 r4 g4 b4 r5 g5 b5)]\r\n    let background =\r\n        let tcolor = if ColorUtils.isSlightlyLight [color1] then \"black\" else \"white\"\r\n        style [] [str (sprintf \".mode-aware-background { background-color: %s; color: %s }\" color1 tcolor)]\r\n    let shadows =\r\n        let (h, s, _) = color2 |> ColorUtils.fromHexStr |> ColorUtils.fromRgb\r\n        let r, g, b = ColorUtils.toRgb (h, s * 0.5, if darkMode then 0.05 else 0.25)\r\n        let a = if darkMode then 1.0 else 0.3\r\n        style [] [str (sprintf \".small-shadow { box-shadow: 0px 0px 12px 0px rgba(%i, %i, %i, %f) !important } .large-shadow { box-shadow: 0px 0px 36px 0px rgba(%i, %i, %i, %f) !important }\" r g b a r g b a)]\r\n    div []\r\n        [gradientFill\r\n         gradientFillHover\r\n         gradientBack\r\n         borders\r\n         text\r\n         background\r\n         shadows]\r\n\r\n// Theme Selector\r\n// -------\r\ntype GradientButtonProps = { colors: string[]; name: string; selected: bool; onSelect: unit -> unit; disabled: bool }\r\n\r\nlet GradientButton =\r\n    FunctionComponent.Of ((fun (props :GradientButtonProps) ->\r\n        let gradient = getSimpleGradient props.colors\r\n        let color = if ColorUtils.isLight (props.colors :> string seq) then \"black\" else \"white\"\r\n        div [classList [\"disabled\", props.disabled];OnClick (props.onSelect << ignore);Style [Background gradient; Color color]] [str props.name]\r\n    ), \"GradientButton\", equalsButFunctions, fun props -> props.name)\r\n\r\ntype ThemeSelectorProps = { colors: (string[] * string)[]; selectedColor: int; darkMode: bool; disabled: bool; onSelect: int -> unit; onSelectDarkMode: bool -> unit }\r\n\r\nlet ThemeSelector =\r\n    FunctionComponent.Of ((fun (props :ThemeSelectorProps) ->\r\n        div [ClassName \"theme-selector\"]\r\n            [div [ClassName \"gradient-selector\"]\r\n                    (props.colors\r\n                        |> Array.mapi (fun i (cs, c) ->\r\n                            GradientButton { disabled = props.disabled; colors = cs; name = c; selected = i = props.selectedColor; onSelect = (fun _ -> props.onSelect i) })\r\n                        |> Array.toList)\r\n             div [ClassName \"mode\"]\r\n                [div [classList [\"disabled\", props.disabled]; OnClick (fun _ -> props.onSelectDarkMode true)] [mdiIcon \"weather-night\"]\r\n                 div [classList [\"disabled\", props.disabled]; OnClick (fun _ -> props.onSelectDarkMode false)] [mdiIcon \"weather-sunny\"]]]\r\n    ), \"ThemeSelector\", equalsButFunctions)\r\n\r\n// Nft Like\r\nlet NftLike =\r\n    FunctionComponent.Of ((fun (props :Like) ->\r\n        let emojis = emojisFromText props.text |> List.truncate 3\r\n        let display = if isNullOrEmpty props.userDisplay then niceAddress props.userAddress else props.userDisplay\r\n        div [ClassName \"nft-comment mode-aware-border\"]\r\n            [div [ClassName \"profile-image\"]\r\n                [if isNullOrEmpty props.userImage then\r\n                    jazziconForAddress 48 props.userAddress\r\n                 else\r\n                    img [Src props.userImage]\r\n                 ]\r\n             div []\r\n                [div [ClassName \"name\"] [str display]\r\n                 div [ClassName \"content\"] [div [] emojis]\r\n                 div [ClassName \"block mode-aware-text2\"] [mdiIcon \"ethereum\"; str (sprintf \"Block: %i\" props.blockNumber)]\r\n                 div [ClassName \"time\"] [str (niceTimestamp props.timestamp)]]]\r\n        ), \"NftLike\", equalsButFunctions, fun props -> props.transactionHash)\r\n\r\n// Nft Media Full\r\n// ---------\r\nlet NftMediaFull =\r\n    FunctionComponent.Of ((fun (props :NFTDisplayRecord) ->\r\n        match props with\r\n        | { display = \"model\"; url = src } ->\r\n            modelViewer\r\n                [Src src\r\n                 HTMLAttr.Custom (\"bounds\", \"tight\")\r\n                 HTMLAttr.Custom (\"enable-pan\", true)\r\n                 HTMLAttr.Custom (\"camera-controls\", true)\r\n                 HTMLAttr.Custom (\"shadow-intensity\", 2)\r\n                 HTMLAttr.Custom (\"shadow-softness\", 0.65)\r\n                 HTMLAttr.Custom (\"ar-modes\", \"webxr scene-viewer quick-look\")\r\n                 HTMLAttr.Custom (\"exposure\", 1)\r\n                 HTMLAttr.Custom(\"environment-image\", \"neutral\")]\r\n                    []\r\n        | { display = \"video\"; url = src; format = format } ->\r\n            video [ClassName \"mode-aware-border2\"; AutoPlay false; Controls true]\r\n                [source [Src src; Type <| getMimeType format]]\r\n        | { url = src } ->\r\n            img [ClassName \"mode-aware-border2\"; Src src]\r\n        ), \"NftMediaFull\", equalsButFunctions)\r\n\r\n// Nft Attributes List\r\n// --------\r\ntype NftAttributeListProps =\r\n    { attributes: NftAttribute[] }\r\n\r\nlet NftAttributeView =\r\n    FunctionComponent.Of ((fun (props :NftAttribute) ->\r\n        div [ClassName \"nft-attribute mode-aware-border2 small-shadow\"]\r\n            [div [ClassName \"trait mode-aware-text\"] [str props.traitType]\r\n             div [ClassName \"value\"] [str props.value]]\r\n    ), \"NftAttributeView\", equalsButFunctions, fun a -> a.traitType)\r\n\r\nlet NftAttributeList =\r\n    FunctionComponent.Of ((fun (props :NftAttributeListProps) ->\r\n        div [ClassName \"nft-attributes\"]\r\n            (props.attributes |> Array.map NftAttributeView)\r\n    ), \"NftAttributeList\", equalsButFunctions)\r\n\r\n// Nft Modal\r\n// ---------\r\ntype NftDetailsModalProps =\r\n    { singlePageMode: bool; nft: NFT; collection: NFTCollection; likeCount: int; onClose: unit -> unit }\r\n\r\nlet NftDetailsModal =\r\n    FunctionComponent.Of ((fun (props :NftDetailsModalProps) ->\r\n        let nftDetails = Feliz.React.useDeferred (Server.getNFTDetails props.nft.token_address props.nft.token_id, [||])\r\n        let title =\r\n            if isNullOrEmpty props.nft.title then\r\n                if not <| isNullOrEmpty props.nft.token_id then\r\n                    try\r\n                        \"#\" + System.Int32.Parse(props.nft.token_id, System.Globalization.NumberStyles.HexNumber).ToString()\r\n                    with\r\n                    | _ -> \"\"\r\n                else \"\"\r\n            else \"\"\r\n        window?nftDetails <- nftDetails\r\n        let attributes =\r\n            match nftDetails with\r\n            | Deferred.Resolved (Some { attributes = attributes }) when attributes.Length > 0 ->\r\n                NftAttributeList { attributes = attributes }\r\n            | _ -> ofOption None\r\n        div [classBaseList \"rmodal\" [\"single-page\", props.singlePageMode]]\r\n            [div [ClassName \"rmodal-back mode-aware-gradient-back\"]\r\n                [a [OnClick (props.onClose << ignore); ClassName \"mode-aware-text\"] [mdiIcon \"chevron-left\"; str \"Back\"]]\r\n             div [ClassName \"rmodal-close\"]\r\n                [button [OnClick (props.onClose << ignore)] [mdiIconLrg \"close\"]]\r\n             div [ClassName \"rmodal-left\"]\r\n                [div [ClassName \"rmodal-media\"] [NftMediaFull props.nft.display]]\r\n             div [ClassName \"rmodal-right mode-aware-gradient-back\"]\r\n                [h1 [] [str props.collection.name]\r\n                 h2 [ClassName \"mode-aware-border\"] [str title]\r\n                 div [] [attributes]]]\r\n            ), \"NftDetailsModal\", equalsButFunctions)\r\n\r\n// Page Modal\r\n// --------\r\ntype PageModalProps =\r\n    { active: bool; children: ReactElement list }\r\n\r\nlet PageModal =\r\n    FunctionComponent.Of ((fun (props :PageModalProps) ->\r\n        div [classBaseList \"page-modal\" [\"active\", props.active]] props.children\r\n    ), \"PageModal\", equalsButFunctions)\r\n\r\n// Transaction Modal\r\n// ----------\r\ntype DialogModalProps =\r\n    { active: bool; txResult: DappTxResult<TransactionMsg>; accountProfileInfo: ProfileInfo option; account: string; ens: string option; url: string option }\r\n\r\nlet DialogModal =\r\n    FunctionComponent.Of ((fun (props :DialogModalProps) ->\r\n        let onCopy url =\r\n            Browser.Dom.window?navigator?clipboard?writeText(url)\r\n        let msg =\r\n            match props.txResult with\r\n            | Response (UpdateProfile(_), _) ->\r\n                \"Saving your page...\"\r\n            | Confirmed (UpdateProfile(_), _) ->\r\n                \"Your new page has been saved to the blockchain.\"\r\n            | _ -> \"\"\r\n        let image =\r\n            match props.accountProfileInfo with\r\n            | Some { image = image } when not <| isNullOrEmpty image ->\r\n                img [ClassName \"profile-image mode-aware-border\"; Src image]\r\n            | _ -> jazziconForAddress 48 props.account\r\n        let name =\r\n            match props.accountProfileInfo with\r\n            | Some info -> info.displayName\r\n            | _ -> niceAddress props.account\r\n        let blockExplorerUrl =\r\n            match props.txResult with\r\n            | Response (_, response) -> Config.getBlockExplorerUrl response.hash |> Some\r\n            | Confirmed (_, confirmed) -> Config.getBlockExplorerUrl confirmed.transactionHash |> Some\r\n            | _ -> None\r\n        let blockExpLink =\r\n            blockExplorerUrl |> Option.map (fun url -> p [ClassName \"blockexp-link\"] [a [Href url; Target \"_blank\"] [str \"View on Block Explorer\"]])\r\n        let bottom =\r\n            match props.txResult with\r\n            | Response _ -> div [ClassName \"lds-dual-ring\"] []\r\n            | Confirmed _ ->\r\n                let url =\r\n                    match props.ens, props.url with\r\n                    | Some ens, _ -> Config.siteUrl + \"/\" + ens\r\n                    | _, Some url -> Config.siteUrl + \"/\" + url\r\n                    | _ -> Config.siteUrl + \"/\" + props.account\r\n                div [ClassName \"save-result\"]\r\n                    [p [] [str \"Your page is available at \"; a [Href url] [str url]; str \" \"; a [OnClick (fun _ -> onCopy url);ClassName \"button is-small mode-aware-button mode-aware-border\"] [mdiIcon \"content-copy\"]]\r\n                     a [Href (\"/edit/\" + props.account); ClassName \"button mode-aware-button mode-aware-border\"] [str \"Close\"]]\r\n                //a [ClassName \"button\"; Href (\"/\" + props.account)] [str \"View Tree\"]\r\n            | _ -> ofOption None\r\n        PageModal\r\n            { active = props.active\r\n              children =\r\n                [div [ClassName \"saving-modal mode-aware-border mode-aware-gradient-back\"]\r\n                    [h1 [ClassName \"mode-aware-text\"] [str msg]\r\n                     div [ClassName \"profile-info\"]\r\n                        [image\r\n                         h1 [ClassName \"mode-aware-text\"] [str name]]\r\n                     ofOption blockExpLink\r\n                     bottom]]}\r\n    ), \"DialogModal\", equalsButFunctions)\r\n\r\n// Edit Input\r\n// --------\r\ntype EditInputProps =\r\n    { value: string; name: string; placeholder: string; onChange: string -> unit; disabled: bool }\r\n\r\nlet EditInput =\r\n    FunctionComponent.Of ((fun (props :EditInputProps) ->\r\n        div [ClassName \"field\"]\r\n            [div [ClassName \"control\"]\r\n                [input [Disabled props.disabled; ClassName \"input\"; Type \"text\"; Placeholder props.placeholder; Value props.value; OnChange (fun ev -> props.onChange ev.target?value)]]]\r\n    ), \"EditInput\", equalsButFunctions, fun props -> props.name)\r\n\r\nlet EditTextArea =\r\n    FunctionComponent.Of ((fun (props :EditInputProps) ->\r\n        div [ClassName \"field\"]\r\n            [div [ClassName \"control\"]\r\n                [textarea [Disabled props.disabled; Rows 2; ClassName \"input\"; Type \"text\"; Placeholder props.placeholder; Value props.value; OnChange (fun ev -> props.onChange ev.target?value)] []]]\r\n    ), \"EditTextArea\", equalsButFunctions, fun props -> props.name)\r\n\r\n// Edit Bar\r\n// --------\r\ntype EditBarProps =\r\n    { saveDisabled: bool; treeAccount: string; treeChainId: int; onSave: unit -> unit }\r\n\r\nlet EditBar =\r\n    FunctionComponent.Of ((fun (props :EditBarProps) ->\r\n        let web3State = useWeb3React()\r\n        let saveDisabled = props.saveDisabled || (web3State.account <> Some props.treeAccount) || web3State.chainId <> Some props.treeChainId\r\n        nav [ClassName \"navbar edit is-fixed-top\"]\r\n            [div [ClassName \"navbar-brand\"]\r\n                [div [ClassName \"navbar-item\"]\r\n                   (match web3State with\r\n                    | { account = Some account; chainId = Some chainId; active = true } when account = props.treeAccount && chainId = props.treeChainId ->\r\n                        [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-cog-outline\"] []]; span [] [str \"Editing\"]]\r\n                    | { active = false } ->\r\n                        [button [ClassName \"button connect is-primary\"; OnClick (fun _ -> web3State.activate(Injected))] [str \"Connect to Edit\"]]\r\n                    | _ ->\r\n                        let errTxt =\r\n                            match web3State with\r\n                            | { account = Some account } when account <> props.treeAccount -> \"Wrong account\"\r\n                            | { chainId = Some chainId } when chainId <> props.treeChainId -> \"Wrong chain\"\r\n                            | _ -> \"There is a problem with your web3 provider\"\r\n                        [span [ClassName \"icon has-text-danger\"] [i [ClassName \"mdi mdi-alert-octagon\"] []]; span [ClassName \"has-text-danger\"] [str errTxt]])\r\n                 ]\r\n             div [ClassName \"navbar-item controls\"]\r\n                [button [OnClick (props.onSave << ignore);ClassName \"button save-button\"; Disabled saveDisabled]\r\n                    [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-content-save-outline\"] []]\r\n                     span [] [str \"Save\"]]]]\r\n        ), \"EditBar\", equalsButFunctions)\r\n\r\n// Link Tree Edit Link\r\n// -------\r\ntype LinkTreeEditLinkProps =\r\n    { link: EditLinkState\r\n      isLight: bool\r\n      isDark: bool\r\n      canEdit: bool\r\n      canMoveUp: bool\r\n      canMoveDown: bool\r\n      onEdit: unit -> unit\r\n      onAccept: (string * string) -> unit\r\n      onRevert: unit -> unit\r\n      onUp: unit -> unit\r\n      onDown: unit -> unit\r\n      onDelete: unit -> unit }\r\n\r\nlet LinkTreeEditLink =\r\n    FunctionComponent.Of ((fun (props :LinkTreeEditLinkProps) ->\r\n        let editing = Hooks.useState false\r\n        let name = Hooks.useState props.link.name\r\n        let url = Hooks.useState props.link.url\r\n        let hasChanges = name.current <> props.link.name || url.current <> props.link.url\r\n        let valid = Validate.linkUrl url.current && Validate.linkName name.current\r\n        let onCancel _ =\r\n            name.update props.link.name\r\n            url.update props.link.url\r\n            editing.update false\r\n            props.onRevert()\r\n            if props.link.isNew then props.onDelete()\r\n        let isEditing = editing.current || props.link.isNew\r\n        let control =\r\n            match isEditing with\r\n            | false -> []\r\n            | true ->\r\n                let nameValid = hasChanges && Validate.linkName name.current\r\n                let nameInvalid = hasChanges && not <| Validate.linkName name.current\r\n                let urlValid = hasChanges && Validate.linkUrl url.current\r\n                let urlInvalid = hasChanges && not <| Validate.linkUrl url.current\r\n                [input [classBaseList \"input link-name\" [\"valid\", nameValid; \"invalid\", nameInvalid]; Type \"text\"; Placeholder \"Title\"; DefaultValue name.current; OnChange (fun e -> name.update (e.target?value :> string))]\r\n                 input [classBaseList \"input link-name\" [\"valid\", urlValid; \"invalid\", urlInvalid]; Type \"text\"; Placeholder \"Url\"; DefaultValue url.current; OnChange (fun e -> url.update (e.target?value :> string))]]\r\n        let accept _ =\r\n            editing.update false\r\n            props.onAccept (name.current, url.current)\r\n        let controlButtons =\r\n            match editing.current, props.link.isNew with\r\n            | true, _ | _, true ->\r\n                [button [ClassName \"control-cancel\"; OnClick onCancel] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-arrow-u-left-top-bold mdi-24px\"] []]]\r\n                 button [ClassName \"control-accept\"; OnClick accept; Disabled <| not valid] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-check-outline mdi-24px\"] []]]\r\n                ]\r\n            | _ ->\r\n                [if props.canEdit then button [ClassName \"control-edit\"; OnClick (fun _ -> props.onEdit(); editing.update true; )] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-square-edit-outline mdi-24px\"] []]] else ofOption None\r\n                 if props.canMoveUp then button [ClassName \"control-up\"; OnClick (fun _ -> props.onUp())] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-arrow-up-box mdi-24px\"] []]] else ofOption None\r\n                 if props.canMoveDown then button [ClassName \"control-down\"; OnClick (fun _ -> props.onDown())] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-arrow-down-box mdi-24px\"] []]] else ofOption None\r\n                 button [ClassName \"control-delete\"; OnClick (fun _ -> props.onDelete())] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-delete mdi-24px\"] []]]]\r\n        div [classBaseList \"field edit-link mode-aware-gradient\" [\"editing\", isEditing; \"is-dark\", props.isDark; \"is-light\", props.isLight]]\r\n            [div [ClassName \"name\"] [str props.link.name]\r\n             div [ClassName \"control\"] control\r\n             div [ClassName \"control-buttons\"]\r\n                controlButtons]\r\n    ), \"LinkTreeEditLink\", equalsButFunctions, fun props -> props.link.id + props.link.index.ToString())\r\n\r\n// Link Tree Edit\r\n// --------\r\ntype LinkTreeEditProps =\r\n    { treeAccount: string\r\n      ens: string option\r\n      hide: bool\r\n      state: EditState option\r\n      onLinkAccept: (string * string * string) -> unit\r\n      onLinkUp: string -> unit\r\n      onLinkDown: string -> unit\r\n      onLinkDelete: string -> unit\r\n      onNameChange: string -> unit\r\n      onBioChange: string -> unit\r\n      onLinkNew: unit -> unit\r\n      onSelectColor: string[] -> unit\r\n      onSelectDarkMode: bool -> unit\r\n      isColorLight: bool\r\n      isColorDark : bool\r\n      disabled: bool }\r\n\r\nlet LinkTreeEdit =\r\n    FunctionComponent.Of ((fun (props :LinkTreeEditProps) ->\r\n        let editing = Hooks.useState None\r\n        match props.state with\r\n        | None -> bigLoading\r\n        | Some state ->\r\n            let canAdd =\r\n                match editing.current with\r\n                | None when not (state.links |> Array.exists (fun l -> l.isNew)) ->\r\n                    true\r\n                | _ -> false\r\n            div [ClassName \"tree edit\"; Style [if props.hide then yield Display DisplayOptions.None]]\r\n                [themeStyles state.colors state.darkMode\r\n                 div [ClassName \"profile-info\"]\r\n                    [profileImage state.profileNft props.treeAccount\r\n                     EditInput { disabled = props.disabled; value = state.name; name = \"name\"; placeholder = \"Name\"; onChange = props.onNameChange }\r\n                     EditTextArea { disabled = props.disabled; value = state.bio; name = \"bio\"; placeholder = \"Bio\"; onChange = props.onBioChange }]\r\n                 ofArray (state.links\r\n                    |> Array.mapi (fun i link ->\r\n                        let canEdit =\r\n                            match editing.current with\r\n                            | Some id when id = link.id -> true\r\n                            | None when not (state.links |> Array.exists (fun l -> l.isNew)) -> true\r\n                            | _ when link.isNew -> true\r\n                            | _ -> false\r\n                        LinkTreeEditLink\r\n                            { link = link\r\n                              isLight = props.isColorLight\r\n                              isDark = props.isColorDark\r\n                              canEdit = canEdit\r\n                              canMoveDown = i < state.links.Length - 1\r\n                              canMoveUp = i > 0\r\n                              onEdit = fun _ -> editing.update (Some link.id)\r\n                              onAccept = fun (name, url) -> props.onLinkAccept (link.id, name, url); editing.update None\r\n                              onUp = fun _ -> props.onLinkUp link.id\r\n                              onDown = fun _ -> props.onLinkDown link.id\r\n                              onDelete = fun _ -> props.onLinkDelete link.id\r\n                              onRevert = fun _ -> editing.update None }))\r\n                 button [Disabled (not canAdd || props.disabled);OnClick (props.onLinkNew << ignore);ClassName \"add-link button\"]\r\n                    [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-link-plus\"] []]; span [] [str \"Add Link\"]]\r\n                 ThemeSelector { disabled = props.disabled; colors = ColorUtils.gradientArray; selectedColor = 0; darkMode = false; onSelect = (fun i -> props.onSelectColor (fst ColorUtils.gradientArray.[i])); onSelectDarkMode = props.onSelectDarkMode }\r\n                 ]\r\n    ), \"LinkTreeEdit\", equalsButFunctions)\r\n\r\n// Link Tree Link\r\n// ---------\r\ntype LinkTreeLinkProps =\r\n    { name: string; url: string; index: int; showBorder: bool; darkText: bool }\r\n\r\nlet LinkTreeLink =\r\n    FunctionComponent.Of ((fun (props :LinkTreeLinkProps) ->\r\n        let icon =\r\n            match props.url with\r\n            | url when url.Contains(\"instagram.com\") -> i [ClassName \"mdi mdi-instagram\"] []\r\n            | url when url.Contains(\"twitter.com\") -> i [ClassName \"mdi mdi-twitter\"] []\r\n            | url when url.Contains(\"facebook.com\") -> i [ClassName \"mdi mdi-facebook\"] []\r\n            | url when url.Contains(\"discord.com\") -> i [ClassName \"mdi mdi-discord\"] []\r\n            | _ -> ofOption None\r\n        let style =\r\n            [if props.showBorder then\r\n                yield BorderStyle \"solid\"\r\n                yield BorderWidth \"1px\"\r\n             if props.darkText then\r\n                yield Color \"black\"]\r\n        a [classBaseList \"button mode-aware-gradient-hover\" [\"mode-aware-border\", props.showBorder]; Href props.url; Style style] [icon; str props.name]\r\n        ), \"LinkTreeLink\", equalsButFunctions, fun props -> props.index.ToString())\r\n\r\n// Link Tree\r\n// ---------\r\ntype LinkTreeViewProps =\r\n    { treeAccount: string; ens: string option; tree: TreeData; profileNft: NFT option; hide: bool }\r\n\r\nlet LinkTreeView =\r\n    FunctionComponent.Of ((fun (props :LinkTreeViewProps) ->\r\n        // set html class\r\n        let tree = props.tree\r\n        let profileNft = props.profileNft\r\n        let profileImage = profileImage profileNft props.treeAccount\r\n        let name =\r\n            if isNullOrEmpty tree.name then\r\n                match props.ens with\r\n                | Some ens when not <| isNullOrEmpty ens -> ens\r\n                | _ -> niceAddress props.treeAccount\r\n            else tree.name\r\n        let showBorder =\r\n            (props.tree.colors |> ColorUtils.isDark && tree.darkMode) || (props.tree.colors |> ColorUtils.isLight && (not tree.darkMode))\r\n        let darkText = props.tree.colors |> ColorUtils.isLight\r\n        div [ClassName \"tree view\"]\r\n           [yield themeStyles tree.colors tree.darkMode\r\n            // header\r\n            if not props.hide then\r\n                yield div [ClassName \"profile-info\"]\r\n                   [// profile image\r\n                    profileImage\r\n                    // name\r\n                    h1 [ClassName \"mode-aware-text\"] [str name]\r\n                    // bio\r\n                    p [] [str tree.bio]]\r\n                // links\r\n                yield div [ClassName \"links\"] (tree.links |> Array.mapi (fun i link -> LinkTreeLink { name = link.name; url = link.url; index = i; showBorder = showBorder; darkText = darkText }) |> Array.toList)\r\n            ]\r\n            ), \"LinkTreeView\", equalsButFunctions, fun props -> props.treeAccount)\r\n\r\n// NFT Collection Badge\r\n// -------\r\ntype NftCollectionBadgeProps =\r\n    { n: int; imageUrl: string; collectionIndex: int; onClick: unit -> unit }\r\n\r\nlet NftCollectionBadge =\r\n    FunctionComponent.Of ((fun (props :NftCollectionBadgeProps) ->\r\n        let sub =\r\n            match props.n with\r\n            | 0 -> ofOption None\r\n            | n ->\r\n                div [ClassName \"mode-aware-background mode-aware-border2 small-shadow\"] [span [] [str (sprintf \"%i\" n)]]\r\n        a [OnClick (props.onClick << ignore); ClassName \"nft-collection-badge\"]\r\n            [img [ClassName \"mode-aware-border2 small-shadow\"; Src props.imageUrl]; sub]\r\n        ), \"NftCollectionBadge\", equalsButFunctions, fun props -> props.collectionIndex.ToString())\r\n\r\n// NFT Collection Badges\r\n// --------\r\ntype NftCollectionBadgesProps =\r\n    { collections: (NFTCollection * int * int)[]; goToCollection: int -> unit }\r\n\r\nlet NftCollectionBadges =\r\n    FunctionComponent.Of ((fun (props :NftCollectionBadgesProps) ->\r\n    div [ClassName \"nft-collection-badges\"]\r\n        (props.collections |> Array.map (fun (c, i, n) -> NftCollectionBadge { n = n; imageUrl = c.imageUrl; collectionIndex = i; onClick = fun () -> props.goToCollection i }) |> Array.toList)\r\n    ), \"NftCollectionBadges\", equalsButFunctions)\r\n\r\nlet section icon name =\r\n    div [ClassName \"section-header\"]\r\n        [div [ClassName \"section-line mode-aware-border\"] []\r\n         h1 [ClassName \"mode-aware-text\"]\r\n            [icon; span [] [str name]]; div [ClassName \"section-line mode-aware-border\"] []]\r\n\r\n// NFT Media\r\n// -------\r\ntype NftMediaVideoProps =\r\n    { playing: bool; started: bool; onEnded: unit -> unit; onPlay: unit -> unit; playVideo: unit -> unit }\r\n\r\ntype NftMediaProps =\r\n    { nft: NFT; hidden: bool; videoProps: NftMediaVideoProps option; onClick: unit -> unit }\r\n\r\nlet NftMedia =\r\n    FunctionComponent.Of ((fun (props :NftMediaProps) ->\r\n        let videoLoading = Hooks.useState false\r\n        match props.nft.display.display, props.videoProps with\r\n        | \"video\", Some videoProps ->\r\n            if props.nft.display.hasPreview then\r\n                let src =\r\n                    match props.nft.display.hasW388 with\r\n                    | true -> props.nft.display.url + \"_preview_w388\"\r\n                    | _ ->  props.nft.display.url + \"_preview\"\r\n                div [ClassName \"video-preview\"]\r\n                    [img [OnClick (props.onClick << ignore); classBaseList \"mode-aware-border2 mode-aware-nftback\" [\"hidden\", props.hidden]; Src src]\r\n                     (match videoProps.playing with\r\n                      | true ->\r\n                        video [OnEnded (videoProps.onEnded << ignore); OnPause (videoProps.onEnded << ignore); OnPlay (fun _ -> videoLoading.update false; videoProps.onPlay()); classBaseList \"mode-aware-border2\" [\"started\", videoProps.started]; AutoPlay true; Muted isMobile]\r\n                            [source [Src props.nft.display.url; Type (getMimeType props.nft.display.format)]]\r\n                      | _ -> ofOption None)\r\n                     if videoLoading.current then\r\n                        div [ClassName \"video-loading\"] [div [ClassName \"lds-dual-ring\"] []]\r\n                     else ofOption None\r\n                     div [classBaseList \"video-controls\" [\"playing\", videoProps.started]]\r\n                        [div [ClassName \"video-controls-inner\"]\r\n                            [a [ClassName \"video-stop\"; OnClick (videoProps.onEnded << ignore)] [mdiIcon \"stop\"]\r\n                             a [ClassName \"video-play\"; OnClick (fun _ -> videoLoading.update true; videoProps.playVideo())] [mdiIcon \"play\"]]]]\r\n            else\r\n                video [OnClick (props.onClick << ignore); classBaseList \"mode-aware-border2\" [\"hidden\", props.hidden]; AutoPlay false; Controls true]\r\n                    [source [Src props.nft.display.url; Type (getMimeType props.nft.display.format)]]\r\n        | \"model\", _ ->\r\n            modelViewer [Src props.nft.display.url; HTMLAttr.Custom (\"bounds\", \"tight\"); HTMLAttr.Custom(\"enable-pan\", true); HTMLAttr.Custom(\"auto-rotate\", \"true\"); HTMLAttr.Custom(\"shadow-intensity\", 2); HTMLAttr.Custom(\"shadow-softness\", 0.65); HTMLAttr.Custom (\"ar-modes\", \"webxr scene-viewer quick-look\"); HTMLAttr.Custom (\"exposure\", 1); HTMLAttr.Custom(\"environment-image\", \"neutral\")]\r\n                [div [ClassName \"model-viewer-load\"; HTMLAttr.Custom (\"slot\", \"poster\")] [bigLoading]]\r\n        | \"text\", _ ->\r\n            iframe [Src props.nft.display.url; HTMLAttr.Width \"340\"; HTMLAttr.Height \"550\"] []\r\n        | _ ->\r\n            let src =\r\n                match props.nft.display.hasW388 with\r\n                | true -> props.nft.display.url + \"_w388\"\r\n                | _ -> props.nft.display.url\r\n            img [OnClick (props.onClick << ignore); HTMLAttr.Custom(\"decoding\", \"async\"); HTMLAttr.Custom(\"loading\", \"lazy\"); classBaseList \"mode-aware-border2 mode-aware-nftback large-shadow\" [\"hidden\", props.hidden]; Src src]\r\n    ), \"NftMedia\", equalsButFunctions, fun props -> props.nft.token_address + props.nft.token_id)\r\n\r\n// NFT Gallery NFT\r\n// ----------\r\ntype NftGalleryNftProps =\r\n    { nft: NFTResult\r\n      hidden: bool\r\n      onNftClick: (NFTResult * NFTCollection) -> unit\r\n      canMakeProfile: bool\r\n      collection: NFTCollection\r\n      videoProps: NftMediaVideoProps option\r\n      mode: Mode\r\n      disabled: bool\r\n      onToggleVisible: unit -> unit\r\n      onMakeProfile: unit -> unit }\r\n\r\nlet NftGalleryNft =\r\n    FunctionComponent.Of ((fun (props :NftGalleryNftProps) ->\r\n        let controls =\r\n            match props.mode with\r\n            | View -> ofOption None\r\n            | Edit ->\r\n                let showHideInner =\r\n                    match props.hidden with\r\n                    | false -> [mdiIcon \"eye-off\"; str \" Hide\"]\r\n                    | true -> [mdiIcon \"eye\"; str \" Show\"]\r\n                let makeProfile =\r\n                    match props.nft.nft.display.display with\r\n                    | \"image\" ->\r\n                        button [OnClick (props.onMakeProfile << ignore);ClassName \"button\"; Disabled (not props.canMakeProfile || props.disabled)]\r\n                            [str \"Make Profile\"]\r\n                    | _ -> ofOption None\r\n                div [ClassName \"edit-nft\"]\r\n                    [button [Disabled props.disabled; ClassName \"button\"; OnClick (props.onToggleVisible << ignore)] showHideInner\r\n                     makeProfile]\r\n        let title =\r\n            if isNullOrEmpty props.nft.nft.title then\r\n                if not <| isNullOrEmpty props.nft.nft.token_id then\r\n                    try\r\n                        \"#\" + System.Int32.Parse(props.nft.nft.token_id, System.Globalization.NumberStyles.HexNumber).ToString()\r\n                    with\r\n                    | _ -> \"\"\r\n                else \"\"\r\n            else \"\"\r\n\r\n        div [ClassName \"nft\"]\r\n            [// Media\r\n             NftMedia\r\n                { nft = props.nft.nft\r\n                  hidden = props.hidden\r\n                  videoProps = props.videoProps\r\n                  onClick = fun () -> props.onNftClick (props.nft, props.collection) }\r\n             // Controls if edit mode\r\n             controls\r\n             let desc =\r\n                if isNullOrEmpty props.collection.description && not <| isNullOrEmpty props.nft.nft.description then\r\n                    p [ClassName \"nft-desc\"] [str props.nft.nft.description]\r\n                else ofOption None\r\n            // Card\r\n             div [ClassName \"nft-card mode-aware-border\"]\r\n                [p [ClassName \"nft-title\"] [str title]\r\n                 p [ClassName \"nft-media\"] (getMediaElement props.nft.nft.display)\r\n                 getRarityDisplay props.nft.rarityRanking\r\n                 desc]\r\n             ]\r\n    ), \"NftGalleryNft\", equalsButFunctions, fun props -> props.nft.nft.token_address + props.nft.nft.token_id)\r\n\r\n// NFT Gallery Collection\r\n// ----------\r\ntype NftGalleryCollectionProps =\r\n    { collection: NFTCollectionResult\r\n      scrollToRef: IRefValue<Browser.Types.Element option> option\r\n      mode: Mode\r\n      disabled: bool\r\n      displayUntil: int\r\n      hidden: Set<string * string>\r\n      profileNft: (string * string) option\r\n      videoPlaying: (string * string * bool) option\r\n      onNftClick: (NFTResult * NFTCollection) -> unit\r\n      onEnded: (string * string) -> unit\r\n      onPlay: (string * string) -> unit\r\n      playVideo: (string * string) -> unit\r\n      onToggleVisible: (string * string) -> unit\r\n      onMakeProfile: (string * string) -> unit }\r\n\r\nlet NftGalleryCollection =\r\n    FunctionComponent.Of ((fun (props :NftGalleryCollectionProps) ->\r\n        let collectionHeading =\r\n            if isNullOrEmpty props.collection.collection.bannerUrl || isNullOrEmpty props.collection.collection.imageUrl then\r\n                div [ClassName \"collection-heading\"]\r\n                    [h1 [] [str props.collection.collection.name]]\r\n            else\r\n                div [ClassName \"collection-heading\"]\r\n                    [div [ClassName \"banner-image mode-aware-border2 large-shadow\"; Style [BackgroundImage (sprintf \"url(%s)\" props.collection.collection.bannerUrl)]] []\r\n                     div [ClassName \"collection-image mode-aware-border2\"; Style [BackgroundImage (sprintf \"url(%s)\" props.collection.collection.imageUrl)]] []\r\n                     h1 [] [str props.collection.collection.name]]\r\n        let collectionDesc =\r\n            if isNullOrEmpty props.collection.collection.description then\r\n                ofOption None\r\n            else\r\n                div [ClassName \"collection-description\"]\r\n                    [h2 [] [markdown [str props.collection.collection.description]]]\r\n        div (match props.scrollToRef with | None -> [ClassName \"collection\"] | Some ref -> [ClassName \"collection\"; RefValue ref])\r\n            [div [ClassName \"collection-spacer mode-aware-border\"] [str \" \"]\r\n             collectionHeading\r\n             collectionDesc\r\n             div [ClassName \"nfts\"]\r\n                (props.collection.nfts\r\n                    |> Array.map (fun nft ->\r\n                        let videoProps =\r\n                            match nft.nft.display.display with\r\n                            | \"video\" ->\r\n                                { playing =\r\n                                    match props.videoPlaying with\r\n                                    | Some (tokenAddress, tokenId, _) when tokenAddress = nft.nft.token_address && tokenId = nft.nft.token_id ->\r\n                                        true\r\n                                    | _ -> false\r\n                                  started =\r\n                                    match props.videoPlaying with\r\n                                    | Some (tokenAddress, tokenId, true) when tokenAddress = nft.nft.token_address && tokenId = nft.nft.token_id ->\r\n                                        true\r\n                                    | _ -> false\r\n                                  onEnded = fun _ -> props.onEnded (nft.nft.token_address, nft.nft.token_id)\r\n                                  onPlay = fun _ -> props.onPlay (nft.nft.token_address, nft.nft.token_id)\r\n                                  playVideo = fun _ -> props.playVideo (nft.nft.token_address, nft.nft.token_id) } |> Some\r\n                            | _ -> None\r\n                        match props.mode with\r\n                        | View when props.hidden |> Set.contains (nft.nft.token_address, nft.nft.token_id) -> ofOption None\r\n                        | _ when nft.index >= props.displayUntil -> ofOption None\r\n                        | _ ->\r\n                            NftGalleryNft\r\n                                { nft = nft\r\n                                  onNftClick = props.onNftClick\r\n                                  disabled = props.disabled\r\n                                  onToggleVisible = fun _ -> props.onToggleVisible (nft.nft.token_address, nft.nft.token_id)\r\n                                  onMakeProfile = fun _ -> props.onMakeProfile (nft.nft.token_address, nft.nft.token_id)\r\n                                  hidden = props.hidden |> Set.contains (nft.nft.token_address, nft.nft.token_id)\r\n                                  videoProps = videoProps\r\n                                  collection = props.collection.collection\r\n                                  canMakeProfile = props.profileNft <> Some (nft.nft.token_address, nft.nft.token_id)\r\n                                  mode = props.mode}))]\r\n    ), \"NftGalleryCollection\", equalsButFunctions, fun props -> props.collection.collection.token_address)\r\n\r\n// NFT Gallery\r\n// ----------\r\ntype NftGalleryProps =\r\n    { nftAccount: string\r\n      hidden: Set<string * string>\r\n      mode: Mode\r\n      disabled: bool\r\n      onGoToCollection: int * int -> unit\r\n      profileNft: (string * string) option\r\n      onToggleVisible: string * string -> unit\r\n      onMakeProfile: NFT -> unit }\r\n\r\nlet NftGallery =\r\n    FunctionComponent.Of ((fun (props :NftGalleryProps) ->\r\n        // hooks\r\n        let nfts = Feliz.React.useDeferred (Server.getNFTs props.nftAccount, [||])\r\n        window?nfts <- nfts\r\n        let videoPlaying = Hooks.useState<(string * string * bool) option> None\r\n        let displayUntil, displayUntilUpdater = Feliz.React.useStateWithUpdater Config.nftPageSize\r\n        let displayFrom = Hooks.useState 0\r\n        let firstColRef, scrollToFirstCol = useScrollTo()\r\n        let nftDetails = Hooks.useState None\r\n        let onNftClick =\r\n            Feliz.React.useCallbackRef(fun (nft :NFTResult * NFTCollection) -> nftDetails.update(Some nft))\r\n        let onModalClose = Feliz.React.useCallbackRef(fun () -> nftDetails.update(None))\r\n        Hooks.useEffect(fun () ->\r\n            match nftDetails.current with\r\n            | None -> document.getElementsByTagName(\"html\").[0].classList.remove(\"has-modal\")\r\n            | Some _ -> document.getElementsByTagName(\"html\").[0].classList.add(\"has-modal\"))\r\n        // infinite scrolling event\r\n        Hooks.useEffectDisposable(fun () ->\r\n            let handleScroll =\r\n                fun _ ->\r\n                    if ((window.innerHeight + window.pageYOffset + 150.0) >= document.body.offsetHeight) then\r\n                        displayUntilUpdater (fun x -> x + Config.nftPageSize)\r\n            window.addEventListener(\"scroll\", handleScroll)\r\n            { new System.IDisposable with\r\n                member _.Dispose() = window.removeEventListener(\"scroll\", handleScroll) })\r\n        let goToCollection =\r\n            Feliz.React.useCallbackRef (fun (i :int) ->\r\n                displayFrom.update(i)\r\n                match nfts with\r\n                | Deferred.Resolved nfts ->\r\n                    let collections =\r\n                        nfts.results |> Array.mapi (fun i c -> i, c) |> Array.choose (fun (i, c) ->\r\n                            let n = c.nfts |> Array.filter (fun n -> not (props.hidden |> Set.contains (n.nft.token_address, n.nft.token_id))) |> Array.length\r\n                            if n > 0 then Some (c.collection, i, c.nfts.Length) else None)\r\n                    let firstColIndex = collections |> Array.tryHead |> Option.map (fun (_, i, _) -> i) |> Option.defaultValue 0\r\n                    displayUntilUpdater (fun _ -> nfts.results.[i].nfts.[0].index + Config.nftPageSize)\r\n                    if i > firstColIndex then\r\n                        scrollToFirstCol ()\r\n                    else\r\n                        // scroll to top\r\n                        window.scrollTo(0.0, 0.0)\r\n                    props.onGoToCollection (firstColIndex, i)\r\n                | _ -> ())\r\n        match nfts with\r\n        | Deferred.InProgress | Deferred.HasNotStartedYet -> bigLoading\r\n        | Deferred.Failed e -> errorView\r\n        | Deferred.Resolved nfts ->\r\n            let collections =\r\n                nfts.results |> Array.mapi (fun i c -> i, c) |> Array.choose (fun (i, c) ->\r\n                    let n = c.nfts |> Array.filter (fun n -> not (props.hidden |> Set.contains (n.nft.token_address, n.nft.token_id))) |> Array.length\r\n                    if n > 0 then Some (c.collection, i, c.nfts.Length) else None)\r\n            let firstColIndex = collections |> Array.tryHead |> Option.map (fun (_, i, _) -> i)\r\n            div [ClassName \"nft-gallery\"]\r\n                [match nftDetails.current with\r\n                 | None -> ()\r\n                 | Some (nft, collection) ->\r\n                    yield NftDetailsModal { singlePageMode = false; nft = nft.nft; collection = collection; likeCount = nft.likeCount; onClose = onModalClose }\r\n                 match firstColIndex, props.mode with\r\n                 | Some firstColIndex, _ when displayFrom.current <= firstColIndex ->\r\n                    yield section (mdiIcon \"dots-grid\") \"NFT Collections\"\r\n                    yield NftCollectionBadges { collections = collections; goToCollection = goToCollection }\r\n                    yield section (mdiIcon \"dots-grid\") \"NFT Gallery\"\r\n                 | Some _, _ ->\r\n                    yield section (button [ClassName \"button mode-aware-border mode-aware-button\"; OnClick (fun _ -> goToCollection 0)] [mdiIcon \"arrow-up-thick\"; str \"Back to Top\"]) \"\"\r\n                 | None, View ->\r\n                    ()\r\n                 | None, Edit ->\r\n                    yield\r\n                        // no nfts prompt\r\n                        div [ClassName \"no-nfts\"]\r\n                            [p [ClassName \"mode-aware-text\"] [mdiIcon \"image-frame\"]\r\n                             p [] [str \"Your NFT gallery is currently empty.\"]\r\n                             p [] [str \"Transfer some to your account and they will automatically display below. *\"]\r\n                             p [ClassName \"small-text mode-aware-text\"] [str \"* If they are contained in our whitelist.\"]]\r\n                 yield div [ClassName \"gallery\"] \r\n                    (nfts.results\r\n                    |> Array.mapi (fun i c ->\r\n                        let displayCount = c.nfts |> Array.filter (fun n -> n.index < displayUntil && not (props.hidden |> Set.contains (n.nft.token_address, n.nft.token_id))) |> Array.length\r\n                        if i >= displayFrom.current && displayCount > 0 then\r\n                            NftGalleryCollection\r\n                                { collection = c\r\n                                  scrollToRef = if i = displayFrom.current then Some firstColRef else None\r\n                                  displayUntil = displayUntil\r\n                                  onToggleVisible = props.onToggleVisible\r\n                                  profileNft = props.profileNft\r\n                                  disabled = props.disabled\r\n                                  onNftClick = onNftClick\r\n                                  onMakeProfile =\r\n                                    fun (a, i) ->\r\n                                        let allnfts = nfts.results |> Array.collect (fun n -> n.nfts)\r\n                                        let nft = allnfts |> Array.find (fun n -> n.nft.token_address = a && n.nft.token_id = i)\r\n                                        props.onMakeProfile nft.nft\r\n                                  mode = props.mode\r\n                                  hidden = props.hidden\r\n                                  videoPlaying = videoPlaying.current\r\n                                  onEnded = fun (a, i) -> match videoPlaying.current with | Some (a1, i1, _) when a = a1 && i = i1 -> videoPlaying.update None | _ -> ()\r\n                                  onPlay = fun (a, i) -> match videoPlaying.current with | Some (a1, i1, _) when a = a1 && i = i1 -> videoPlaying.update (Some (a, i, true)) | _ -> ()\r\n                                  playVideo = fun (a, i) -> videoPlaying.update (Some (a, i, false)) }\r\n                        else ofOption None) |> Array.toList)]\r\n    ), \"NftGallery\", equalsButFunctions)\r\n\r\ntype EditProfileProps =\r\n    { treeAccount: string\r\n      ens: string option\r\n      url: string option\r\n      dispatch: Msg -> unit\r\n      txDispatch: TransactionMsg -> unit\r\n      txResult: DappTxResult<TransactionMsg> option }\r\n\r\nlet EditProfile =\r\n    FunctionComponent.Of ((fun (props :EditProfileProps) ->\r\n        let displayingFirstCol = Hooks.useState true\r\n        let web3 = useWeb3React()\r\n        let tree = Feliz.React.useDeferred (Server.getTreeAndProfileNft props.treeAccount, [||])\r\n        let accountProfileInfo =\r\n            Feliz.React.useDeferred(\r\n                async {\r\n                    if web3.active then\r\n                        let! profileInfo = Server.getProfileInfo web3.account.Value\r\n                        return (Some profileInfo)\r\n                    else\r\n                        return None\r\n                }, [| web3.active |])\r\n        let accountProfileInfo =\r\n            match accountProfileInfo with\r\n            | Deferred.Resolved (Some (Some profileInfo)) -> Some profileInfo\r\n            | _ -> None \r\n        let name = Hooks.useState None\r\n        let bio = Hooks.useState None\r\n        let links, linksUpdater = Feliz.React.useStateWithUpdater None\r\n        let colors = Hooks.useState None\r\n        let darkMode = Hooks.useState None\r\n        let hiddenNfts, hiddenNftsUpdater = Feliz.React.useStateWithUpdater None\r\n        let profileNftState = Hooks.useState None\r\n        // set dark mode class\r\n        Hooks.useEffect (fun () ->\r\n            match darkMode.current with\r\n            | Some true ->\r\n                document.getElementsByTagName(\"body\").[0].classList?add(\"dark-mode\")\r\n            | Some false ->\r\n                document.getElementsByTagName(\"body\").[0].classList?remove(\"dark-mode\")\r\n            | None ->\r\n                match tree with\r\n                | Deferred.Resolved ({ darkMode = true }, _) ->\r\n                    document.getElementsByTagName(\"body\").[0].classList?add(\"dark-mode\")\r\n                | Deferred.Resolved ({ darkMode = false }, _) ->\r\n                    document.getElementsByTagName(\"body\").[0].classList?remove(\"dark-mode\")\r\n                | _ -> ())\r\n        let editState =\r\n            match tree with\r\n            | Deferred.Resolved (tree, profileNft) ->\r\n                { name = match name.current with | None -> tree.name | Some name -> name\r\n                  bio = match bio.current with | None -> tree.bio | Some bio -> bio\r\n                  links = match links with | None -> tree.links |> Array.mapi (fun i l -> { name = l.name; url = l.url; id = System.Guid.NewGuid().ToString(); index = i; isNew = false }) | Some links -> links\r\n                  colors = match colors.current with | None -> tree.colors | Some colors -> colors\r\n                  darkMode = match darkMode.current with | None -> tree.darkMode | Some darkMode -> darkMode\r\n                  profileNft = match profileNftState.current with | None -> profileNft | Some profileNft -> profileNft\r\n                  hidden = match hiddenNfts with | None -> tree.nfts |> Map.toSeq |> Seq.map fst |> Set.ofSeq | Some hidden -> hidden } |> Some\r\n            | _ -> None\r\n        let linksUpdater update =\r\n            linksUpdater (fun oldLinks ->\r\n                match tree with\r\n                | Deferred.Resolved (tree, _) ->\r\n                    let oldLinks = match oldLinks with | None -> tree.links |> Array.mapi (fun i l -> { name = l.name; url = l.url; id = System.Guid.NewGuid().ToString(); index = i; isNew = false }) | Some links -> links\r\n                    Some (update oldLinks)\r\n                | _ -> oldLinks)\r\n        let linkAccept (id, name, url) =\r\n            linksUpdater (fun oldLinks -> oldLinks |> Array.map (fun l -> if l.id = id then { l with name = name; url = url; isNew = false } else l))\r\n        let linkUp id =\r\n            linksUpdater (fun oldLinks ->\r\n                let index = oldLinks |> Array.findIndex (fun l -> l.id = id)\r\n                let a = oldLinks.[index - 1]\r\n                let b = oldLinks.[index]\r\n                let newLinks = oldLinks |> Array.mapi (fun i l ->\r\n                    match i with\r\n                    | _ when i = index - 1 -> { b with index = index - 1 }\r\n                    | _ when i = index -> { a with index = index }\r\n                    | _ -> l)\r\n                newLinks)\r\n        let linkDown id =\r\n            linksUpdater (fun oldLinks ->\r\n                let index = oldLinks |> Array.findIndex (fun l -> l.id = id)\r\n                let a = oldLinks.[index + 1]\r\n                let b = oldLinks.[index]\r\n                let newLinks = oldLinks |> Array.mapi (fun i l ->\r\n                    match i with\r\n                    | _ when i = index + 1 -> { b with index = index + 1 }\r\n                    | _ when i = index -> { a with index = index }\r\n                    | _ -> l)\r\n                newLinks)\r\n        let linkDelete id = linksUpdater (fun oldLinks -> oldLinks |> Array.filter (fun l -> l.id <> id))\r\n        let nameChange value =\r\n            name.update (Some value)\r\n        let bioChange value = bio.update (Some value)\r\n        let saveDisabled =\r\n            match name.current, bio.current, links, colors.current, darkMode.current, profileNftState.current with\r\n            | None, None, None, None, None, None -> true\r\n            | _ -> false\r\n        let linkNew () =\r\n            linksUpdater (fun oldLinks -> Array.append oldLinks [| { name = \"\"; url = \"\"; isNew = true; index = oldLinks.Length; id = System.Guid.NewGuid().ToString() } |])\r\n        let selectColor cs = colors.update (Some cs)\r\n        let selectDarkMode dm =\r\n            darkMode.update (Some dm)\r\n        let isLight, isDark =\r\n            match editState with\r\n            | Some state ->\r\n                state.colors |> ColorUtils.isLight, state.colors |> ColorUtils.isDark\r\n            | _ -> false, false\r\n        let toggleVisible nft =\r\n            match tree with\r\n            | Deferred.Resolved (tree, _) ->\r\n                hiddenNftsUpdater (fun oldHidden ->\r\n                    let set =\r\n                        match oldHidden with\r\n                        | None -> tree.nfts |> Map.toSeq |> Seq.map fst |> Set.ofSeq\r\n                        | Some set -> set\r\n                    Some (if set |> Set.contains nft then set |> Set.remove nft else set |> Set.add nft))\r\n            | _ -> ()\r\n        let makeProfile nft = profileNftState.update (Some (Some nft))\r\n        // web3 TXs\r\n        let save () =\r\n            match editState with\r\n            | Some state ->\r\n                let nfts =\r\n                    match tree with\r\n                    | Deferred.Resolved(tree, _ ) ->\r\n                        match hiddenNfts with\r\n                        | None -> tree.nfts\r\n                        | Some hidden -> hidden |> Set.toSeq |> Seq.map (fun n -> n, true) |> Map.ofSeq\r\n                let tree =\r\n                    { profileNft = state.profileNft |> Option.map (fun n -> n.token_address, n.token_id)\r\n                      name = state.name\r\n                      bio = state.bio\r\n                      links = state.links |> Array.map (fun l -> { name = l.name; url = l.url })\r\n                      nfts = nfts\r\n                      colors = state.colors\r\n                      darkMode = state.darkMode }\r\n                let text = TreeData.toMarkdown tree\r\n                props.txDispatch (UpdateProfile text)\r\n            | _ -> ()\r\n        let saveCallback = Feliz.React.useCallbackRef(save)\r\n        div [ClassName \"profile edit has-bar\"] \r\n            [ofOption (props.txResult |> Option.map (fun txResult -> DialogModal { active = true; txResult = txResult; accountProfileInfo = accountProfileInfo; account = props.treeAccount; ens = props.ens; url = props.url }))\r\n             EditBar { saveDisabled = saveDisabled; treeAccount = props.treeAccount; treeChainId = 42; onSave = saveCallback }\r\n             LinkTreeEdit\r\n                  { treeAccount = props.treeAccount\r\n                    hide = not displayingFirstCol.current\r\n                    isColorLight = isLight\r\n                    isColorDark = isDark\r\n                    disabled = web3.account <> (Some props.treeAccount)\r\n                    ens = props.ens\r\n                    state = editState\r\n                    onLinkAccept = linkAccept\r\n                    onLinkUp = linkUp\r\n                    onLinkDown = linkDown\r\n                    onLinkDelete = linkDelete\r\n                    onNameChange = nameChange\r\n                    onBioChange = bioChange\r\n                    onLinkNew = linkNew\r\n                    onSelectColor = selectColor\r\n                    onSelectDarkMode = selectDarkMode }\r\n             match editState with\r\n             | Some state ->\r\n                   NftGallery\r\n                    { nftAccount = props.treeAccount\r\n                      onGoToCollection = fun (f, i) -> displayingFirstCol.update ((f = i))\r\n                      hidden = state.hidden\r\n                      profileNft = state.profileNft |> Option.map (fun n -> n.token_address, n.token_id)\r\n                      mode = Edit\r\n                      disabled = web3.account <> (Some props.treeAccount)\r\n                      onToggleVisible = toggleVisible\r\n                      onMakeProfile = makeProfile }\r\n             | _ -> ofOption None]\r\n    ), \"EditProfile\", equalsButFunctions)\r\n\r\n// View Profile\r\n// -------\r\ntype ViewProfileProps = { treeAccount: string; ens: string option }\r\n\r\nlet ViewProfile =\r\n    FunctionComponent.Of ((fun (props :ViewProfileProps) ->\r\n        // hooks\r\n        let tree = Feliz.React.useDeferred (Server.getTreeAndProfileNft props.treeAccount, [| |])\r\n        let displayingFirstCol = Hooks.useState true\r\n        Hooks.useEffect (fun () ->\r\n            match tree with\r\n            | Deferred.Resolved ({ darkMode = true }, _) ->\r\n                document.getElementsByTagName(\"body\").[0].classList?add(\"dark-mode\")\r\n            | Deferred.Resolved ({ darkMode = false }, _) ->\r\n                document.getElementsByTagName(\"body\").[0].classList?remove(\"dark-mode\")\r\n            | _ -> ())\r\n        match tree with\r\n        | Deferred.Resolved (tree, profileNft) ->\r\n            let hidden = tree.nfts |> Map.toArray |> Array.choose (fun (n, h) -> if h then Some n else None) |> Set.ofArray\r\n            div [ClassName \"profile view\"]\r\n                [LinkTreeView { treeAccount = props.treeAccount; ens = props.ens; tree = tree; profileNft = profileNft; hide = not displayingFirstCol.current }\r\n                 NftGallery { disabled = false; nftAccount = props.treeAccount; hidden = hidden; mode = View; onGoToCollection = (fun (f, i) -> displayingFirstCol.update((f = i))); onToggleVisible = (fun _ -> ()); onMakeProfile = (fun _ -> ()); profileNft = profileNft |> Option.map (fun nft -> nft.token_id, nft.token_id) }]\r\n        | _ -> bigLoading\r\n    ), \"ViewProfile\", equalsButFunctions)\r\n\r\nlet root (model :Model) (txResult :DappTxResult<TransactionMsg> option) dispatch txDispatch =\r\n    match model.address, model.ens, model.url with\r\n    | Some (Some address), Some ens, Some url ->\r\n        let content =\r\n            match model.mode with\r\n            | View ->\r\n                ViewProfile { treeAccount = address; ens = ens; }\r\n            | Edit ->\r\n                EditProfile { treeAccount = address; ens = ens; url = url; dispatch = dispatch; txDispatch = txDispatch; txResult = txResult }\r\n        content\r\n    | Some (None), _, _ ->\r\n        div [ClassName \"not-found\"] [\r\n            h1 [] [str \"Page Not Found\"]\r\n            p [] [str \"Sorry, this page is not available\"]]\r\n    | _ -> bigLoading\r\n",null,null,null,"(** UrlParser\n------\nThis port of the Elm library helps you turn URLs into nicely structured data.\nIt is designed to be used with `Navigation` module to help folks create\nsingle-page applications (SPAs) where you manage browser navigation yourself.\n*)\n\nmodule Elmish.UrlParser\n\n\n(**\n#### Types\n*)\n\ntype State<'v> =\n  { visited : string list\n    unvisited : string list\n    args : Map<string,string>\n    value : 'v }\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule internal State =\n  let mkState visited unvisited args value =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = value }\n\n  let map f { visited = visited; unvisited = unvisited; args = args; value = value } =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = f value }\n\n\n/// Turn URLs like `/blog/42/cat-herding-techniques` into nice data.\ntype Parser<'a,'b> = State<'a> -> State<'b> list\n\n\n(**\n#### Parse segments\nCreate a custom path segment parser. You can use it to define something like “only CSS files” like this:\n```\n    let css =\n      custom \"CSS_FILE\" <| fun segment ->\n        if String.EndsWith \".css\" then\n          Ok segment\n        else\n          Error \"Does not end with .css\"\n```\n*)\nlet custom tipe (stringToSomething: string->Result<_,_>) : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            match stringToSomething next with\n            | Ok nextValue ->\n                [ State.mkState (next :: visited) rest args (value nextValue) ]\n\n            | Error msg ->\n                []\n    inner\n\n\n(** Parse a segment of the path as a `string`.\n```\n    parse str location\n```\n<pre>\n    /alice/  ==>  Some \"alice\"\n    /bob     ==>  Some \"bob\"\n    /42/     ==>  Some \"42\"\n</pre>\n*)\nlet str state =\n    custom \"string\" Ok state\n\n\n(** Parse a segment of the path as an `int`.\n```\n    parse i32 location\n```\n<pre>\n    /alice/  ==>  None\n    /bob     ==>  None\n    /42/     ==>  Some 42\n</pre>\n*)\nlet i32 state =\n    custom \"i32\" (System.Int32.TryParse >> function true, value -> Ok value | _ -> Error \"Can't parse int\" ) state\n\n\n(** Parse a segment of the path if it matches a given string.\n```\n    s \"blog\"  // can parse /blog/\n              // but not /glob/ or /42/ or anything else\n```\n*)\nlet s str : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            if next = str then\n                [ State.mkState (next :: visited) rest args value ]\n            else\n                []\n    inner\n\n\n\n(**\n#### Combining parsers\nParse a path with multiple segments.\n\n```\n    parse (s \"blog\" </> i32) location\n```\n<pre>\n    /blog/35/  ==>  Some 35\n    /blog/42   ==>  Some 42\n    /blog/     ==>  None\n    /42/       ==>  None\n</pre>\n```\n    parse (s \"search\" </> str) location\n```\n<pre>\n    /search/cats/  ==>  Some \"cats\"\n    /search/frog   ==>  Some \"frog\"\n    /search/       ==>  None\n    /cats/         ==>  None\n</pre>\n*)\nlet inline (</>) (parseBefore: Parser<_,_>) (parseAfter: Parser<_,_>) =\n  fun state ->\n    List.collect parseAfter (parseBefore state)\n\n\n(** Transform a path parser.\n```\n    type Comment = { author : string; id : int }\n    rawComment =\n      s \"user\" </> str </> s \"comments\" </> i32\n    comment =\n      map (fun a id -> { author = a; id = id }) rawComment\n    parse comment location\n```\n<pre>\n    /user/bob/comments/42  ==>  Some { author = \"bob\"; id = 42 }\n    /user/tom/comments/35  ==>  Some { author = \"tom\"; id = 35 }\n    /user/sam/             ==>  None\n</pre>\n*)\nlet map (subValue: 'a) (parse: Parser<'a,'b>) : Parser<'b->'c,'c> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        List.map (State.map value)\n        <| parse { visited = visited\n                   unvisited = unvisited\n                   args = args\n                   value = subValue }\n    inner\n\n\n\n(** Try a bunch of different path parsers.\n```\n    type Route\n      = Search of string\n      | Blog of int\n      | User of string\n      | Comment of string*int\n    route =\n      oneOf\n        [ map Search  (s \"search\" </> str)\n          map Blog    (s \"blog\" </> i32)\n          map User    (s \"user\" </> str)\n          map (fun u c -> Comment (u,c)) (s \"user\" </> str </> \"comments\" </> i32) ]\n    parse route location\n```\n<pre>\n    /search/cats           ==>  Some (Search \"cats\")\n    /search/               ==>  None\n    /blog/42               ==>  Some (Blog 42)\n    /blog/cats             ==>  None\n    /user/sam/             ==>  Some (User \"sam\")\n    /user/bob/comments/42  ==>  Some (Comment \"bob\" 42)\n    /user/tom/comments/35  ==>  Some (Comment \"tom\" 35)\n    /user/                 ==>  None\n</pre>\n*)\nlet oneOf parsers state =\n    List.collect (fun parser -> parser state) parsers\n\n\n(** A parser that does not consume any path segments.\n```\n    type BlogRoute = Overview | Post of int\n    blogRoute =\n      oneOf\n        [ map Overview top\n          map Post  (s \"post\" </> i32) ]\n    parse (s \"blog\" </> blogRoute) location\n```\n<pre>\n    /blog/         ==>  Some Overview\n    /blog/post/42  ==>  Some (Post 42)\n</pre>\n*)\nlet top state=\n    [state]\n\n\n\n(**\n#### Query parameters\nTurn query parameters like `?name=tom&age=42` into nice data.\n\n*)\n\ntype QueryParser<'a,'b> = State<'a> -> State<'b> list\n\n\n(** Parse some query parameters.\n```\n    type Route = BlogList (Option string) | BlogPost Int\n    route =\n      oneOf\n        [ map BlogList (s \"blog\" <?> stringParam \"search\")\n          map BlogPost (s \"blog\" </> i32) ]\n    parse route location\n```\n<pre>\n    /blog/              ==>  Some (BlogList None)\n    /blog/?search=cats  ==>  Some (BlogList (Some \"cats\"))\n    /blog/42            ==>  Some (BlogPost 42)\n</pre>\n*)\nlet inline (<?>) (parser: Parser<_,_>) (queryParser:QueryParser<_,_>) : Parser<_,_> =\n    fun state ->\n        List.collect queryParser (parser state)\n\n(** Create a custom query parser. You could create parsers like these:\n```\n    val jsonParam : string -> Decoder a -> QueryParser (Option a -> b) b\n    val enumParam : string -> Map<string,a> -> QueryParser (Option a -> b) b\n```\n*)\nlet customParam (key: string) (func: string option -> _) : QueryParser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        [ State.mkState visited unvisited args (value (func (Map.tryFind key args))) ]\n    inner\n\n\n(** Parse a query parameter as a `string`.\n```\n    parse (s \"blog\" <?> stringParam \"search\") location\n```\n<pre>\n    /blog/              ==>  Some (Overview None)\n    /blog/?search=cats  ==>  Some (Overview (Some \"cats\"))\n</pre>\n*)\nlet stringParam name =\n    customParam name id\n\nlet internal intParamHelp =\n    Option.bind\n        (fun (value: string) ->\n            match System.Int32.TryParse value with\n            | (true,x) -> Some x\n            | _ -> None)\n\n(** Parse a query parameter as an `int`. Option you want to show paginated\nsearch results. You could have a `start` query parameter to say which result\nshould appear first.\n```\n    parse (s \"results\" <?> intParam \"start\") location\n```\n<pre>\n    /results           ==>  Some None\n    /results?start=10  ==>  Some (Some 10)\n</pre>\n*)\nlet intParam name =\n    customParam name intParamHelp\n\n\n// PARSER HELPERS\n\nlet rec internal parseHelp states =\n    match states with\n    | [] ->\n        None\n    | state :: rest ->\n        match state.unvisited with\n        | [] ->\n            Some state.value\n        | [\"\"] ->\n            Some state.value\n        | _ ->\n            parseHelp rest\n\nlet internal splitUrl (url: string) =\n    match List.ofArray <| url.Split([|'/'|]) with\n    | \"\" :: segments ->\n        segments\n    | segments ->\n        segments\n\n/// parse a given part of the location\nlet parse (parser: Parser<'a->'a,'a>) url args =\n    { visited = []\n      unvisited = splitUrl url\n      args = args\n      value = id }\n    |> parser\n    |> parseHelp\n\nopen Fable.Core\n\nlet internal toKeyValuePair (segment: string) =\n    match segment.Split('=') with\n    | [| key; value |] ->\n        Option.tuple (Option.ofFunc JS.decodeURIComponent key) (Option.ofFunc JS.decodeURIComponent value)\n    | _ -> None\n\n\nlet internal parseParams (querystring: string) =\n    if querystring.Length > 1 then\n        querystring.Substring(1).Split('&')\n        |> Seq.map toKeyValuePair\n        |> Seq.choose id\n        |> Map.ofSeq\n    else Map.empty\n\nopen Browser.Types\n\n(**\n#### Parsers\nParse based on `location.pathname` and `location.search`. This parser\nignores the hash entirely.\n*)\nlet parsePath (parser: Parser<_,_>) (location: Location) =\n    parse parser location.pathname (parseParams location.search)\n\n(** Parse based on `location.hash`. This parser ignores the normal\npath entirely.\n*)\nlet parseHash (parser: Parser<_,_>) (location: Location) =\n    let hash, search =\n        let hash =\n            if location.hash.Length > 1 then location.hash.Substring 1\n            else \"\"\n        if hash.Contains(\"?\") then\n            let h = hash.Substring(0, hash.IndexOf(\"?\"))\n            h, hash.Substring(h.Length)\n        else\n            hash, \"?\"\n\n    parse parser hash (parseParams search)\n","module rec Fable.React.Props\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser.Types\r\n\r\n#if !FABLE_COMPILER\r\nopen FSharp.Reflection\r\n#endif\r\n\r\n/// Helper to convert Fable StringEnum to string, compatible with .NET\r\nlet stringEnum (case: obj): string =\r\n#if FABLE_COMPILER\r\n    string case\r\n#else\r\n    let (caseInfo, _args) = FSharpValue.GetUnionFields(case, case.GetType())\r\n    caseInfo.GetCustomAttributes()\r\n    |> Seq.tryPick (function\r\n                    | :? CompiledNameAttribute as att -> Some att.CompiledName\r\n                    | _ -> None)\r\n    |> Option.defaultWith (fun () ->\r\n        let name = caseInfo.Name\r\n        Char.ToLower(name.[0]).ToString() + name.Substring(1))\r\n#endif\r\n\r\ntype IProp =\r\n    interface end\r\n\r\ntype IHTMLProp =\r\n    inherit IProp\r\n\r\ntype IFragmentProp =\r\n    inherit IProp\r\n\r\ntype FragmentProp =\r\n    | Key of string\r\n    interface IFragmentProp\r\n\r\ntype Prop =\r\n    | Key of string\r\n    | Ref of (Element->unit)\r\n    /// To be used in combination with `useRef` hook\r\n    | [<System.Obsolete(\"Use RefValue\")>] [<CompiledName(\"ref\")>] RefHook of IRefHook<Element option>\r\n    | [<CompiledName(\"ref\")>] RefValue of IRefValue<Element option>\r\n    interface IHTMLProp\r\n\r\ntype DangerousHtml = {\r\n    __html: string\r\n}\r\n\r\ntype DOMAttr =\r\n    | DangerouslySetInnerHTML of DangerousHtml\r\n    | OnCut of (ClipboardEvent -> unit)\r\n    | OnPaste of (ClipboardEvent -> unit)\r\n    | OnCompositionEnd of (CompositionEvent -> unit)\r\n    | OnCompositionStart of (CompositionEvent -> unit)\r\n    | OnCopy of (ClipboardEvent -> unit)\r\n    | OnCompositionUpdate of (CompositionEvent -> unit)\r\n    | OnFocus of (FocusEvent -> unit)\r\n    | OnBlur of (FocusEvent -> unit)\r\n    | OnChange of (Event -> unit)\r\n    | OnInput of (Event -> unit)\r\n    | OnSubmit of (Event -> unit)\r\n    | OnReset of (Event -> unit)\r\n    | OnLoad of (Event -> unit)\r\n    | OnError of (Event -> unit)\r\n    | OnKeyDown of (KeyboardEvent -> unit)\r\n    | OnKeyPress of (KeyboardEvent -> unit)\r\n    | OnKeyUp of (KeyboardEvent -> unit)\r\n    | OnAbort of (Event -> unit)\r\n    | OnCanPlay of (Event -> unit)\r\n    | OnCanPlayThrough of (Event -> unit)\r\n    | OnDurationChange of (Event -> unit)\r\n    | OnEmptied of (Event -> unit)\r\n    | OnEncrypted of (Event -> unit)\r\n    | OnEnded of (Event -> unit)\r\n    | OnLoadedData of (Event -> unit)\r\n    | OnLoadedMetadata of (Event -> unit)\r\n    | OnLoadStart of (Event -> unit)\r\n    | OnPause of (Event -> unit)\r\n    | OnPlay of (Event -> unit)\r\n    | OnPlaying of (Event -> unit)\r\n    | OnProgress of (Event -> unit)\r\n    | OnRateChange of (Event -> unit)\r\n    | OnSeeked of (Event -> unit)\r\n    | OnSeeking of (Event -> unit)\r\n    | OnStalled of (Event -> unit)\r\n    | OnSuspend of (Event -> unit)\r\n    | OnTimeUpdate of (Event -> unit)\r\n    | OnVolumeChange of (Event -> unit)\r\n    | OnWaiting of (Event -> unit)\r\n    | OnClick of (MouseEvent -> unit)\r\n    | OnContextMenu of (MouseEvent -> unit)\r\n    | OnDoubleClick of (MouseEvent -> unit)\r\n    | OnDrag of (DragEvent -> unit)\r\n    | OnDragEnd of (DragEvent -> unit)\r\n    | OnDragEnter of (DragEvent -> unit)\r\n    | OnDragExit of (DragEvent -> unit)\r\n    | OnDragLeave of (DragEvent -> unit)\r\n    | OnDragOver of (DragEvent -> unit)\r\n    | OnDragStart of (DragEvent -> unit)\r\n    | OnDrop of (DragEvent -> unit)\r\n    | OnMouseDown of (MouseEvent -> unit)\r\n    | OnMouseEnter of (MouseEvent -> unit)\r\n    | OnMouseLeave of (MouseEvent -> unit)\r\n    | OnMouseMove of (MouseEvent -> unit)\r\n    | OnMouseOut of (MouseEvent -> unit)\r\n    | OnMouseOver of (MouseEvent -> unit)\r\n    | OnMouseUp of (MouseEvent -> unit)\r\n    | OnSelect of (Event -> unit)\r\n    | OnTouchCancel of (TouchEvent -> unit)\r\n    | OnTouchEnd of (TouchEvent -> unit)\r\n    | OnTouchMove of (TouchEvent -> unit)\r\n    | OnTouchStart of (TouchEvent -> unit)\r\n    | OnScroll of (UIEvent -> unit)\r\n    | OnWheel of (WheelEvent -> unit)\r\n    | OnAnimationStart of (AnimationEvent -> unit)\r\n    | OnAnimationEnd of (AnimationEvent -> unit)\r\n    | OnAnimationIteration of (AnimationEvent -> unit)\r\n    | OnTransitionEnd of (TransitionEvent -> unit)\r\n    | [<Erase>] Custom of string * obj\r\n    interface IHTMLProp\r\n\r\ntype SVGAttr =\r\n    | ClipPath of string\r\n    | Cx of obj\r\n    | Cy of obj\r\n    | D of string\r\n    | Dx of obj\r\n    | Dy of obj\r\n    | Fill of string\r\n    | FillOpacity of obj\r\n    | FontFamily of string\r\n    | FontSize of obj\r\n    | Fx of obj\r\n    | Fy of obj\r\n    | GradientTransform of string\r\n    | GradientUnits of string\r\n    | Height of obj\r\n    | MarkerEnd of string\r\n    | MarkerMid of string\r\n    | MarkerStart of string\r\n    | Offset of obj\r\n    | Opacity of obj\r\n    | PatternContentUnits of string\r\n    | PatternUnits of string\r\n    | Points of string\r\n    | PreserveAspectRatio of string\r\n    | R of obj\r\n    | Rx of obj\r\n    | Ry of obj\r\n    | SpreadMethod of string\r\n    | StopColor of string\r\n    | StopOpacity of obj\r\n    | Stroke of string\r\n    | StrokeDasharray of string\r\n    | StrokeDashoffset of string\r\n    | StrokeLinecap of string\r\n    | StrokeMiterlimit of string\r\n    | StrokeOpacity of obj\r\n    | StrokeWidth of obj\r\n    | TextAnchor of string\r\n    | Transform of string\r\n    | Version of string\r\n    | ViewBox of string\r\n    | Width of obj\r\n    | X1 of obj\r\n    | X2 of obj\r\n    | X of obj\r\n    | XlinkActuate of string\r\n    | XlinkArcrole of string\r\n    | XlinkHref of string\r\n    | XlinkRole of string\r\n    | XlinkShow of string\r\n    | XlinkTitle of string\r\n    | XlinkType of string\r\n    | XmlBase of string\r\n    | XmlLang of string\r\n    | XmlSpace of string\r\n    | Y1 of obj\r\n    | Y2 of obj\r\n    | Y of obj\r\n    /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\r\n    | [<Erase>] Custom of string * obj\r\n    interface IProp\r\n\r\ntype HTMLAttr =\r\n    | DefaultChecked of bool\r\n    | DefaultValue of obj\r\n    | Accept of string\r\n    | AcceptCharset of string\r\n    | AccessKey of string\r\n    | Action of string\r\n    | AllowFullScreen of bool\r\n    | AllowTransparency of bool\r\n    | Alt of string\r\n    | [<CompiledName(\"aria-atomic\")>] AriaAtomic of bool\r\n    | [<CompiledName(\"aria-busy\")>] AriaBusy of bool\r\n    | [<CompiledName(\"aria-checked\")>] AriaChecked of bool\r\n    | [<CompiledName(\"aria-colcount\")>] AriaColcount of int\r\n    | [<CompiledName(\"aria-colindex\")>] AriaColindex of int\r\n    | [<CompiledName(\"aria-colspan\")>] AriaColspan of int\r\n    | [<CompiledName(\"aria-controls\")>] AriaControls of string\r\n    | [<CompiledName(\"aria-current\")>] AriaCurrent of string\r\n    | [<CompiledName(\"aria-describedby\")>] AriaDescribedBy of string\r\n    | [<CompiledName(\"aria-details\")>] AriaDetails of string\r\n    | [<CompiledName(\"aria-disabled\")>] AriaDisabled of bool\r\n    | [<CompiledName(\"aria-errormessage\")>] AriaErrormessage of string\r\n    | [<CompiledName(\"aria-expanded\")>] AriaExpanded of bool\r\n    | [<CompiledName(\"aria-flowto\")>] AriaFlowto of string\r\n    | [<CompiledName(\"aria-haspopup\")>] AriaHasPopup of bool\r\n    | [<CompiledName(\"aria-hidden\")>] AriaHidden of bool\r\n    | [<CompiledName(\"aria-invalid\")>] AriaInvalid of string\r\n    | [<CompiledName(\"aria-keyshortcuts\")>] AriaKeyshortcuts of string\r\n    | [<CompiledName(\"aria-label\")>] AriaLabel of string\r\n    | [<CompiledName(\"aria-labelledby\")>] AriaLabelledby of string\r\n    | [<CompiledName(\"aria-level\")>] AriaLevel of int\r\n    | [<CompiledName(\"aria-live\")>] AriaLive of string\r\n    | [<CompiledName(\"aria-modal\")>] AriaModal of bool\r\n    | [<CompiledName(\"aria-multiline\")>] AriaMultiline of bool\r\n    | [<CompiledName(\"aria-multiselectable\")>] AriaMultiselectable of bool\r\n    | [<CompiledName(\"aria-orientation\")>] AriaOrientation of string\r\n    | [<CompiledName(\"aria-owns\")>] AriaOwns of string\r\n    | [<CompiledName(\"aria-placeholder\")>] AriaPlaceholder of string\r\n    | [<CompiledName(\"aria-posinset\")>] AriaPosinset of int\r\n    | [<CompiledName(\"aria-pressed\")>] AriaPressed of bool\r\n    | [<CompiledName(\"aria-readonly\")>] AriaReadonly of bool\r\n    | [<CompiledName(\"aria-relevant\")>] AriaRelevant of string\r\n    | [<CompiledName(\"aria-required\")>] AriaRequired of bool\r\n    | [<CompiledName(\"aria-roledescription\")>] AriaRoledescription of string\r\n    | [<CompiledName(\"aria-rowcount\")>] AriaRowcount of int\r\n    | [<CompiledName(\"aria-rowindex\")>] AriaRowindex of int\r\n    | [<CompiledName(\"aria-rowspan\")>] AriaRowspan of int\r\n    | [<CompiledName(\"aria-selected\")>] AriaSelected of bool\r\n    | [<CompiledName(\"aria-setsize\")>] AriaSetsize of int\r\n    | [<CompiledName(\"aria-sort\")>] AriaSort of string\r\n    | [<CompiledName(\"aria-valuemax\")>] AriaValuemax of float\r\n    | [<CompiledName(\"aria-valuemin\")>] AriaValuemin of float\r\n    | [<CompiledName(\"aria-valuenow\")>] AriaValuenow of float\r\n    | [<CompiledName(\"aria-valuetext\")>] AriaValuetext of string\r\n    | Async of bool\r\n    | AutoComplete of string\r\n    | AutoFocus of bool\r\n    | AutoPlay of bool\r\n    | Capture of bool\r\n    | CellPadding of obj\r\n    | CellSpacing of obj\r\n    | CharSet of string\r\n    | Challenge of string\r\n    | Checked of bool\r\n    | ClassID of string\r\n    | ClassName of string\r\n    /// Alias of ClassName\r\n    | [<CompiledName(\"className\")>] Class of string\r\n    | Cols of int\r\n    | ColSpan of int\r\n    | Content of string\r\n    | ContentEditable of bool\r\n    | ContextMenu of string\r\n    | Controls of bool\r\n    | Coords of string\r\n    | CrossOrigin of string\r\n    // | Data of string\r\n    | [<CompiledName(\"data-toggle\")>] DataToggle of string\r\n    | DateTime of string\r\n    | Default of bool\r\n    | Defer of bool\r\n    | Dir of string\r\n    | Disabled of bool\r\n    | Download of obj\r\n    | Draggable of bool\r\n    | EncType of string\r\n    | Form of string\r\n    | FormAction of string\r\n    | FormEncType of string\r\n    | FormMethod of string\r\n    | FormNoValidate of bool\r\n    | FormTarget of string\r\n    | FrameBorder of obj\r\n    | Headers of string\r\n    | Height of obj\r\n    | Hidden of bool\r\n    | High of float\r\n    | Href of string\r\n    | HrefLang of string\r\n    | HtmlFor of string\r\n    | HttpEquiv of string\r\n    | Icon of string\r\n    | Id of string\r\n    | InputMode of string\r\n    | Integrity of string\r\n    | Is of string\r\n    | KeyParams of string\r\n    | KeyType of string\r\n    | Kind of string\r\n    | Label of string\r\n    | Lang of string\r\n    | List of string\r\n    | Loop of bool\r\n    | Low of float\r\n    | Manifest of string\r\n    | MarginHeight of float\r\n    | MarginWidth of float\r\n    | Max of obj\r\n    | MaxLength of float\r\n    | Media of string\r\n    | MediaGroup of string\r\n    | Method of string\r\n    | Min of obj\r\n    | MinLength of float\r\n    | Multiple of bool\r\n    | Muted of bool\r\n    | Name of string\r\n    | NoValidate of bool\r\n    | Open of bool\r\n    | Optimum of float\r\n    | Pattern of string\r\n    | Placeholder of string\r\n    | Poster of string\r\n    | Preload of string\r\n    | RadioGroup of string\r\n    | ReadOnly of bool\r\n    | Rel of string\r\n    | Required of bool\r\n    | Role of string\r\n    | Rows of int\r\n    | RowSpan of int\r\n    | Sandbox of string\r\n    | Scope of string\r\n    | Scoped of bool\r\n    | Scrolling of string\r\n    | Seamless of bool\r\n    | Selected of bool\r\n    | Shape of string\r\n    | Size of float\r\n    | Sizes of string\r\n    | Span of float\r\n    | SpellCheck of bool\r\n    | Src of string\r\n    | SrcDoc of string\r\n    | SrcLang of string\r\n    | SrcSet of string\r\n    | Start of float\r\n    | Step of obj\r\n    | Summary of string\r\n    | TabIndex of int\r\n    | Target of string\r\n    | Title of string\r\n    | Type of string\r\n    | UseMap of string\r\n    | Value of obj\r\n    /// Compiles to same prop as `Value`. Intended for `select` elements\r\n    /// with `Multiple` prop set to `true`.\r\n    | [<CompiledName(\"value\")>] ValueMultiple of string[]\r\n    | Width of obj\r\n    | Wmode of string\r\n    | Wrap of string\r\n    | About of string\r\n    | Datatype of string\r\n    | Inlist of obj\r\n    | Prefix of string\r\n    | Property of string\r\n    | Resource of string\r\n    | Typeof of string\r\n    | Vocab of string\r\n    | AutoCapitalize of string\r\n    | AutoCorrect of string\r\n    | AutoSave of string\r\n    // | Color of string // Conflicts with CSSProp, shouldn't be used in HTML5\r\n    | ItemProp of string\r\n    | ItemScope of bool\r\n    | ItemType of string\r\n    | ItemID of string\r\n    | ItemRef of string\r\n    | Results of float\r\n    | Security of string\r\n    | Unselectable of bool\r\n    | [<Erase>] Custom of string * obj\r\n#if !FABLE_COMPILER\r\n    | Style of CSSProp list\r\n    | Data of string * obj\r\n#endif\r\n    interface IHTMLProp\r\n\r\n#if FABLE_COMPILER\r\nlet inline Style (css: CSSProp list): HTMLAttr =\r\n    !!(\"style\", keyValueList CaseRules.LowerFirst css)\r\n\r\nlet inline Data (key: string, value: obj): HTMLAttr =\r\n    !!(\"data-\" + key, value)\r\n#endif\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Specifies the display behavior (the type of rendering box) of an element.\r\ntype DisplayOptions =\r\n    /// The element is completely removed\r\n    | None\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// Displays an element as an inline element (like `<span>`). Any height and width properties will have no effect.\r\n    | Inline\r\n    /// Displays an element as a block element (like `<p>`). It starts on a new line, and takes up the whole width.\r\n    | Block\r\n    /// Makes the container disappear, making the child elements children of the element the next level up in the DOM.\r\n    | Contents\r\n    /// Displays an element as a block-level flex container.\r\n    | Flex\r\n    /// Displays an element as a block-level grid container.\r\n    | Grid\r\n    /// Let the element behave like a `<table>` element\r\n    | Table\r\n    /// Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values\r\n    | [<CompiledName \"inline-block\">] InlineBlock\r\n    /// Displays an element as an inline-level flex container.\r\n    | [<CompiledName \"inline-flex\">] InlineFlex\r\n    /// Displays an element as an inline-level grid container.\r\n    | [<CompiledName \"inline-grid\">] InlineGrid\r\n    /// The element is displayed as an inline-level table.\r\n    | [<CompiledName \"inline-table\">] InlineTable\r\n    /// Let the element behave like a `<li>` element.\r\n    | [<CompiledName \"list-item\">] ListItem\r\n    /// Let the element behave like a `<caption>` element\r\n    | [<CompiledName \"table-caption\">] TableCaption\r\n    /// Let the element behave like a `<colgroup>` element.\r\n    | [<CompiledName \"table-column-group\">] TableColumnGroup\r\n    /// Let the element behave like a `<thead>` element.\r\n    | [<CompiledName \"table-header-group\">] TableHeaderGroup\r\n    /// Let the element behave like a `<tfoot>` element.\r\n    | [<CompiledName \"table-footer-group\">] TableFooterGroup\r\n    /// Let the element behave like a `<tbody>` element.\r\n    | [<CompiledName \"table-row-group\">] TableRowGroup\r\n    /// Let the element behave like a `<td>` element.\r\n    | [<CompiledName \"table-cell\">] TableCell\r\n    /// Let the element behave like a `<col>` element.\r\n    | [<CompiledName \"table-column\">] TableColumn\r\n    /// Let the element behave like a `<tr>` element.\r\n    | [<CompiledName \"table-row\">] TableRow\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Modifies the behavior of the [flex-wrap](https://www.w3schools.com/CSSref/css3_pr_flex-wrap.asp) property. It is similar to [align-items](https://www.w3schools.com/CSSref/css3_pr_align-items.asp), but instead of aligning flex items, it aligns flex lines.\r\ntype AlignContentOptions =\r\n    /// Default value. Lines stretch to take up the remaining space.\r\n    | Stretch\r\n    /// Lines are packed toward the center of the flex container.\r\n    | Center\r\n    /// /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// Lines are packed toward the start of the flex container.\r\n    | [<CompiledName \"flex-start\">] FlexStart\r\n    /// Lines are packed toward the end of the flex container.\r\n    | [<CompiledName \"flex-end\">] FlexEnd\r\n    /// Lines are evenly distributed in the flex container.\r\n    | [<CompiledName \"space-between\">] SpaceBetween\r\n    /// Lines are evenly distributed in the flex container, with half-size spaces on either end.\r\n    | [<CompiledName \"space-around\">] SpaceAround\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Specifies the default alignment for items inside the flexible container.\r\ntype AlignItemsOptions =\r\n    /// The effect of this keyword is dependent of the layout mode we are in. [Read more](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#Values)\r\n    | Normal\r\n    /// Items are positioned at the baseline of the container\r\n    | Baseline\r\n    /// Default. Items are stretched to fit the container.\r\n    | Stretch\r\n    /// Items are positioned at the center of the container.\r\n    | Center\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// Items are positioned at the beginning of the container.\r\n    | [<CompiledName \"flex-start\">] FlexStart\r\n    /// Items are positioned at the end of the container.\r\n    | [<CompiledName \"flex-end\">] FlexEnd\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Specifies the default alignment for items inside the flexible container.\r\ntype AlignSelfOptions =\r\n    /// Default. The element inherits its parent container's align-items property, or \"stretch\" if it has no parent container.\r\n    | Auto\r\n    /// The element is positioned at the baseline of the container.\r\n    | Baseline\r\n    /// The element is positioned to fit the container.\r\n    | Stretch\r\n    /// The element is positioned at the center of the container.\r\n    | Center\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// The element is positioned at the beginning of the container.\r\n    | [<CompiledName \"flex-start\">] FlexStart\r\n    /// The element is positioned at the end of the container.\r\n    | [<CompiledName \"flex-end\">] FlexEnd\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Specifies the default alignment for items inside the grid container.\r\ntype JustifySelfOptions =\r\n    /// Default. The element inherits its parent container's justify-items property, or \"stretch\" if it has no parent container.\r\n    | Auto\r\n    /// The element is positioned at the baseline of the cell.\r\n    | Baseline\r\n    /// The element is positioned to fit the cell.\r\n    | Stretch\r\n    /// The element is positioned at the center of the cell.\r\n    | Center\r\n    /// Sets this property to its default value. Read more about [CSS Initial](https://developer.mozilla.org/en-US/docs/Web/CSS/initial)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://developer.mozilla.org/en-US/docs/Web/CSS/inherit)\r\n    | Inherit\r\n    /// The element is positioned at the beginning of the cell.\r\n    | Start\r\n    /// The element is positioned at the end of the cell.\r\n    | End\r\n    /// The element is positioned at the beginning of the cell.\r\n    | [<CompiledName \"self-start\">] SelfStart\r\n    /// The element is positioned at the end of the cell.\r\n    | [<CompiledName \"self-end\">] SelfEnd\r\n    /// The element is positioned at the left of the cell.\r\n    | Left\r\n    /// The element is positioned at the right of the cell.\r\n    | Right\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\ntype TextAlignOptions =\r\n    /// Aligns the text to the left.\r\n    | Left\r\n    /// Aligns the text to the right.\r\n    | Right\r\n    /// Centers the text.\r\n    | Center\r\n    /// Stretches the lines so that each line has equal width (like in newspapers and magazines).\r\n    | Justify\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// Specifies the type of positioning method used for an element (static, relative, absolute, fixed, or sticky).\r\ntype PositionOptions =\r\n    /// Default value. Elements render in order, as they appear in the document flow.\r\n    | Static\r\n    /// The element is positioned relative to its first positioned (not static) ancestor element.\r\n    | Absolute\r\n    /// The element is positioned relative to the browser window.\r\n    | Fixed\r\n    /// The element is positioned relative to its normal position, so \"left:20px\" adds 20 pixels to the element's LEFT position.\r\n    | Relative\r\n    /// The element is positioned based on the user's scroll position.\r\n    ///\r\n    /// A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\r\n    | Sticky\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-overflow-3/#propdef-overflow\r\ntype OverflowOptions =\r\n    /// There is no special handling of overflow, that is, the box’s content is rendered outside the box if positioned there. The box is not a scroll container.\r\n    | Visible\r\n    /// This value indicates that the box’s content is clipped to its padding box and that the UA must not provide any scrolling user interface to view the content outside the clipping region, nor allow scrolling by direct intervention of the user, such as dragging on a touch screen or using the scrolling wheel on a mouse. However, the content must still be scrollable programatically, for example using the mechanisms defined in  [CSSOM-VIEW], and the box is therefore still a scroll container.\r\n    | Hidden\r\n    /// Like hidden, this value indicates that the box’s content is clipped to its padding box and that no scrolling user interface should be provided by the UA to view the content outside the clipping region. In addition, unlike overflow: hidden which still allows programmatic scrolling, overflow: clip forbids scrolling entirely, through any mechanism, and therefore the box is not a scroll container.\r\n    | Clip\r\n    /// This value indicates that the content is clipped to the padding box, but can be scrolled into view (and therefore the box is a scroll container). Furthermore, if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed whether or not any of its content is clipped. This avoids any problem with scrollbars appearing and disappearing in a dynamic environment. When the target medium is print, overflowing content may be printed; it is not defined where it may be printed.\r\n    | Scroll\r\n    /// Like scroll when the box has scrollable overflow; like hidden otherwise. Thus, if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism will only be displayed if there is overflow.\r\n    | Auto\r\n\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-text-3/#propdef-white-space\r\ntype WhiteSpaceOptions = \r\n    /// This value directs user agents to collapse sequences of white space into a single character (or in some cases, no character). Lines may wrap at allowed soft wrap opportunities, as determined by the line-breaking rules in effect, in order to minimize inline-axis overflow.\r\n    | Normal\r\n    /// This value prevents user agents from collapsing sequences of white space. Segment breaks such as line feeds are preserved as forced line breaks. Lines only break at forced line breaks; content that does not fit within the block container overflows it.\r\n    | Pre\r\n    /// Like normal, this value collapses white space; but like pre, it does not allow wrapping.\r\n    | Nowrap\r\n    /// Like pre, this value preserves white space; but like normal, it allows wrapping.\r\n    | [<CompiledName \"pre-wrap\">] PreWrap\r\n    /// The behavior is identical to that of pre-wrap, except that: 1. Any sequence of preserved white space always takes up space, including at the end of the line. 2. A line breaking opportunity exists after every preserved white space character, including between white space characters.\r\n    | BreakSpaces\r\n    /// Like normal, this value collapses consecutive spaces and allows wrapping, but preserves segment breaks in the source as forced line breaks.\r\n    | [<CompiledName \"pre-line\">] PreLine\r\n\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-ui-3/#box-sizing\r\ntype BoxSizingOptions =\r\n    /// This is the behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element. The padding and border of the element are laid out and drawn outside the specified width and height.\r\n    | [<CompiledName \"content-box\">] ContentBox\r\n    /// Length and percentages values for width and height (and respective min/max properties) on this element determine the border box of the element. That is, any padding or border specified on the element is laid out and drawn inside this specified width and height. The content width and height are calculated by subtracting the border and padding widths of the respective sides from the specified width and height properties. As the content width and height cannot be negative ([CSS2], section 10.2), this computation is floored at 0. Used values, as exposed for instance through getComputedStyle(), also refer to the border box.\r\n    | [<CompiledName \"border-box\">] BorderBox\r\n\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-images-3/#the-image-rendering\r\ntype ImageRenderingOptions =\r\n    /// The scaling algorithm is UA dependent.\r\n    | Auto\r\n    /// The image should be scaled with an algorithm that maximizes the appearance of the image. In particular, scaling algorithms that \"smooth\" colors are acceptable, such as bilinear interpolation. This is intended for images such as photos.\r\n    | Smooth\r\n    /// Identical to smooth, but with a preference for higher-quality scaling. If system resources are constrained, images with high-quality should be prioritized over those with any other value, when considering which images to degrade the quality of and to what degree.\r\n    | HighQuality\r\n    /// The image must be scaled with an algorithm that preserves contrast and edges in the image, and which does not smooth colors or introduce blur to the image in the process. This is intended for images such as pixel art or line drawings.\r\n    | CrispEdges\r\n    /// The image must be scaled with the \"nearest neighbor\" or similar algorithm, to preserve a \"pixelated\" look as the image changes in size.\r\n    | Pixelated\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://www.w3.org/TR/CSS2/visuren.html#float-position\r\ntype FloatOptions =\r\n    /// The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property).\r\n    | Left\r\n    /// Similar to 'left', except the box is floated to the right, and content flows on the left side of the box, starting at the top.\r\n    | Right\r\n    /// The box is not floated.\r\n    | None\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://www.w3.org/TR/css-inline-3/#propdef-alignment-baseline\r\ntype AlignmentBaselineOptions =\r\n    /// Use the dominant baseline choice of the parent. Match the box’s corresponding baseline to that of its parent.\r\n    | Baseline\r\n    /// Match the bottom of the box to the bottom of the parent’s content area.\r\n    | TextBottom\r\n    /// Match the box’s alphabetic baseline to that of its parent.\r\n    | Alphabetic\r\n    /// Match the box’s ideographic character face under-side baseline to that of its parent.\r\n    | Ideographic\r\n    /// Align the vertical midpoint of the box with the baseline of the parent box plus half the x-height of the parent.\r\n    | Middle\r\n    /// Match the box’s central baseline to the central baseline of its parent.\r\n    | Central\r\n    /// Match the box’s mathematical baseline to that of its parent.\r\n    | Mathematical\r\n    /// Match the top of the box to the top of the parent’s content area.\r\n    | TextTop\r\n    /// Align the top of the aligned subtree with the top of the line box.\r\n    | Top\r\n    /// Align the center of the aligned subtree with the center of the line box.\r\n    | Center\r\n    /// Align the bottom of the aligned subtree with the bottom of the line box.\r\n    | Bottom\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://www.w3.org/TR/css3-values/#common-keywords\r\ntype AllOptions =\r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-animations/#animation-direction\r\ntype SingleAnimationDirection =\r\n    /// All iterations of the animation are played as specified.\r\n    | Normal\r\n    /// All iterations of the animation are played in the reverse direction from the way they were specified.\r\n    | Reverse\r\n    /// The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\r\n    | Alternate\r\n    /// The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\r\n    | [<CompiledName \"alternate-reverse\">] AlternateReverse\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-animations/#animation-fill-mode\r\ntype SingleAnimationFillMode =\r\n    /// The animation has no effect when it is applied but not executing.\r\n    | None\r\n    /// After the animation ends (as determined by its animation-iteration-count), the animation will apply the property values for the time the animation ended. When animation-iteration-count is an integer greater than zero, the values applied will be those for the end of the last completed iteration of the animation (rather than the values for the start of the iteration that would be next). When animation-iteration-count is zero, the values applied will be those that would start the first iteration (just as when animation-fill-mode is backwards).\r\n    | Forwards\r\n    /// During the period defined by animation-delay, the animation will apply the property values defined in the keyframe that will start the first iteration of the animation. These are either the values of the from keyframe (when animation-direction is normal or alternate) or those of the to keyframe (when animation-direction is reverse or alternate-reverse).\r\n    | Backwards\r\n    /// The effects of both forwards and backwards fill apply.\r\n    | Both\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-ui-4/#appearance-switching\r\ntype AppearanceOptions =\r\n    /// The element is rendered following the usual rules of CSS. Replaced elements other than controls are not affected by this, and remain replaced elements. Controls are not made to look like native controls of the host operating system. See § 7.1.1 Effects of appearance on Decorative Aspects of Elements and § 7.1.2 Effects of appearance on Semantic Aspects of Elements for details.\r\n    | None\r\n    /// UAs may render controls using native controls of the host operating system or with a look and feel not otherwise expressible in CSS. Elements other than controls must be rendered as if none had been specified.\r\n    | Auto\r\n    /// The element is rendered with the look and feel of a push button, similar to the appearance: auto rendering of the [HTML] button element. UAs must treat this value as auto on input elements, textarea elements, list box select elements, meter elements, and progress elements.\r\n    | Button\r\n    /// For input elements where the type attribute is in the Search state, the element is rendered as a \"normal\" text entry widget, similar to an input element where the type attribute is in the Text state. For all other elements, this value has the same effect as auto.\r\n    | Textfield\r\n    /// For drop-down box select elements, the element is rendered as a drop-down box, including a \"drop-down button\", but not necessarily using a native control of the host operating system. For such elements, CSS properties such as color, background-color, and border (that can be disregarded for auto) should not be disregarded. For all other elements, this value has the same effect as auto.\r\n    | [<CompiledName(\"menulist-button\")>] MenulistButton\r\n    /// These values exist for compatibility of content developed for earlier non standard versions of this property. They all have the same effect as auto.\r\n    | [<CompiledName(\"compat-auto\")>] CompatAuto\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-transforms-2/#propdef-backface-visibility\r\ntype BackfaceVisibilityOptions =\r\n    | Visible\r\n    | Hidden\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://developer.mozilla.org/en-US/docs/Web/CSS/box-align\r\ntype BoxAlignOptions =\r\n    | Start\r\n    | Center\r\n    | End\r\n    | Baseline\r\n    | Stretch\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\ntype BoxDecorationBreakOptions =\r\n    /// Each box fragment is independently wrapped with the border, padding, and margin. The border-radius and border-image and box-shadow, if any, are applied to each fragment independently. The background is drawn independently in each fragment of the element. A no-repeat background image will thus be rendered once in each fragment of the element.\r\n    | Clone\r\n    /// The effect is as though the element were rendered with no breaks present, and then sliced by the breaks afterward: no border and no padding are inserted at a break; no box-shadow is drawn at a broken edge; and backgrounds, border-radius, and the border-image are applied to the geometry of the whole box as if it were unbroken.\r\n    | Slice\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://developer.mozilla.org/en-US/docs/Web/CSS/box-direction\r\ntype BoxDirectionOptions =\r\n    /// The box lays out its contents from the start (the left or top edge).\r\n    | Normal\r\n    /// The box lays out its contents from the end (the right or bottom edge).\r\n    | Reverse\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-break-3/#break-between\r\ntype BreakOptions =\r\n    /// Allows, but does not force, any break (page, column, or region) to be inserted right after the principal box.\r\n    | Auto\r\n    /// Avoids any break (page, column, or region) from being inserted right after the principal box.\r\n    | Avoid\r\n    /// Forces a page break right after the principal box. The type of this break is that of the immediately-containing fragmentation context. If we are inside a multicol container then it would force a column break, inside paged media (but not inside a multicol container) a page break.\r\n    | Always\r\n    /// Forces a page break right after the principal box. Breaking through all possible fragmentation contexts. So a break inside a multicol container, which was inside a page container would force a column and page break.\r\n    | All\r\n    /// Avoids any page break right after the principal box.\r\n    | [<CompiledName(\"avoid-page\")>] AvoidPage\r\n    /// Forces a page break right after the principal box.\r\n    | Page\r\n    /// Forces one or two page breaks right after the principal box, whichever will make the next page into a left page.\r\n    | Left\r\n    /// Forces one or two page breaks right after the principal box, whichever will make the next page into a right page.\r\n    | Right\r\n    /// Forces one or two page breaks right after the principal box, whichever will make the next page into a recto page. (A recto page is a right page in a left-to-right spread or a left page in a right-to-left spread.)\r\n    | Recto\r\n    /// Forces one or two page breaks right after the principal box, whichever will make the next page into a verso page. (A verso page is a left page in a left-to-right spread or a left right in a right-to-left spread.)\r\n    | Verso\r\n    /// Avoids any column break right after the principal box.\r\n    | [<CompiledName(\"avoid-column\")>] AvoidColumn\r\n    /// Forces a column break right after the principal box.\r\n    | Column\r\n    /// Avoids any region break right after the principal box.\r\n    | [<CompiledName(\"avoid-region\")>] AvoidRegion\r\n    /// Forces a region break right after the principal box.\r\n    | Region\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://drafts.csswg.org/css-break-3/#break-within\r\ntype BreakInsideOptions =\r\n    /// Impose no additional breaking constraints within the box.\r\n    | Auto\r\n    /// Avoid breaks within the box.\r\n    | Avoid\r\n    /// Avoid a page break within the box.\r\n    | [<CompiledName(\"avoid-page\")>] AvoidPage\r\n    /// Avoid a column break within the box.\r\n    | [<CompiledName(\"avoid-column\")>] AvoidColumn\r\n    /// Avoid a region break within the box.\r\n    | [<CompiledName(\"avoid-region\")>] AvoidRegion\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side#Specifications\r\ntype CaptionSideOptions =\r\n    | Top\r\n    | Bottom\r\n    | [<CompiledName(\"block-start\")>] BlockStart\r\n    | [<CompiledName(\"block-end\")>] BlockEnd\r\n    | [<CompiledName(\"inline-start\")>] InlineStart\r\n    | [<CompiledName(\"inline-end\")>] InlineEnd\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n    \r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://www.w3.org/TR/CSS2/visuren.html#flow-control\r\ntype ClearOptions =\r\n    /// Requires that the top border edge of the box be below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document.\r\n    | Left\r\n    /// Requires that the top border edge of the box be below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document.\r\n    | Right\r\n    /// Requires that the top border edge of the box be below the bottom outer edge of any right-floating and left-floating boxes that resulted from elements earlier in the source document.\r\n    | Both\r\n    /// No constraint on the box's position with respect to floats.\r\n    | None\r\n    | [<CompiledName(\"inline-start\")>] InlineStart\r\n    | [<CompiledName(\"inline-end\")>] InlineEnd\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://www.w3.org/TR/CSS2/visuren.html#direction\r\ntype DirectionOptions =\r\n    /// Left-to-right direction.\r\n    | Ltr\r\n    /// Right-to-left direction.\r\n    | Rtl\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\n/// https://developer.mozilla.org/en-US/docs/Web/CSS/user-select\r\ntype UserSelectOptions =\r\n    /// The text of the element and its sub-elements is not selectable. Note that the Selection object can contain these elements.\r\n    | None\r\n    /// The computed value of auto is determined as follows:\r\n    /// - On the ::before and ::after pseudo elements, the computed value is none\r\n    /// - If the element is an editable element, the computed value is contain\r\n    /// - Otherwise, if the computed value of user-select on the parent of this element is all, the computed value is all\r\n    /// - Otherwise, if the computed value of user-select on the parent of this element is none, the computed value is none\r\n    /// - Otherwise, the computed value is text\r\n    | Auto\r\n    /// The text can be selected by the user.\r\n    | Text\r\n    /// Enables selection to start within the element; however, the selection will be contained by the bounds of that element.\r\n    | Contain\r\n    /// In an HTML editor, if a double-click or context-click occurred in sub-elements, the highest ancestor with this value will be selected.\r\n    | All\r\n    \r\n    /// Sets this property to its default value. Read more about [CSS Initial value](https://www.w3schools.com/CSSref/css_initial.asp)\r\n    | Initial\r\n    /// Inherits this property from its parent element. Read about [CSS Inherit](https://www.w3schools.com/CSSref/css_inherit.asp)\r\n    | Inherit\r\n    /// If the cascaded value of a property is the unset keyword, then if it is an inherited property, this is treated as inherit, and if it is not, this is treated as initial. This keyword effectively erases all declared values occurring earlier in the cascade, correctly inheriting or not as appropriate for the property (or all longhands of a shorthand).\r\n    | Unset\r\n\r\ntype CSSProp =\r\n    | AlignContent of AlignContentOptions\r\n    | AlignItems of AlignItemsOptions\r\n    | AlignSelf of AlignSelfOptions\r\n    | AlignmentAdjust of obj\r\n    | AlignmentBaseline of AlignmentBaselineOptions\r\n    | All of AllOptions\r\n    | Animation of obj\r\n    | AnimationDelay of obj\r\n    | AnimationDirection of SingleAnimationDirection\r\n    | AnimationDuration of obj\r\n    | AnimationFillMode of SingleAnimationFillMode\r\n    | AnimationIterationCount of obj\r\n    | AnimationName of obj\r\n    | AnimationPlayState of obj\r\n    | AnimationTimingFunction of obj\r\n    | Appearance of AppearanceOptions\r\n    | BackfaceVisibility of BackfaceVisibilityOptions\r\n    | Background of obj\r\n    | BackgroundAttachment of obj\r\n    | BackgroundBlendMode of obj\r\n    | BackgroundClip of obj\r\n    | BackgroundColor of obj\r\n    | BackgroundComposite of obj\r\n    | BackgroundImage of obj\r\n    | BackgroundOrigin of obj\r\n    | BackgroundPosition of obj\r\n    | BackgroundPositionX of obj\r\n    | BackgroundPositionY of obj\r\n    | BackgroundRepeat of obj\r\n    | BackgroundSize of obj\r\n    | BaselineShift of obj\r\n    | Behavior of obj\r\n    | BlockSize of obj\r\n    | Border of obj\r\n    | BorderBlockEnd of obj\r\n    | BorderBlockEndColor of obj\r\n    | BorderBlockEndStyle of obj\r\n    | BorderBlockEndWidth of obj\r\n    | BorderBlockStart of obj\r\n    | BorderBlockStartColor of obj\r\n    | BorderBlockStartStyle of obj\r\n    | BorderBlockStartWidth of obj\r\n    | BorderBottom of obj\r\n    | BorderBottomColor of obj\r\n    | BorderBottomLeftRadius of obj\r\n    | BorderBottomRightRadius of obj\r\n    | BorderBottomStyle of obj\r\n    | BorderBottomWidth of obj\r\n    | BorderCollapse of obj\r\n    | BorderColor of obj\r\n    | BorderCornerShape of obj\r\n    | BorderImage of obj\r\n    | BorderImageOutset of obj\r\n    | BorderImageRepeat of obj\r\n    | BorderImageSlice of obj\r\n    | BorderImageSource of obj\r\n    | BorderImageWidth of obj\r\n    | BorderInlineEnd of obj\r\n    | BorderInlineEndColor of obj\r\n    | BorderInlineEndStyle of obj\r\n    | BorderInlineEndWidth of obj\r\n    | BorderInlineStart of obj\r\n    | BorderInlineStartColor of obj\r\n    | BorderInlineStartStyle of obj\r\n    | BorderInlineStartWidth of obj\r\n    | BorderLeft of obj\r\n    | BorderLeftColor of obj\r\n    | BorderLeftStyle of obj\r\n    | BorderLeftWidth of obj\r\n    | BorderRadius of obj\r\n    | BorderRight of obj\r\n    | BorderRightColor of obj\r\n    | BorderRightStyle of obj\r\n    | BorderRightWidth of obj\r\n    | BorderSpacing of obj\r\n    | BorderStyle of obj\r\n    | BorderTop of obj\r\n    | BorderTopColor of obj\r\n    | BorderTopLeftRadius of obj\r\n    | BorderTopRightRadius of obj\r\n    | BorderTopStyle of obj\r\n    | BorderTopWidth of obj\r\n    | BorderWidth of obj\r\n    | Bottom of obj\r\n    | BoxAlign of BoxAlignOptions\r\n    | BoxDecorationBreak of BoxDecorationBreakOptions\r\n    | BoxDirection of BoxDirectionOptions\r\n    | BoxFlex of obj\r\n    | BoxFlexGroup of obj\r\n    | BoxLineProgression of obj\r\n    | BoxLines of obj\r\n    | BoxOrdinalGroup of obj\r\n    | BoxShadow of obj\r\n    | BoxSizing of BoxSizingOptions\r\n    | BreakAfter of BreakOptions\r\n    | BreakBefore of BreakOptions\r\n    | BreakInside of BreakInsideOptions\r\n    | CaptionSide of CaptionSideOptions\r\n    | CaretColor of obj\r\n    | Clear of ClearOptions\r\n    | Clip of obj\r\n    | ClipPath of obj\r\n    | ClipRule of obj\r\n    | Color of obj\r\n    | ColorInterpolation of obj\r\n    | ColorInterpolationFilters of obj\r\n    | ColorProfile of obj\r\n    | ColorRendering of obj\r\n    | ColumnCount of obj\r\n    | ColumnFill of obj\r\n    | ColumnGap of obj\r\n    | ColumnRule of obj\r\n    | ColumnRuleColor of obj\r\n    | ColumnRuleStyle of obj\r\n    | ColumnRuleWidth of obj\r\n    | ColumnSpan of obj\r\n    | ColumnWidth of obj\r\n    | Columns of obj\r\n    | Content of obj\r\n    | CounterIncrement of obj\r\n    | CounterReset of obj\r\n    | Cue of obj\r\n    | CueAfter of obj\r\n    | Cursor of obj\r\n    | Direction of DirectionOptions\r\n    | Display of DisplayOptions\r\n    | DominantBaseline of obj\r\n    | EmptyCells of obj\r\n    | EnableBackground of obj\r\n    | Fill of obj\r\n    | FillOpacity of obj\r\n    | FillRule of obj\r\n    | Filter of obj\r\n    | Flex of obj\r\n    | FlexAlign of obj\r\n    | FlexBasis of obj\r\n    | FlexDirection of obj\r\n    | FlexFlow of obj\r\n    | FlexGrow of obj\r\n    | FlexItemAlign of obj\r\n    | FlexLinePack of obj\r\n    | FlexOrder of obj\r\n    | FlexShrink of obj\r\n    | FlexWrap of obj\r\n    | Float of FloatOptions\r\n    | FloodColor of obj\r\n    | FloodOpacity of obj\r\n    | FlowFrom of obj\r\n    | Font of obj\r\n    | FontFamily of obj\r\n    | FontFeatureSettings of obj\r\n    | FontKerning of obj\r\n    | FontLanguageOverride of obj\r\n    | FontSize of obj\r\n    | FontSizeAdjust of obj\r\n    | FontStretch of obj\r\n    | FontStyle of obj\r\n    | FontSynthesis of obj\r\n    | FontVariant of obj\r\n    | FontVariantAlternates of obj\r\n    | FontVariantCaps of obj\r\n    | FontVariantEastAsian of obj\r\n    | FontVariantLigatures of obj\r\n    | FontVariantNumeric of obj\r\n    | FontVariantPosition of obj\r\n    | FontWeight of obj\r\n    | GlyphOrientationHorizontal of obj\r\n    | GlyphOrientationVertical of obj\r\n    | Grid of obj\r\n    | GridArea of obj\r\n    | GridAutoColumns of obj\r\n    | GridAutoFlow of obj\r\n    | GridAutoRows of obj\r\n    | GridColumn of obj\r\n    | GridColumnEnd of obj\r\n    | GridColumnGap of obj\r\n    | GridColumnStart of obj\r\n    | GridGap of obj\r\n    | GridRow of obj\r\n    | GridRowEnd of obj\r\n    | GridRowGap of obj\r\n    | GridRowPosition of obj\r\n    | GridRowSpan of obj\r\n    | GridRowStart of obj\r\n    | GridTemplate of obj\r\n    | GridTemplateAreas of obj\r\n    | GridTemplateColumns of obj\r\n    | GridTemplateRows of obj\r\n    | HangingPunctuation of obj\r\n    | Height of obj\r\n    | HyphenateLimitChars of obj\r\n    | HyphenateLimitLines of obj\r\n    | HyphenateLimitZone of obj\r\n    | Hyphens of obj\r\n    | ImageOrientation of obj // Likely to be deprecated in the near future\r\n    | ImageRendering of ImageRenderingOptions\r\n    | ImageResolution of obj\r\n    | ImeMode of obj\r\n    | InlineSize of obj\r\n    | Isolation of obj\r\n    | JustifyContent of obj\r\n    | JustifySelf of JustifySelfOptions\r\n    | Kerning of obj\r\n    | LayoutGrid of obj\r\n    | LayoutGridChar of obj\r\n    | LayoutGridLine of obj\r\n    | LayoutGridMode of obj\r\n    | LayoutGridType of obj\r\n    | Left of obj\r\n    | LetterSpacing of obj\r\n    | LightingColor of obj\r\n    | LineBreak of obj\r\n    | LineClamp of obj\r\n    | LineHeight of obj\r\n    | ListStyle of obj\r\n    | ListStyleImage of obj\r\n    | ListStylePosition of obj\r\n    | ListStyleType of obj\r\n    | Margin of obj\r\n    | MarginBlockEnd of obj\r\n    | MarginBlockStart of obj\r\n    | MarginBottom of obj\r\n    | MarginInlineEnd of obj\r\n    | MarginInlineStart of obj\r\n    | MarginLeft of obj\r\n    | MarginRight of obj\r\n    | MarginTop of obj\r\n    | MarkerEnd of obj\r\n    | MarkerMid of obj\r\n    | MarkerStart of obj\r\n    | MarqueeDirection of obj\r\n    | MarqueeStyle of obj\r\n    | Mask of obj\r\n    | MaskBorder of obj\r\n    | MaskBorderRepeat of obj\r\n    | MaskBorderSlice of obj\r\n    | MaskBorderSource of obj\r\n    | MaskBorderWidth of obj\r\n    | MaskClip of obj\r\n    | MaskComposite of obj\r\n    | MaskImage of obj\r\n    | MaskMode of obj\r\n    | MaskOrigin of obj\r\n    | MaskPosition of obj\r\n    | MaskRepeat of obj\r\n    | MaskSize of obj\r\n    | MaskType of obj\r\n    | MaxFontSize of obj\r\n    | MaxHeight of obj\r\n    | MaxWidth of obj\r\n    | MinBlockSize of obj\r\n    | MinHeight of obj\r\n    | MinInlineSize of obj\r\n    | MinWidth of obj\r\n    | MixBlendMode of obj\r\n    | ObjectFit of obj\r\n    | ObjectPosition of obj\r\n    | OffsetBlockEnd of obj\r\n    | OffsetBlockStart of obj\r\n    | OffsetInlineEnd of obj\r\n    | OffsetInlineStart of obj\r\n    | Opacity of obj\r\n    | Order of obj\r\n    | Orphans of obj\r\n    | Outline of obj\r\n    | OutlineColor of obj\r\n    | OutlineOffset of obj\r\n    | OutlineStyle of obj\r\n    | OutlineWidth of obj\r\n    | OverflowStyle of obj\r\n    | OverflowWrap of obj\r\n    | OverflowX of OverflowOptions\r\n    | OverflowY of OverflowOptions\r\n    | Padding of obj\r\n    | PaddingBlockEnd of obj\r\n    | PaddingBlockStart of obj\r\n    | PaddingBottom of obj\r\n    | PaddingInlineEnd of obj\r\n    | PaddingInlineStart of obj\r\n    | PaddingLeft of obj\r\n    | PaddingRight of obj\r\n    | PaddingTop of obj\r\n    | PageBreakAfter of obj\r\n    | PageBreakBefore of obj\r\n    | PageBreakInside of obj\r\n    | Pause of obj\r\n    | PauseAfter of obj\r\n    | PauseBefore of obj\r\n    | Perspective of obj\r\n    | PerspectiveOrigin of obj\r\n    | PointerEvents of obj\r\n    | Position of PositionOptions\r\n    | PunctuationTrim of obj\r\n    | Quotes of obj\r\n    | RegionFragment of obj\r\n    | Resize of obj\r\n    | RestAfter of obj\r\n    | RestBefore of obj\r\n    | Right of obj\r\n    | RubyAlign of obj\r\n    | RubyMerge of obj\r\n    | RubyPosition of obj\r\n    | ScrollBehavior of obj\r\n    | ScrollSnapCoordinate of obj\r\n    | ScrollSnapDestination of obj\r\n    | ScrollSnapType of obj\r\n    | ShapeImageThreshold of obj\r\n    | ShapeInside of obj\r\n    | ShapeMargin of obj\r\n    | ShapeOutside of obj\r\n    | ShapeRendering of obj\r\n    | Speak of obj\r\n    | SpeakAs of obj\r\n    | StopColor of obj\r\n    | StopOpacity of obj\r\n    | Stroke of obj\r\n    | StrokeDasharray of obj\r\n    | StrokeDashoffset of obj\r\n    | StrokeLinecap of obj\r\n    | StrokeLinejoin of obj\r\n    | StrokeMiterlimit of obj\r\n    | StrokeOpacity of obj\r\n    | StrokeWidth of obj\r\n    | TabSize of obj\r\n    | TableLayout of obj\r\n    | TextAlign of TextAlignOptions\r\n    | TextAlignLast of obj\r\n    | TextAnchor of obj\r\n    | TextCombineUpright of obj\r\n    | TextDecoration of obj\r\n    | TextDecorationColor of obj\r\n    | TextDecorationLine of obj\r\n    | TextDecorationLineThrough of obj\r\n    | TextDecorationNone of obj\r\n    | TextDecorationOverline of obj\r\n    | TextDecorationSkip of obj\r\n    | TextDecorationStyle of obj\r\n    | TextDecorationUnderline of obj\r\n    | TextEmphasis of obj\r\n    | TextEmphasisColor of obj\r\n    | TextEmphasisPosition of obj\r\n    | TextEmphasisStyle of obj\r\n    | TextHeight of obj\r\n    | TextIndent of obj\r\n    | TextJustify of obj\r\n    | TextJustifyTrim of obj\r\n    | TextKashidaSpace of obj\r\n    | TextLineThrough of obj\r\n    | TextLineThroughColor of obj\r\n    | TextLineThroughMode of obj\r\n    | TextLineThroughStyle of obj\r\n    | TextLineThroughWidth of obj\r\n    | TextOrientation of obj\r\n    | TextOverflow of obj\r\n    | TextOverline of obj\r\n    | TextOverlineColor of obj\r\n    | TextOverlineMode of obj\r\n    | TextOverlineStyle of obj\r\n    | TextOverlineWidth of obj\r\n    | TextRendering of obj\r\n    | TextScript of obj\r\n    | TextShadow of obj\r\n    | TextTransform of obj\r\n    | TextUnderlinePosition of obj\r\n    | TextUnderlineStyle of obj\r\n    | Top of obj\r\n    | TouchAction of obj\r\n    | Transform of obj\r\n    | TransformBox of obj\r\n    | TransformOrigin of obj\r\n    | TransformOriginZ of obj\r\n    | TransformStyle of obj\r\n    | Transition of obj\r\n    | TransitionDelay of obj\r\n    | TransitionDuration of obj\r\n    | TransitionProperty of obj\r\n    | TransitionTimingFunction of obj\r\n    | UnicodeBidi of obj\r\n    | UnicodeRange of obj\r\n    | UserFocus of obj\r\n    | UserInput of obj\r\n    | UserSelect of UserSelectOptions\r\n    | VerticalAlign of obj\r\n    | Visibility of obj\r\n    | VoiceBalance of obj\r\n    | VoiceDuration of obj\r\n    | VoiceFamily of obj\r\n    | VoicePitch of obj\r\n    | VoiceRange of obj\r\n    | VoiceRate of obj\r\n    | VoiceStress of obj\r\n    | VoiceVolume of obj\r\n    | WhiteSpace of WhiteSpaceOptions\r\n    | WhiteSpaceTreatment of obj\r\n    | Widows of obj\r\n    | Width of obj\r\n    | WillChange of obj\r\n    | WordBreak of obj\r\n    | WordSpacing of obj\r\n    | WordWrap of obj\r\n    | WrapFlow of obj\r\n    | WrapMargin of obj\r\n    | WrapOption of obj\r\n    | WritingMode of obj\r\n    | ZIndex of obj\r\n    | Zoom of obj\r\n    /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\r\n    | [<Erase>] Custom of string * obj\r\n    static member Overflow (overflow: OverflowOptions, ?overflowY: OverflowOptions) =\r\n        match overflowY with\r\n        | Some value -> CSSProp.Custom (\"overflow\", stringEnum overflow + \" \" + stringEnum value)\r\n        | None -> CSSProp.Custom (\"overflow\", stringEnum overflow)\r\n","(** Custom navigation\n------\nThis port of the Elm library is about treating the address bar as an input to your program.\nIt converts changes in the address bar into messages and provides functions for manipulation of the browser history.\n*)\nnamespace Elmish.Navigation\n\nopen Browser\nopen Browser.Types\nopen Elmish\n\n(**\n#### Parser\nA function to turn the string in the address bar into data that is easier for your app to handle.\n*)\ntype Parser<'a> = Location -> 'a\n\ntype Navigable<'msg> =\n    | Change of Location\n    | UserMsg of 'msg\n\n(**\n#### Direct history manipulation\n*)\n[<RequireQualifiedAccess>]\nmodule Navigation =\n    let [<Literal>] internal NavigatedEvent = \"NavigatedEvent\"\n\n    /// Modify current location\n    let modifyUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.replaceState((), \"\", newUrl)]\n\n    /// Push new location into history and navigate there\n    let newUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.pushState((), \"\", newUrl)\n                  let ev = CustomEvent.Create(NavigatedEvent)\n                  window.dispatchEvent ev\n                  |> ignore ]\n\n    /// Jump to some point in history (positve=forward, nagative=backward)\n    let jump (n:int):Cmd<_> =\n        [fun _ -> history.go n]\n\n\n(**\n#### Program extensions\nTreat user's program as a child component, by wrapping it and handling navigation events.\n*)\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n        let mutable private onChangeRef : Event -> unit =\n            fun _ ->\n                failwith \"`onChangeRef` has not been initialized.\\nPlease make sure you used Elmish.Navigation.Program.Internal.subscribe\"\n\n        let subscribe (dispatch:Dispatch<_ Navigable>) =\n            let mutable lastLocation = None\n            let onChange _ =\n                match lastLocation with\n                | Some href when href = window.location.href -> ()\n                | _ ->\n                    lastLocation <- Some window.location.href\n                    Change window.location |> dispatch\n\n            onChangeRef <- onChange\n\n            window.addEventListener(\"popstate\", onChangeRef)\n            window.addEventListener(\"hashchange\", onChangeRef)\n            window.addEventListener(Navigation.NavigatedEvent, onChangeRef)\n\n        let unsubscribe () =\n            window.removeEventListener(\"popstate\", onChangeRef)\n            window.removeEventListener(\"hashchange\", onChangeRef)\n            window.removeEventListener(Navigation.NavigatedEvent, onChangeRef)\n\n        let toNavigableWith (parser : Parser<'a>)\n                            (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                            (program : Program<'a,'model,'msg,'view>)\n                            (onLocationChange : Dispatch<Navigable<'msg>> -> unit) =\n\n            let map (model, cmd) =\n                model, cmd |> Cmd.map UserMsg\n\n            let update userUpdate msg model =\n                match msg with\n                | Change location ->\n                    urlUpdate (parser location) model\n                | UserMsg userMsg ->\n                    userUpdate userMsg model\n                |> map\n\n            let subs userSubscribe model =\n                Cmd.batch\n                  [ [ onLocationChange ]\n                    userSubscribe model |> Cmd.map UserMsg ]\n\n            let init userInit () =\n                userInit (parser window.location) |> map\n\n            let setState userSetState model dispatch =\n                userSetState model (UserMsg >> dispatch)\n\n            let view userView model dispatch =\n                userView model (UserMsg >> dispatch)\n            \n            program\n            |> Program.map init update view setState subs\n\n    /// Add the navigation to a program made with `mkProgram` or `mkSimple`.\n    /// urlUpdate: similar to `update` function, but receives parsed url instead of message as an input.\n    let toNavigable (parser : Parser<'a>)\n                    (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                    (program : Program<'a,'model,'msg,'view>) =\n\n        Internal.toNavigableWith parser urlUpdate program Internal.subscribe\n","module App.State\r\n\r\nopen Elmish\r\nopen Elmish.Navigation\r\nopen Elmish.UrlParser\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser\r\nopen Global\r\nopen Types\r\nopen Imports\r\nopen Common\r\nopen System\r\n\r\nlet pageParser: Parser<Page->Page,Page> =\r\n    let nftDetails a i = NftDetails (a, i)\r\n    oneOf [\r\n        map Home (s \"\")\r\n        map Edit (s \"edit\" </> str)\r\n        map nftDetails (s \"nft\" </> str </> str)\r\n        map View (str)\r\n    ]\r\n\r\nlet urlUpdate gbl (result : Page option) model =\r\n    let setClasses className =\r\n        (document.getElementById \"html\").className <- className\r\n        (document.getElementById \"body\").className <- className\r\n    match result with\r\n    | None ->\r\n        console.error(\"Error parsing url\")\r\n        model, Navigation.modifyUrl (toUrl model.page)\r\n    | Some Home ->\r\n        setClasses \"page-home\"\r\n        { model with page = Home }, Cmd.none\r\n    | Some (NftDetails (address, id) as page) -> failwith \"ni\"\r\n        //match model with\r\n        //| { page = View _; tree = { nftDetails = Some nftDetails } } when nftDetails.nft.token_address = address && nftDetails.nft.token_id = id ->\r\n        //    model , Cmd.none\r\n        //| _ ->\r\n        //    setClasses \"page-view\"\r\n            \r\n        //    { model with page = page }, Cmd.OfAsync.perform (fun (address, id) ->\r\n        //        async {\r\n        //            match! Server.getNFTDetails address id with\r\n        //            | None -> return failwith \"nft not found\"\r\n        //            | Some nft ->\r\n        //                match! Server.getCollection address with\r\n        //                | None -> return failwith \"collection not found\"\r\n        //                | Some collection ->\r\n        //                    match! Server.getNFTOwners address id with\r\n        //                    | Some { owners = [| owner |] } ->\r\n        //                        let! tree = Server.getTreeData owner\r\n        //                        return nft, collection, owner, Some tree\r\n        //                    | _ -> return nft, collection, \"\", None\r\n        //        }) (address, id) (NewMsg << New.Types.Msg.SetNftDetailsForPage)\r\n    | Some ((View user) as page) | Some ((Edit user) as page) ->\r\n        match model with\r\n        //| { page = currentPage; tree = { nftDetails = Some _ } } when currentPage = page ->\r\n        //    (Browser.Dom.document.getElementById \"body\").classList.remove(\"rmodal-open\")\r\n        //    (Browser.Dom.document.getElementById \"html\").classList.remove(\"rmodal-open\")\r\n        //    { model with tree = { model.tree with nftDetails = None } }, Cmd.none\r\n        | _ ->\r\n            setClasses <|\r\n                match page with\r\n                | View _ -> \"page-view mode-aware-gradient-back\"\r\n                | Edit _ -> \"page-edit mode-aware-gradient-back\"\r\n                | _ -> \"\"\r\n            // determine whether the user part of the url is an address or ens\r\n            let mode =\r\n                match page with\r\n                | View _ -> Tree.Types.View | Edit _ -> Tree.Types.Edit\r\n            if user.StartsWith(\"0x\") && user.Length = 42 then\r\n                // address\r\n                { model with page = page; tree = { model.tree with address = Some (Some user); mode = mode } }, \r\n                    Cmd.batch\r\n                        [Cmd.OfAsync.perform Server.getEns user (TreeMsg << Tree.Types.Msg.SetEns)\r\n                         Cmd.OfAsync.perform Server.getUrlForAddress user (TreeMsg << Tree.Types.Msg.SetUrl)]\r\n            else if user.StartsWith(\"-\") then\r\n                // url\r\n                { model with page = page; tree = { model.tree with url = Some (Some user); mode = mode } }, \r\n                    Cmd.batch\r\n                        [Cmd.OfAsync.perform Server.getEns user (TreeMsg << Tree.Types.Msg.SetEns)\r\n                         Cmd.OfAsync.perform Server.getAddressForUrl user (TreeMsg << Tree.Types.Msg.SetAddress)]\r\n            else\r\n                // ens\r\n                { model with page = page; tree = { model.tree with ens = Some (Some user); mode = mode; url = Some None } },\r\n                    Cmd.OfAsync.perform Server.getAddressForEns user (TreeMsg << Tree.Types.Msg.SetAddress)\r\n\r\nlet init gbl result =\r\n    let (home, homeCmd) = Home.State.init()\r\n    let (model, cmd) =\r\n        urlUpdate gbl result\r\n          { page = Home\r\n            home = home\r\n            tree =\r\n                { ens = None\r\n                  address = None\r\n                  url = None\r\n                  mode = Tree.Types.View }\r\n            common =\r\n                { accountData = None } }\r\n    model, Cmd.batch [ cmd\r\n                       Cmd.map HomeMsg homeCmd ]\r\n\r\nlet update gbl msg model =\r\n    let updateAccountCmd web3 =\r\n        Cmd.OfPromise.perform\r\n            (fun _ -> promise {\r\n                let! chainId = web3?eth?getChainId()\r\n                let! accounts = web3?eth?getAccounts()\r\n\r\n                return { selectedAccount = accounts?at $ 0; chainId = chainId; profileInfo = None }\r\n            }) () SetAccountData\r\n    match msg with\r\n    | TreeMsg msg ->\r\n        let (tree, treeCmd) = Tree.State.update msg model.tree\r\n        { model with tree = tree }, Cmd.map TreeMsg treeCmd\r\n    | HomeMsg Home.Types.Msg.Connect | NewMsg New.Types.Msg.Connect ->\r\n        model, Cmd.none// Cmd.OfPromise.perform gbl.web3Modal.connect () SetProvider\r\n    | HomeMsg (Home.Types.Msg.ChangePage page) -> model, Navigation.newUrl <| toUrl page\r\n    | HomeMsg msg ->\r\n        let (home, homeCmd) = Home.State.update msg model.home\r\n        { model with home = home }, Cmd.map HomeMsg homeCmd\r\n            // SAVE PROFILE TX\r\n    //| NewMsg (New.Types.Msg.MakeTransaction New.Types.Save) ->\r\n    //    match model.tree.treeEdit, model.common.accountData with\r\n    //    | Some tree, Some account ->\r\n    //        let markdown = tree |> TreeEditData.toTree |> TreeData.toMarkdown\r\n    //        { model with tree = { model.tree with isSaving = Some New.Types.Save } }, Cmd.OfPromise.either\r\n    //            (fun _ -> promise {\r\n    //                // perform update profile transaction\r\n    //                let! result = gbl.web3treeContract?methods?updateProfile(markdown)?send(createObj [\"from\", !!account.selectedAccount])\r\n    //                return result\r\n    //            }) () (fun receipt -> NewMsg (New.Types.Msg.TransactionSuccess(New.Types.Save, receipt)))\r\n    //                (fun e -> NewMsg (New.Types.Msg.TransactionError(New.Types.Save, e)))\r\n    //        // POST LIKE TX\r\n    //| NewMsg (New.Types.Msg.MakeTransaction New.Types.PostLike) ->\r\n    //    match model.tree.likeEmojiInput, model.common.accountData, model.tree.nftDetails with\r\n    //    | [], _, _ | _, None, _ | _, _, None -> \r\n    //        failwith \"error no like input or account set\"\r\n    //    | emojis, Some account, Some nft ->\r\n    //        { model with tree = { model.tree with isSaving = Some New.Types.PostLike } }, Cmd.OfPromise.either\r\n    //            (fun _ -> promise {\r\n    //                let id = if nft.nft.token_id.StartsWith(\"0x\") then nft.nft.token_id else \"0x\" + nft.nft.token_id\r\n    //                let text = System.String.Join(\" \", emojis |> List.rev |> List.toArray)\r\n    //                let! result = gbl.web3treeContract?methods?addLike(nft.nft.token_address, id, text)?send(createObj [\"from\", !!account.selectedAccount])\r\n    //                return result\r\n    //            }) () (fun receipt -> NewMsg (New.Types.Msg.TransactionSuccess(New.Types.PostLike, receipt)))\r\n    //            (fun e -> NewMsg (New.Types.Msg.TransactionError(New.Types.PostLike, e)))\r\n    //| NewMsg (New.Types.Msg.TransactionError (_, e)) ->\r\n    //    Browser.Dom.window?exn <- e\r\n    //    Browser.Dom.window.alert e.Message\r\n    //    model, Cmd.none\r\n    //| NewMsg msg ->\r\n    //    let (new_, newCmd) = New.State.update msg model.page model.common model.tree\r\n    //    { model with tree = new_ }, Cmd.map NewMsg newCmd\r\n    | SetProvider provider ->\r\n        //let web3 = new Web3(provider)\r\n        //gbl.web3 <- web3\r\n        //gbl.web3treeContract <- web3.NewContract(Common.web3treeAbi, Common.Config.network.web3treeContractAddress)\r\n        model, Cmd.none //updateAccountCmd web3\r\n    | SetAccountData accountData ->\r\n        { model with common = { model.common with accountData = Some accountData } },\r\n            Cmd.OfAsync.perform Server.getProfileInfo accountData.selectedAccount SetProfileInfo\r\n    | SetProfileInfo profileInfo ->\r\n        match model.common.accountData with\r\n        | Some accountData ->\r\n            { model with common = { model.common with accountData = Some { accountData with profileInfo = Some profileInfo } } }, Cmd.none\r\n        | _ -> failwith \"error no account set\"\r\n    | ChangePage page ->\r\n        model, Navigation.newUrl <| toUrl page\r\n    | RefreshAccounts ->\r\n        model, updateAccountCmd gbl.web3\r\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","module App.View\r\n\r\nopen Elmish\r\nopen Elmish.Navigation\r\nopen Elmish.UrlParser\r\nopen Fable.Core.JsInterop\r\nopen Types\r\nopen App.State\r\nopen Global\r\nopen Imports\r\nopen Browser.Dom\r\nopen Fable.React\r\nopen Fable.Core\r\nopen Web3TreeDapp\r\nopen Common\r\n\r\n// import stylesheet\r\nimportAll \"../sass/main.sass\"\r\n\r\n// Dapp Component for executing transactions\r\n\r\ntype DappProps<'txmsg, 'model, 'msg> =\r\n    { makeTxProcessor :UseWeb3ReactHook -> 'txmsg -> JS.Promise<TransactionResponse>\r\n      model: 'model\r\n      dispatch: 'msg -> unit\r\n      childRender: DappChildProps<'txmsg, 'model, 'msg> -> ReactElement }\r\n\r\nand DappChildProps<'txmsg, 'model, 'msg> =\r\n    { model: 'model\r\n      dispatch: 'msg -> unit\r\n      txResult: DappTxResult<'txmsg> option\r\n      txDispatch: 'txmsg -> unit }\r\n\r\nlet Dapp<'txmsg, 'model, 'msg> props =\r\n    FunctionComponent.Of ((fun (props :DappProps<'txmsg, 'model, 'msg>) ->\r\n        let web3 = useWeb3React()\r\n        let txMsg = Hooks.useState None\r\n        let txProcessor = Hooks.useRef None\r\n        let txResult = Hooks.useState None\r\n        Hooks.useEffect(fun _ ->\r\n            match web3.active with\r\n            | true -> txProcessor.current <- (Some (props.makeTxProcessor web3))\r\n            | _ -> ())\r\n        Hooks.useEffect(fun () ->\r\n            match txMsg.current, txProcessor.current with\r\n            | Some txmsg, Some processor ->\r\n                txMsg.update None\r\n                promise {\r\n                    let! response = processor txmsg\r\n                    txResult.update (Some (Response (txmsg, response)))\r\n                    let! confirmed = response.wait()\r\n                    txResult.update (Some (Confirmed (txmsg, confirmed)))\r\n                } |> Promise.catch (fun e ->\r\n                    if e?code = 4001 then txResult.update (Some (UserCancelled txmsg))\r\n                    else txResult.update (Some (UnknownError (txmsg, e)))\r\n                    ) |> Promise.start\r\n            | _ -> ())\r\n        div []\r\n            [props.childRender\r\n                { model = props.model\r\n                  dispatch = props.dispatch\r\n                  txResult = txResult.current\r\n                  txDispatch = Feliz.React.useCallbackRef(fun msg -> txMsg.update (Some msg) ) }]\r\n    ), \"Dapp\", equalsButFunctions) props\r\n\r\n// Page Control\r\nlet pageRender props =\r\n    match props.model.page with\r\n    | Home -> Home.View.root props.model.home props.model.common (HomeMsg >> props.dispatch)\r\n    | View _ | Edit _ -> Tree.View.root props.model.tree props.txResult (TreeMsg >> props.dispatch) props.txDispatch\r\n    | NftDetails _ -> failwith \"ni\"\r\n\r\n// View root\r\nlet root model dispatch = \r\n    web3ReactProvider\r\n        [Web3ReactProviderProps.GetLibrary Common.getLibrary]\r\n        [Dapp<TransactionMsg, Model, Msg> { makeTxProcessor = makeTxProcessor; model = model; dispatch = dispatch; childRender = pageRender }] \r\n\r\nopen Elmish.React\r\nopen Elmish.Debug\r\nopen Elmish.HMR \r\n\r\nlet gbl =\r\n    //let web3 = new Web3(new Web3WsProvider(Common.Config.network.infuraWsUrl))\r\n    //let contract = web3.NewContract(Common.web3treeAbi, Common.Config.network.web3treeContractAddress)\r\n    { web3Modal = obj() //web3Modal\r\n      window = window\r\n      web3 = obj()//web3\r\n      web3treeContract = obj() }//contract}\r\n\r\nlet metamaskChangeAccount _ =\r\n    Cmd.ofSub (fun dispatch ->\r\n        if window?ethereum <> null then\r\n            window?ethereum?on(\"accountsChanged\", fun _ -> dispatch RefreshAccounts))\r\n\r\n//let scrollToBottom model =\r\n//    Cmd.ofSub (fun dispatch ->\r\n//        window.onscroll <- (fun ev ->\r\n//            if ((window.innerHeight + window.pageYOffset + 150.0) >= document.body.offsetHeight) then\r\n//                match model.page with\r\n//                | View _ | Edit _ ->\r\n//                    dispatch (NewMsg New.Types.ShowMoreNFTs)\r\n//                | _ -> ()))\r\n\r\n// App\r\nProgram.mkProgram (init gbl) (update gbl) root\r\n|> Program.withSubscription metamaskChangeAccount\r\n//|> Program.withSubscription scrollToBottom\r\n|> Program.toNavigable (parsePath pageParser) (urlUpdate gbl)\r\n#if DEBUG\r\n|> Program.withDebugger\r\n#endif\r\n|> Program.withReactBatched \"elmish-app\"\r\n|> Program.run\r\n"],"names":["module","exports","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isDisposable","Dispose","tryGetValue","map","key","defaultValue","has","get","Lazy","factory","isValueCreated","createdValue","padWithZeros","i","length","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","o","idMap","set","count","WeakMap","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","String","equalArraysWith","y","eq","equalArrays","equals","Equals","isEquatable","Date","compareDates","xtime","ytime","getTime","comparePrimitives","compareArraysWith","comp","j","compareArrays","compare","CompareTo","isComparable","min","comparer","max","dashify","separator","replace","m","toLowerCase","charAt","changeCase","caseRule","slice","toUpperCase","createObj","fields","fail","kvPair","Error","definedCaseRule","toJSON","value","round","digits","Math","pow","n","toFixed","floor","f","e","r","CURRIED_KEY","uncurry","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","apply","undefined","concat","addToDict","dict","k","v","getItemFromDict","sameType","Object","getPrototypeOf","constructor","declare","cons","superClass","subClass","prototype","create","enumerable","writable","configurable","inherits","SystemObject","entries","join","id","identityHash","compareList","self","other","tail","res","head","List","from","Symbol","iterator","cur","next","done","Union","tag","name","splice","Record","record","getFieldNames","keys","recordToJson","values","thisNames","recordEquals","result","recordCompare","anonRecord","assign","FSharpRef","contents","message","stack","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","cases","enumCases","fullName","getGenerics","t","t1","t2","getRecordElements","k1","v1","k2","v2","record_type","array_type","generic","string_type","bool_type","int32_type","float64_type","info","lastIndexOf","substr","gen","endsWith","isTuple","startsWith","isFunction","makeUnion","uci","expectedLength","makeRecord","makeAnonRecord","obj","Some","some","defaultArg","opt","mapping","Choice","Result","P","c","cmp","MAX_DP","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","UNDEFINED","NUMERIC","parse","nl","test","indexOf","search","substring","Big","DP","RM","dp","rm","more","xc","unshift","pop","stringify","z","push","NE","PE","abs","isneg","yc","l","div","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","d","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","one","sqrt","half","toExponential","mul","toPrecision","sd","valueOf","_Big_","findIndex","normalize","version","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","prefix","AllowHexSpecifier","getRadix","invalidDigits","getInvalidDigits","regexMatch","sign","validResponse","Number","parseInt","isNaN","umin","umax","tryParse","Decimal","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","p","radixToPower","size","multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Addition","LongLib","op_Multiply","op_Division","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","_bitsize","maxValue","getMaxValue","padStart","Enumerator","iter","current","getEnumerator","toIterator","en","MoveNext","Current","makeSeq","seq","append","xs","ys","delay","firstDone","iters","unfold","_a","_b","average","averager","total","fold","acc","Add","GetZero","DivideByInt","collect","output","innerIter","hasFinished","choose","singleton","iterate","_","iterateIndexed","rangeNumber","first","step","last","sumBy","adder","tryFind","fst","offsetRegex","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","_provider","dateWithOffset","dateToISOStringWithOffset","_c","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","DateTime","parseRaw","input","trim","baseDate","timeInSeconds","timeParts","split","parseFloat","offsetParts","offsetInMinutes","detectUTC","op_Subtraction","that","ts","newDate","oldTzOffset","newTzOffset","pattern","options","flags","RegExp","escape","fsFormatRegExp","formatRegExp","isNumeric","isLessThan","_Long","toHex","bytes","le","fromBytesLE","fromBytesBE","hi","lo","toBytesLE","toBytesBE","printf","cont","fsFormat","toText","arg","toFail","formatOnce","str2","padLength","precision","zeroFlag","minusFlag","ch","padLeft","createPrinter","strCopy","idx","intPart","decimalPart","dateToString","isNullOrEmpty","delimiter","fromBase64String","b64Encoded","binary","atob","notSupported","isRight","trimStart","chars","startIndex","MutableMap$00602","pairs","$this$$1","this","this$","hashMap","Map","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","this$$$1","matchValue","pair$$1","MutableMap$00602$$TryFind$$2B595","this$$$2","k$$1","matchValue$$1","MutableMap$00602$$Clear","this$$$4","clear","MutableMap$00602$$get_Count","this$$$5","pairs$$2","$x$$2","$y$$3","this$$$8","k$$4","v$$1","matchValue$$4","msg","MutableMap$00602$$Remove$$2B595","this$$$10","k$$6","matchValue$$6","this$$$11","pairs$$3","pair$$3","item","Clear","Contains","item$$1","matchValue$$7","CopyTo","array","arrayIndex","i$$10","Remove","item$$2","matchValue$$8","delete","k$$7","k$$8","this$$$6","k$$2","matchValue$$2","MutableMap$00602$$get_Item$$2B595","k$$9","this$$$9","k$$5","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","pair$$5","k$$10","v$$2","this$$$7","k$$3","matchValue$$3","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","MapTreeModule$$$size","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","hl","hr","MapTreeModule$$$rebalance","t1h","t2h","MapTreeModule$$$add","m$$3","Compare","c$$1","MapTreeModule$$$iter","$f$$6$$62","$m$$9$$63","f$$6","m$$9","MapTreeModule$$$loop","$m$$19$$92","$acc$$8$$93","m$$19","acc$$8","MapTreeModule$$$toList","m$$20","MapTreeModule$002EMapIterator$00602","started","MapTreeModule$$$collapseLHS","$stack$$111","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","call","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","en$$1","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$$$current","i$$3","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$get_Item$$2B595","__$$8","k$$29","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","MapTreeModule$$$find","comparer$$1","m$$4","c$$3","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","MapTreeModule$$$mem","comparer$$10","k$$12","m$$8","c$$8","isEmpty","m$$23","k$$39","m$$26","k$$33","$comparer$$2$$26","$k$$4$$27","$m$$5$$28","MapTreeModule$$$tryFind","comparer$$2","m$$5","c$$5","__$$23","containsKey","k$$41","m$$28","toSeq","m$$40","ofList","l$$22","comparer$$18","comparer$$13","l$$20","fold$$1","acc$$9","tupledArg","ofSeq","l$$23","comparer$$19","comparer$$16","c$$9","ie","$comparer$$14$$97","$acc$$10$$98","$e$$99","comparer$$14","acc$$10","patternInput$$2","MapTreeModule$$$mkFromEnumerator","MapTreeModule$$$ofSeq","toList","m$$45","toArray","m$$46","res$$6","s$$4","arr$$1","i$$1","x$$15","y$$2","empty","comparer$$21","createMutable","source$$3","comparer$$22","MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3","map$$2","kv","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3682","res$$4","finished","e1","e2","kvp1","kvp2","c$$10","_arg1$$1","k$$34","k$$35","kv$$1","k$$36","v$$26","kv$$2","MutableSet$00601","items","MutableSet$00601$$Add$$2B595","MutableSet$00601$$TryFindIndex$$2B595","MutableSet$00601$$Clear","MutableSet$00601$$get_Count","MutableSet$00601$$Contains$$2B595","MutableSet$00601$$Remove$$2B595","values$$1","value$$2","i$$8","item$$3","add_","x$$1","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$$$height","SetTreeModule$$$mk","l$$2","r$$2","SetTreeModule$$$rebalance","SetTreeModule$$$add","t$$1","SetTreeModule$$$spliceOutSuccessor","t$$3","SetTreeModule$$$remove","comparer$$3","t$$4","patternInput$$3","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","l1","l2","c$$7","SetTreeModule$$$ofSeq","comparer$$20","c$$11","$comparer$$19$$126","$acc$$11$$127","$e$$128","acc$$11","SetTreeModule$$$mkFromEnumerator","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$$$current","SetTreeModule$$$moveNext","FSharpSet","FSharpSet$$$$002Ector$$2528C5CB","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","contains","x$$23","s$$34","x$$11","$comparer$$4$$35","$k$$5$$36","$t$$5$$37","SetTreeModule$$$mem","comparer$$4","t$$5","c$$6","s$$23","elements","comparer$$30","source","comparer$$31","MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D","array$$5","mapIndexed","cons$$1","target$$1","delegateArg0","delegateArg1","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","arrays","cons$$9","arr$$4","arrays$$1","totalIdx","totalLength","result$$4","idx$$1","arr$$6","initialize","count$$8","initializer","cons$$15","result$$7","i$$13","predicate$$13","array$$61","find","chooser$$2","array$$74","cons$$30","x$$6","value$$15","filter","x$$5","zip","array1$$4","array2$$4","result$$10","len$$15","i$$38","equalsWith","array1$$7","array2$$7","comparer$$12","array1$$6","array2$$6","i$$40","result$$13","length1","length2","compareWith","tryHead","array$$105","source$$6","cons$$31","source$$7","cons$$32","source$$8","len$$17","target$$6","i$$48","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","xs$$8","xs$$9","acc$$1","xs$$12","acc$$3","x$$9","xs$$27","_arg1$$7","f$$15","xs$$29","collect$$1","f$$16","xs$$31","ofArray","xs$$50","res$$1","i$$9","col","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","f$$33","xs$$56","_arg1$$11","x$$32","findIndexed","f$$34","xs$$57","f$$32","i$$11","x$$31","value$$1","f$$44","xs$$74","acc$$18","x$$39","y$$10","map$$1","x$$21","that$$1","StringBuilder","capacity","buf","StringBuilder$$$$002Ector$$Z18115A39","StringBuilder$$AppendLine$$Z721C83C5","x$$4","s$$1","CancellationToken","cancelled","_id","_cancelled","_listeners","listener","state","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","computation","binder","onSuccess","ex","protectedBind","computation1","computation2","Bind","generator","sequence","body","While","Delay","protectedReturn","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","_x","defaultCancellationToken","startImmediate","cancellationToken","continuation","exceptionContinuation","cancellationContinuation","startWithContinuations","start","splitters","removeEmpty","arguments","splits","reg","index","lastIndex","url","defaultRequest","httpVerb","req","singleHeader","xs$$28","headers","xhr","serializeMethod","responseText","statusCode","responseType","content","responseHeaders","readyState","status","ResponseContent","response","headerLine","splitAt","getAllResponseHeaders","comparer$$15","arr","res$$2","MapTreeModule$$$ofArray","responseURL","forLoopVar","setRequestHeader","mimeType","overrideMimeType","timeout","send","request","method","Parsimmon","action","seed","forEach","elem","isParser","isBuffer","Buffer","makeSuccess","furthest","expected","makeFailure","mergeReplies","hasOwnProperty","sort","union","makeLineColumnIndex","line","column","lines","assertParser","assertNumber","assertRegexp","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","bytesInChunks","chunkSize","chunks","chunkIndex","toChunks","data","byteLines","byteRow","byteValue","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","linesWithLineNumbers","lineSource","lineNumberLabel","isLineWithError","re","anchoredRegexp","parsers","numParsers","accum","seqMap","mapper","results","alt","sepBy1","parser","then","many","rs","regexp","group","anchored","fullMatch","groupMatch","succeed","lookahead","predicate","skip","eof","type","or","alternative","wrap","leftParser","rightParser","left","middle","thru","wrapper","tieWith","assertArray","tie","prevResult","atMost","atLeast","init","rest","fn","contramap","promap","g","mark","end","node","sepBy","notFollowedBy","text","desc","reply","fallback","ap","chain","of","digit","optWhitespace","cr","lf","newline","others","right","skipped","ps","f$$47","_arg1$$16","strings","ok","anyCharSnippet","otherParser","jint","arg0","jfloat","negJint","tuple","withWhitespace","jnull","jbool","jnumber","stringLiteral","jarray","comma","json","jobject","leftBrace","rightBrace","jvalue","BigNat","bound","BigNatModule$002EFFT$$$pow32","$x$$1","$n$$2","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","$x$$23$$48","$n$$15$$49","n$$15","BigNatModule$$$pow32","$x$$24$$50","$n$$16$$51","x$$24","n$$16","BigNatModule$002EFFT$$$maxTwoPower","Int32Array","BigNatModule$$$baseBits","BigNatModule$$$baseN","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","$na$$62","$i$$9$$63","na","findLeastBound","BigNatModule$$$embed","x$$28","x$$29","r$$3","BigNatModule$$$boundInt","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$add","p$$1","q$$1","b$$2","rbound","r$$6","$i$$16$$75","$n$$25$$76","$c$$77","$p$$78","$q$$79","$r$$5$$80","i$$16","n$$25","r$$5","BigNatModule$$$addP","BigNatModule$$$isZero","p$$4","BigNatModule$$$lt","p$$10","q$$7","q$$6","p$$9","$pa$$2$$108","$qa$$2$$109","$i$$24$$110","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$mulSchoolBookCarry","$r$$12$$130","$c$$8$$131","$k$$4$$132","r$$12","rak$$1","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","value$$3","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$002Eencoding","bigL","twoToBigL","bigK","bigN","BigNatModule$$$mkEncoding","bigK$$2","i$$30","BigNatModule$$$table","BigNatModule$$$mul","p$$20","q$$17","q$$15","pSmall","p$$18","qSmall","p$$15","q$$11","r$$11","rak","p$$17","q$$14","value$$4","r$$14","i$$29","pai$$1","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$$$scaleSubInPlace","x$$57","a$$5","n$$30","j$$4","z$$7","zLo","value$$5","zHi","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","value$$7","zHi$$1","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","p$$8","pn","q$$5","patternInput$$6","f64","f64$$1","$pa$$1$$103","$qa$$1$$104","$i$$23$$105","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","r$$4","BigNatModule$$$boundInt64","rem_u","rem_s","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","degn","kten2ks","$prior$$227","$k$$11$$228","$ten2k$$229","prior","k$$11","ten2k","route","digits$$4","isLeading","n$$46","patternInput$$13","b$$7","a$$12","x$$68","x$$27","array$$31","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$divmod","digits$$2","n$$47","n$$19","i$$12","BigNatModule$$$eval32","BigNatModule$$$ofString","ten","$acc$$5$$235","$i$$50$$236","acc$$5","i$$50","d$$7","build","BigNatModule$$$getSmall","n$$49","i$$32","i$$33","i$$34","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$$posn$$Z67CCE57D","n$$3","BigInteger$$get_SignInt","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","p$$7","q$$4","$pa$$96","$qa$$97","$i$$22$$98","pa","qa","i$$22","check","BigNatModule$0024$0024$0024isZero","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","BigInteger$$$$002Ector$$Z524259C1","n$$7","BigNatModule$0024$0024$0024add","BigNatModule$0024$0024$0024one","BigInteger$$$get_One","BigInteger$$$get_Zero","zero","arg00","text$$1","matchValue$$13","BigNatModule$0024$0024$0024ofString","BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5","clo1","arg10","arg20","clo2","toPlainObject","jsObject","activePatternResult3006","activePatternResult3005","activePatternResult3004","activePatternResult3002","parseNative'","activePatternResult3001","object","two","x$$7","BigNatModule$0024$0024$0024toString","n$$17","BigNatModule$0024$0024$0024hash","obj$$1","BigNatModule$0024$0024$0024lt","BigInteger$$$op_LessThan$$56F059C0","n$$5","nn","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","prop","flattenFuncTypes","typeDef","patternInput","lazyToDelayed","unitVar0","Value","_createTypeInfo","resolvedType","activePatternResult2925","primType","( |PrimitiveType|_| )","typeInfo","activePatternResult2924","types","createTypeInfo","activePatternResult2923","field","activePatternResult2922","( |UnionType|_| )","activePatternResult2921","elemType","activePatternResult2920","activePatternResult2919","activePatternResult2918","activePatternResult2917","( |ArrayType|_| )","activePatternResult2916","activePatternResult2915","activePatternResult2914","activePatternResult2913","activePatternResult2912","genArgs","( |MapType|_| )","keyType","valueType","activePatternResult2911","( |DictionaryType|_| )","activePatternResult2910","activePatternResult2909","activePatternResult2908","typeInfoCache","ti","case","kindOrUri","URL","isRelativeUrl","Uri","decodeURIComponent","parseUrl","href","protocol","host","pathname","hash","DateTimeOffset","offsetMatch","guidRegex","guidRegexNoHyphen","guidRegexHex","validateGuid","doNotThrow","hyphenateGuid","wsTrimAndLowered","containersTrimmed","hyphenatedGuid","newGuid","random","littleEndian","getBytesInt32","DataView","buffer","byteOffset","byteLength","setInt32","window","document","isDefined","flattenMap","( |MapEmpty|_| )","activePatternResult3085","activePatternResult3080","( |MapKey|_| )","( |MapOne|_| )","activePatternResult3084","activePatternResult3082","( |MapNode|_| )","leftMap","rightMap","generateMap","flatteFable3Map","linkedList","flattenFable3Lists","exists","foundCase","testExpr","view","getlElemType","getElemType","genericJson","getTypes","jsonValue","optionalTypeDelayed","insideBrowser","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4","seconds","caseName","activePatternResult3114","expectedCases","clo3","arrayLike","deserialized","fromJsonAs","parsedOptional","arg30","parsedValues","array2","_arg2","caseInfo","caseType","caseIndex","fieldValues","unionOfRecords","unexpectedJson","expectedType","foundDiscriminatorKey","discriminators","keyword","discriminatorValueJson","foundUnionCase","isQuoted","_arg3","getInt32","_arg4","serializedRecord","caseValue","elementTypeDelayed","tupleTypesDelayed","tuples","getType","_arg5","otherwise","_arg6","_arg7","foundCaseName","elementType","comparer$$28","converted","recordValues","_arg8","dictKeys","recordFields","clo4","keyValuePair","hashset","inputJson","flattenedMap","unknownType","getLibrary","provider","web3treeAbi","formatTypes","full","emojis","sb","toHide","link","projection$$2","array$$26","cons$$11","eq$$5","dict$$1","keys$$1","idx$$3","key$$2","key$$3","array$$28","cstr","mstr","markdown","profileNft","bioEnd","links","remaining","bio","global","matches","count$$11","array$$39","cons$$21","count$$12","tokenAddress","nfts","k$$37","__$$6","k$$28","v$$24","addHide","list","gradients","mn","mx","calc","th","tb","tr","tg","color","colors","fromRgb","fromHexStr","kovan","txHash","network","address","baseUrl","username","getColorsForAddress","treeData","darkMode","_arg1$$13","projection$$7","fromMarkdown","reduction","array$$114","getTreeData","tokenId","nft","txt","er","reject","catch","PromiseBuilder","getDisposable","deps","useEffectReact","disposable","dispose","initialValue","callback","callbackFunction","effect","lastRenderCallbackRef","useRef","callbackRef","createDisposable","useLayoutEffectReact","xValue","baseClass","classes","classBaseList","render","displayName","memoizeWith","withKey","__callingMemberName","__callingSourceFile","__callingSourceLine","valueFactory","memoElement","areEqual","props","GetOrAdd","page","totalDays","totalHours","totalMinutes","mdiIcon","getMimeType","niceAddress","niceTimestamp","timestamp","ago","now","jazziconForAddress","width","elems","children","getSimpleGradient","hexColors","web3","useWeb3React","dispatch","operation","dependencies","initial","token","executeOperation","cts","cancel","useEffectWithDeps","useEffect","web3treeContract","getRarityDisplay","rarityRanking","profileImage","treeAccount","css","themeStyles","clo5","clo6","clo7","clo8","clo9","clo10","clo11","clo12","clo13","clo14","clo15","color2","gradientFill","color1","gradientFillHover","hexColor","factor","toRgb","borders","gradientBack","isDarkMode","className","backgroundColorStr","backgroundColor","linearGradient","direction","start1","start2","radialGradient","fadeBottom","fadeTop","radBotRight","radTopLeft","centerFade","getGradientBackgroundStyle","background","tcolor","gradient","GradientButton","i$$26","xs$$127","xs$$128","$error$$246","$i$$21$$247","$acc$$25$$248","$xs$$121$$249","i$$21","acc$$25","xs$$121","takeSplitAux","display","NftAttributeView","title","attributes","nftDetails","NftAttributeList","NftMediaFull","image","blockExpLink","bottom","ens","PageModal","ev","target","chainId","account","errTxt","web3State","saveDisabled","control","controlButtons","editing","hasChanges","valid","isEditing","nameInvalid","nameValid","urlInvalid","urlValid","els","canAdd","EditInput","EditTextArea","canMoveDown","canMoveUp","canEdit","LinkTreeEditLink","ThemeSelector","icon","darkText","showBorder","LinkTreeLink","NftCollectionBadge","section","videoLoading","videoProps","src","controls","makeProfile","showHideInner","NftMedia","ref","collectionHeading","collectionDesc","collection","hidden","NftGalleryNft","shouldScrollTo","videoPlaying","displayFrom","element","onNftClick","onModalClose","getElementsByTagName","handleScroll","innerHeight","pageYOffset","offsetHeight","addEventListener","removeEventListener","goToCollection","firstColIndex","scrollTo","collections","option","NftDetailsModal","NftCollectionBadges","scrollToRef","displayCount","NftGalleryCollection","i1","mapping$$4","array$$14","cons$$10","editState","displayingFirstCol","accountProfileInfo","profileNftState","linksUpdater","update","oldLinks","saveCallback","txResult","DialogModal","EditBar","hide","disabled","LinkTreeEdit","newLinks","copyOfStruct","array1","len1","len2","newArray","cs","dm","NftGallery","oldHidden","s$$20","s$$21","x$$10","mode","arr$$2","comparer$$29","acc$$12","SetTreeModule$$$ofArray","LinkTreeView","Observer","onNext","onCompleted","OnNext","OnError","_e","OnCompleted","_subscriber","delegates","_addHandler","seqIterate","handler","_dotnetDelegates","_removeHandler","_subscribeFromCallback","_subscribeFromObserver","observer","interval","Interval","AutoReset","_elapsed","Event","_enabled","_isDisposed","_intervalId","setInterval","Enabled","Trigger","_timeoutId","clearTimeout","clearInterval","cmd","f$$24","cmds","lists","state$$3","xs$$14","acc$$4","task","ofSuccess","work","choice1Of2","returnVal","Subscribe","visited","unvisited","stringToSomething","mkState","subValue","( arg10@ )","toKeyValuePair","segment","fill","__","ix","wix'","truncate","wix","newUrl","history","pushState","dispatchEvent","parseBefore","gbl","model","user","setClasses","getElementById","console","toUrl","nextProps","_nextState","pageRender","HomePage","txDispatch","EditProfile","ViewProfile","program","rb","reentered","syncDispatch","nextMsg","rix'","runWith","lazyView2With","placeholderId","setState","lastRequest","withReactBatchedUsing","equal","urlUpdate","onLocationChange","mapUpdate","mapView","mapSetState","mapSubscribe","userUpdate","userView","userSetState","userSubscribe","userInit","unitVar1","location","toNavigableWith","querystring","parseHelp","states","segments","splitUrl","parsePath","subscribe","common","profileInfo","accountData","promise","selectedAccount","Web3ReactProviderProps","txMsg","txProcessor","processor","txmsg","lastLocation","onChangeRef"],"sourceRoot":""}